# Get information about the user
query viewer {
  viewer {
    ...UserFragment
  }
}

# Get all connected teams
query teams {
  teams {
    nodes {
      ...TeamFragment
    }
    pageInfo {
      ...PageInfoFragment
    }
    edges {
      cursor
      node {
        ...TeamFragment
      }
    }
  }
}

# Get one team by id
query team($id: String!) {
  team(id: $id) {
    ...TeamFragment
  }
}

# Query for many issues
query issues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issues(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...IssueFragment
    }
    pageInfo {
      ...PageInfoFragment
    }
    edges {
      cursor
      node {
        ...IssueFragment
      }
    }
  }
}

# Query for many issues within a team
query teamIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
  $id: String!
) {
  team(id: $id) {
    issues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...IssueFragment
      }
      pageInfo {
        ...PageInfoFragment
      }
      edges {
        cursor
        node {
          ...IssueFragment
        }
      }
    }
  }
}

# Get one issue by id
query issue($id: String!) {
  issue(id: $id) {
    ...IssueFragment
  }
}

# Get the assignee for an issue
query issueAssignee($id: String!) {
  issue(id: $id) {
    assignee {
      ...UserFragment
    }
  }
}
