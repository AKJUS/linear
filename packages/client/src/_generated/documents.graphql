# A user that has access to the the resources of an organization.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A user that has access to the the resources of an organization."
#   },
#   "name": "User",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user's full name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user's display (nick) name. Unique within each organization.\"\n#   },\n#   \"name\": \"displayName\",\n#   \"type\": \"string\"\n# }\ndisplayName",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user's email address.\"\n#   },\n#   \"name\": \"email\",\n#   \"type\": \"string\"\n# }\nemail",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"An URL to the user's avatar image.\"\n#   },\n#   \"name\": \"avatarUrl\",\n#   \"type\": \"string\"\n# }\navatarUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Reason why is the account disabled.\"\n#   },\n#   \"name\": \"disableReason\",\n#   \"type\": \"string\"\n# }\ndisableReason",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Unique hash for the user to be used in invite URLs.\"\n#   },\n#   \"name\": \"inviteHash\",\n#   \"type\": \"string\"\n# }\ninviteHash",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time the user was seen online. If null, the user is currently online.\"\n#   },\n#   \"name\": \"lastSeen\",\n#   \"type\": \"DateTime\"\n# }\nlastSeen",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the user is an organization administrator.\"\n#   },\n#   \"name\": \"admin\",\n#   \"type\": \"boolean\"\n# }\nadmin",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the user account is active or disabled.\"\n#   },\n#   \"name\": \"active\",\n#   \"type\": \"boolean\"\n# }\nactive",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Number of issues created.\"\n#   },\n#   \"name\": \"createdIssueCount\",\n#   \"type\": \"number\"\n# }\ncreatedIssueCount"
#   ]
# }
fragment User on User {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user's full name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user's display (nick) name. Unique within each organization."
  #   },
  #   "name": "displayName",
  #   "type": "string"
  # }
  displayName
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user's email address."
  #   },
  #   "name": "email",
  #   "type": "string"
  # }
  email
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "An URL to the user's avatar image."
  #   },
  #   "name": "avatarUrl",
  #   "type": "string"
  # }
  avatarUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Reason why is the account disabled."
  #   },
  #   "name": "disableReason",
  #   "type": "string"
  # }
  disableReason
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Unique hash for the user to be used in invite URLs."
  #   },
  #   "name": "inviteHash",
  #   "type": "string"
  # }
  inviteHash
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time the user was seen online. If null, the user is currently online."
  #   },
  #   "name": "lastSeen",
  #   "type": "DateTime"
  # }
  lastSeen
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the user is an organization administrator."
  #   },
  #   "name": "admin",
  #   "type": "boolean"
  # }
  admin
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the user account is active or disabled."
  #   },
  #   "name": "active",
  #   "type": "boolean"
  # }
  active
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Number of issues created."
  #   },
  #   "name": "createdIssueCount",
  #   "type": "number"
  # }
  createdIssueCount
}

# The settings of a user as a JSON object.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "The settings of a user as a JSON object."
#   },
#   "name": "UserSettings",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The notification channel settings the user has selected.\"\n#   },\n#   \"name\": \"notificationPreferences\",\n#   \"type\": \"JSONObject\"\n# }\nnotificationPreferences",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The email types the user has unsubscribed from.\"\n#   },\n#   \"name\": \"unsubscribedFrom\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nunsubscribedFrom",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user to whom this notification was targeted for.\"\n#   },\n#   \"name\": \"user\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\nuser {\n                      id\n                    }"
#   ]
# }
fragment UserSettings on UserSettings {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The notification channel settings the user has selected."
  #   },
  #   "name": "notificationPreferences",
  #   "type": "JSONObject"
  # }
  notificationPreferences
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The email types the user has unsubscribed from."
  #   },
  #   "name": "unsubscribedFrom",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  unsubscribedFrom
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user to whom this notification was targeted for."
  #   },
  #   "name": "user",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  user {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IssueConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Issue\"\n#   }\n# }\nnodes {\n                  ...Issue\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment IssueConnection on IssueConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Issue"
  #   }
  # }
  nodes {
    ...Issue
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# An issue.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An issue."
#   },
#   "name": "Issue",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue's unique number.\"\n#   },\n#   \"name\": \"number\",\n#   \"type\": \"number\"\n# }\nnumber",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue's title.\"\n#   },\n#   \"name\": \"title\",\n#   \"type\": \"string\"\n# }\ntitle",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue's description in markdown format.\"\n#   },\n#   \"name\": \"description\",\n#   \"type\": \"string\"\n# }\ndescription",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue's description as a Prosemirror document.\"\n#   },\n#   \"name\": \"descriptionData\",\n#   \"type\": \"JSON\"\n# }\ndescriptionData",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The priority of the issue.\"\n#   },\n#   \"name\": \"priority\",\n#   \"type\": \"number\"\n# }\npriority",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The estimate of the complexity of the issue..\"\n#   },\n#   \"name\": \"estimate\",\n#   \"type\": \"number\"\n# }\nestimate",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The order of the item in its column on the board.\"\n#   },\n#   \"name\": \"boardOrder\",\n#   \"type\": \"number\"\n# }\nboardOrder",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the issue was moved into started state.\"\n#   },\n#   \"name\": \"startedAt\",\n#   \"type\": \"DateTime\"\n# }\nstartedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the issue was moved into completed state.\"\n#   },\n#   \"name\": \"completedAt\",\n#   \"type\": \"DateTime\"\n# }\ncompletedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the issue was moved into canceled state.\"\n#   },\n#   \"name\": \"canceledAt\",\n#   \"type\": \"DateTime\"\n# }\ncanceledAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the issue was automatically closed by the auto pruning process.\"\n#   },\n#   \"name\": \"autoClosedAt\",\n#   \"type\": \"DateTime\"\n# }\nautoClosedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the issue was automatically archived by the auto pruning process.\"\n#   },\n#   \"name\": \"autoArchivedAt\",\n#   \"type\": \"DateTime\"\n# }\nautoArchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The date at which the issue is due.\"\n#   },\n#   \"name\": \"dueDate\",\n#   \"type\": \"TimelessDateScalar\"\n# }\ndueDate",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Previous identifiers of the issue if it has been moved between teams.\"\n#   },\n#   \"name\": \"previousIdentifiers\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\npreviousIdentifiers",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The order of the item in the sub-issue list. Only set if the issue has a parent.\"\n#   },\n#   \"name\": \"subIssueSortOrder\",\n#   \"type\": \"number\"\n# }\nsubIssueSortOrder",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Issue's human readable identifier (e.g. ENG-123).\"\n#   },\n#   \"name\": \"identifier\",\n#   \"type\": \"string\"\n# }\nidentifier",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Label for the priority.\"\n#   },\n#   \"name\": \"priorityLabel\",\n#   \"type\": \"string\"\n# }\npriorityLabel",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Issue URL.\"\n#   },\n#   \"name\": \"url\",\n#   \"type\": \"string\"\n# }\nurl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that the issue is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\nteam {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The cycle that the issue is associated with.\"\n#   },\n#   \"name\": \"cycle\",\n#   \"type\": \"Cycle\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific cycle.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"cycle\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Cycle\"\n#       }\n#     }\n#   }\n# }\ncycle {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The workflow state that the issue is associated with.\"\n#   },\n#   \"name\": \"state\",\n#   \"type\": \"WorkflowState\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific state.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"workflowState\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"WorkflowState\"\n#       }\n#     }\n#   }\n# }\nstate {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user to whom the issue is assigned to.\"\n#   },\n#   \"name\": \"assignee\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\nassignee {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The parent of the issue.\"\n#   },\n#   \"name\": \"parent\",\n#   \"type\": \"Issue\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific issue.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issue\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Issue\"\n#       }\n#     }\n#   }\n# }\nparent {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project that the issue is associated with.\"\n#   },\n#   \"name\": \"project\",\n#   \"type\": \"Project\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific project.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"project\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Project\"\n#       }\n#     }\n#   }\n# }\nproject {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Suggested branch name for the issue.\"\n#   },\n#   \"name\": \"branchName\",\n#   \"type\": \"string\"\n# }\nbranchName",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the issue.\"\n#   },\n#   \"name\": \"creator\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ncreator {\n                      id\n                    }"
#   ]
# }
fragment Issue on Issue {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue's unique number."
  #   },
  #   "name": "number",
  #   "type": "number"
  # }
  number
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue's title."
  #   },
  #   "name": "title",
  #   "type": "string"
  # }
  title
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue's description in markdown format."
  #   },
  #   "name": "description",
  #   "type": "string"
  # }
  description
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue's description as a Prosemirror document."
  #   },
  #   "name": "descriptionData",
  #   "type": "JSON"
  # }
  descriptionData
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The priority of the issue."
  #   },
  #   "name": "priority",
  #   "type": "number"
  # }
  priority
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The estimate of the complexity of the issue.."
  #   },
  #   "name": "estimate",
  #   "type": "number"
  # }
  estimate
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The order of the item in its column on the board."
  #   },
  #   "name": "boardOrder",
  #   "type": "number"
  # }
  boardOrder
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the issue was moved into started state."
  #   },
  #   "name": "startedAt",
  #   "type": "DateTime"
  # }
  startedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the issue was moved into completed state."
  #   },
  #   "name": "completedAt",
  #   "type": "DateTime"
  # }
  completedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the issue was moved into canceled state."
  #   },
  #   "name": "canceledAt",
  #   "type": "DateTime"
  # }
  canceledAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the issue was automatically closed by the auto pruning process."
  #   },
  #   "name": "autoClosedAt",
  #   "type": "DateTime"
  # }
  autoClosedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the issue was automatically archived by the auto pruning process."
  #   },
  #   "name": "autoArchivedAt",
  #   "type": "DateTime"
  # }
  autoArchivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The date at which the issue is due."
  #   },
  #   "name": "dueDate",
  #   "type": "TimelessDateScalar"
  # }
  dueDate
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Previous identifiers of the issue if it has been moved between teams."
  #   },
  #   "name": "previousIdentifiers",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  previousIdentifiers
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The order of the item in the sub-issue list. Only set if the issue has a parent."
  #   },
  #   "name": "subIssueSortOrder",
  #   "type": "number"
  # }
  subIssueSortOrder
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Issue's human readable identifier (e.g. ENG-123)."
  #   },
  #   "name": "identifier",
  #   "type": "string"
  # }
  identifier
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Label for the priority."
  #   },
  #   "name": "priorityLabel",
  #   "type": "string"
  # }
  priorityLabel
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Issue URL."
  #   },
  #   "name": "url",
  #   "type": "string"
  # }
  url
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that the issue is associated with."
  #   },
  #   "name": "team",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The cycle that the issue is associated with."
  #   },
  #   "name": "cycle",
  #   "type": "Cycle"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific cycle."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "cycle"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Cycle"
  #       }
  #     }
  #   }
  # }
  cycle {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The workflow state that the issue is associated with."
  #   },
  #   "name": "state",
  #   "type": "WorkflowState"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific state."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "workflowState"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "WorkflowState"
  #       }
  #     }
  #   }
  # }
  state {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user to whom the issue is assigned to."
  #   },
  #   "name": "assignee",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  assignee {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The parent of the issue."
  #   },
  #   "name": "parent",
  #   "type": "Issue"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific issue."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issue"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Issue"
  #       }
  #     }
  #   }
  # }
  parent {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project that the issue is associated with."
  #   },
  #   "name": "project",
  #   "type": "Project"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific project."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "project"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Project"
  #       }
  #     }
  #   }
  # }
  project {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Suggested branch name for the issue."
  #   },
  #   "name": "branchName",
  #   "type": "string"
  # }
  branchName
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the issue."
  #   },
  #   "name": "creator",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  creator {
    id
  }
}

# An organizational unit that contains issues.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An organizational unit that contains issues."
#   },
#   "name": "Team",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team's name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team's unique key. The key is used in URLs.\"\n#   },\n#   \"name\": \"key\",\n#   \"type\": \"string\"\n# }\nkey",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team's description.\"\n#   },\n#   \"name\": \"description\",\n#   \"type\": \"string\"\n# }\ndescription",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the team uses cycles.\"\n#   },\n#   \"name\": \"cyclesEnabled\",\n#   \"type\": \"boolean\"\n# }\ncyclesEnabled",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The day of the week that a new cycle starts.\"\n#   },\n#   \"name\": \"cycleStartDay\",\n#   \"type\": \"number\"\n# }\ncycleStartDay",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The duration of a cycle in weeks.\"\n#   },\n#   \"name\": \"cycleDuration\",\n#   \"type\": \"number\"\n# }\ncycleDuration",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The cooldown time after each cycle in weeks.\"\n#   },\n#   \"name\": \"cycleCooldownTime\",\n#   \"type\": \"number\"\n# }\ncycleCooldownTime",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Auto assign started issues to current cycle.\"\n#   },\n#   \"name\": \"cycleIssueAutoAssignStarted\",\n#   \"type\": \"boolean\"\n# }\ncycleIssueAutoAssignStarted",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Auto assign completed issues to current cycle.\"\n#   },\n#   \"name\": \"cycleIssueAutoAssignCompleted\",\n#   \"type\": \"boolean\"\n# }\ncycleIssueAutoAssignCompleted",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Only allow issues issues with cycles in Active Issues.\"\n#   },\n#   \"name\": \"cycleLockToActive\",\n#   \"type\": \"boolean\"\n# }\ncycleLockToActive",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"How many upcoming cycles to create.\"\n#   },\n#   \"name\": \"upcomingCycleCount\",\n#   \"type\": \"number\"\n# }\nupcomingCycleCount",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The timezone of the team. Defaults to \\\"America/Los_Angeles\\\"\"\n#   },\n#   \"name\": \"timezone\",\n#   \"type\": \"string\"\n# }\ntimezone",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Unique hash for the team to be used in invite URLs.\"\n#   },\n#   \"name\": \"inviteHash\",\n#   \"type\": \"string\"\n# }\ninviteHash",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue estimation type to use.\"\n#   },\n#   \"name\": \"issueEstimationType\",\n#   \"type\": \"string\"\n# }\nissueEstimationType",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether to allow zeros in issues estimates.\"\n#   },\n#   \"name\": \"issueEstimationAllowZero\",\n#   \"type\": \"boolean\"\n# }\nissueEstimationAllowZero",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether to add additional points to the estimate scale.\"\n#   },\n#   \"name\": \"issueEstimationExtended\",\n#   \"type\": \"boolean\"\n# }\nissueEstimationExtended",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"What to use as an default estimate for unestimated issues.\"\n#   },\n#   \"name\": \"defaultIssueEstimate\",\n#   \"type\": \"number\"\n# }\ndefaultIssueEstimate",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The default template to use for new issues created by members of the team.\"\n#   },\n#   \"name\": \"defaultTemplateForMembersId\",\n#   \"type\": \"string\"\n# }\ndefaultTemplateForMembersId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The default template to use for new issues created by non-members of the team.\"\n#   },\n#   \"name\": \"defaultTemplateForNonMembersId\",\n#   \"type\": \"string\"\n# }\ndefaultTemplateForNonMembersId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The workflow state into which issues are moved when a PR has been opened as draft.\"\n#   },\n#   \"name\": \"draftWorkflowState\",\n#   \"type\": \"WorkflowState\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific state.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"workflowState\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"WorkflowState\"\n#       }\n#     }\n#   }\n# }\ndraftWorkflowState {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The workflow state into which issues are moved when a PR has been opened.\"\n#   },\n#   \"name\": \"startWorkflowState\",\n#   \"type\": \"WorkflowState\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific state.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"workflowState\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"WorkflowState\"\n#       }\n#     }\n#   }\n# }\nstartWorkflowState {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The workflow state into which issues are moved when a review has been requested for the PR.\"\n#   },\n#   \"name\": \"reviewWorkflowState\",\n#   \"type\": \"WorkflowState\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific state.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"workflowState\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"WorkflowState\"\n#       }\n#     }\n#   }\n# }\nreviewWorkflowState {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The workflow state into which issues are moved when a PR has been merged.\"\n#   },\n#   \"name\": \"mergeWorkflowState\",\n#   \"type\": \"WorkflowState\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific state.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"workflowState\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"WorkflowState\"\n#       }\n#     }\n#   }\n# }\nmergeWorkflowState {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether to group recent issue history entries.\"\n#   },\n#   \"name\": \"groupIssueHistory\",\n#   \"type\": \"boolean\"\n# }\ngroupIssueHistory",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether to send new issue notifications to Slack.\"\n#   },\n#   \"name\": \"slackNewIssue\",\n#   \"type\": \"boolean\"\n# }\nslackNewIssue",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether to send new issue comment notifications to Slack.\"\n#   },\n#   \"name\": \"slackIssueComments\",\n#   \"type\": \"boolean\"\n# }\nslackIssueComments",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether to send new issue status updates to Slack.\"\n#   },\n#   \"name\": \"slackIssueStatuses\",\n#   \"type\": \"boolean\"\n# }\nslackIssueStatuses",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Period after which issues are automatically closed in months. Null/undefined means disabled.\"\n#   },\n#   \"name\": \"autoClosePeriod\",\n#   \"type\": \"number\"\n# }\nautoClosePeriod",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The canceled workflow state which auto closed issues will be set to. Defaults to the first canceled state.\"\n#   },\n#   \"name\": \"autoCloseStateId\",\n#   \"type\": \"string\"\n# }\nautoCloseStateId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Period after which automatically closed and completed issues are automatically archived in months. Null/undefined means disabled.\"\n#   },\n#   \"name\": \"autoArchivePeriod\",\n#   \"type\": \"number\"\n# }\nautoArchivePeriod",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.\"\n#   },\n#   \"name\": \"markedAsDuplicateWorkflowState\",\n#   \"type\": \"WorkflowState\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific state.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"workflowState\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"WorkflowState\"\n#       }\n#     }\n#   }\n# }\nmarkedAsDuplicateWorkflowState {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Team's currently active cycle.\"\n#   },\n#   \"name\": \"activeCycle\",\n#   \"type\": \"Cycle\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific cycle.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"cycle\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Cycle\"\n#       }\n#     }\n#   }\n# }\nactiveCycle {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Calender feed (iCal) for cycles.\"\n#   },\n#   \"name\": \"cycleCalenderUrl\",\n#   \"type\": \"string\"\n# }\ncycleCalenderUrl"
#   ]
# }
fragment Team on Team {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team's name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team's unique key. The key is used in URLs."
  #   },
  #   "name": "key",
  #   "type": "string"
  # }
  key
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team's description."
  #   },
  #   "name": "description",
  #   "type": "string"
  # }
  description
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the team uses cycles."
  #   },
  #   "name": "cyclesEnabled",
  #   "type": "boolean"
  # }
  cyclesEnabled
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The day of the week that a new cycle starts."
  #   },
  #   "name": "cycleStartDay",
  #   "type": "number"
  # }
  cycleStartDay
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The duration of a cycle in weeks."
  #   },
  #   "name": "cycleDuration",
  #   "type": "number"
  # }
  cycleDuration
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The cooldown time after each cycle in weeks."
  #   },
  #   "name": "cycleCooldownTime",
  #   "type": "number"
  # }
  cycleCooldownTime
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Auto assign started issues to current cycle."
  #   },
  #   "name": "cycleIssueAutoAssignStarted",
  #   "type": "boolean"
  # }
  cycleIssueAutoAssignStarted
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Auto assign completed issues to current cycle."
  #   },
  #   "name": "cycleIssueAutoAssignCompleted",
  #   "type": "boolean"
  # }
  cycleIssueAutoAssignCompleted
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Only allow issues issues with cycles in Active Issues."
  #   },
  #   "name": "cycleLockToActive",
  #   "type": "boolean"
  # }
  cycleLockToActive
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "How many upcoming cycles to create."
  #   },
  #   "name": "upcomingCycleCount",
  #   "type": "number"
  # }
  upcomingCycleCount
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The timezone of the team. Defaults to \"America/Los_Angeles\""
  #   },
  #   "name": "timezone",
  #   "type": "string"
  # }
  timezone
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Unique hash for the team to be used in invite URLs."
  #   },
  #   "name": "inviteHash",
  #   "type": "string"
  # }
  inviteHash
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue estimation type to use."
  #   },
  #   "name": "issueEstimationType",
  #   "type": "string"
  # }
  issueEstimationType
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether to allow zeros in issues estimates."
  #   },
  #   "name": "issueEstimationAllowZero",
  #   "type": "boolean"
  # }
  issueEstimationAllowZero
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether to add additional points to the estimate scale."
  #   },
  #   "name": "issueEstimationExtended",
  #   "type": "boolean"
  # }
  issueEstimationExtended
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "What to use as an default estimate for unestimated issues."
  #   },
  #   "name": "defaultIssueEstimate",
  #   "type": "number"
  # }
  defaultIssueEstimate
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The default template to use for new issues created by members of the team."
  #   },
  #   "name": "defaultTemplateForMembersId",
  #   "type": "string"
  # }
  defaultTemplateForMembersId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The default template to use for new issues created by non-members of the team."
  #   },
  #   "name": "defaultTemplateForNonMembersId",
  #   "type": "string"
  # }
  defaultTemplateForNonMembersId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The workflow state into which issues are moved when a PR has been opened as draft."
  #   },
  #   "name": "draftWorkflowState",
  #   "type": "WorkflowState"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific state."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "workflowState"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "WorkflowState"
  #       }
  #     }
  #   }
  # }
  draftWorkflowState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The workflow state into which issues are moved when a PR has been opened."
  #   },
  #   "name": "startWorkflowState",
  #   "type": "WorkflowState"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific state."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "workflowState"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "WorkflowState"
  #       }
  #     }
  #   }
  # }
  startWorkflowState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The workflow state into which issues are moved when a review has been requested for the PR."
  #   },
  #   "name": "reviewWorkflowState",
  #   "type": "WorkflowState"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific state."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "workflowState"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "WorkflowState"
  #       }
  #     }
  #   }
  # }
  reviewWorkflowState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The workflow state into which issues are moved when a PR has been merged."
  #   },
  #   "name": "mergeWorkflowState",
  #   "type": "WorkflowState"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific state."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "workflowState"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "WorkflowState"
  #       }
  #     }
  #   }
  # }
  mergeWorkflowState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether to group recent issue history entries."
  #   },
  #   "name": "groupIssueHistory",
  #   "type": "boolean"
  # }
  groupIssueHistory
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether to send new issue notifications to Slack."
  #   },
  #   "name": "slackNewIssue",
  #   "type": "boolean"
  # }
  slackNewIssue
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether to send new issue comment notifications to Slack."
  #   },
  #   "name": "slackIssueComments",
  #   "type": "boolean"
  # }
  slackIssueComments
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether to send new issue status updates to Slack."
  #   },
  #   "name": "slackIssueStatuses",
  #   "type": "boolean"
  # }
  slackIssueStatuses
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Period after which issues are automatically closed in months. Null/undefined means disabled."
  #   },
  #   "name": "autoClosePeriod",
  #   "type": "number"
  # }
  autoClosePeriod
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The canceled workflow state which auto closed issues will be set to. Defaults to the first canceled state."
  #   },
  #   "name": "autoCloseStateId",
  #   "type": "string"
  # }
  autoCloseStateId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Period after which automatically closed and completed issues are automatically archived in months. Null/undefined means disabled."
  #   },
  #   "name": "autoArchivePeriod",
  #   "type": "number"
  # }
  autoArchivePeriod
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state."
  #   },
  #   "name": "markedAsDuplicateWorkflowState",
  #   "type": "WorkflowState"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific state."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "workflowState"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "WorkflowState"
  #       }
  #     }
  #   }
  # }
  markedAsDuplicateWorkflowState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Team's currently active cycle."
  #   },
  #   "name": "activeCycle",
  #   "type": "Cycle"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific cycle."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "cycle"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Cycle"
  #       }
  #     }
  #   }
  # }
  activeCycle {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Calender feed (iCal) for cycles."
  #   },
  #   "name": "cycleCalenderUrl",
  #   "type": "string"
  # }
  cycleCalenderUrl
}

# A state in a team workflow.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A state in a team workflow."
#   },
#   "name": "WorkflowState",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The state's name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The state's UI color as a HEX string.\"\n#   },\n#   \"name\": \"color\",\n#   \"type\": \"string\"\n# }\ncolor",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Description of the state.\"\n#   },\n#   \"name\": \"description\",\n#   \"type\": \"string\"\n# }\ndescription",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The position of the state in the team flow.\"\n#   },\n#   \"name\": \"position\",\n#   \"type\": \"number\"\n# }\nposition",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The type of the state.\"\n#   },\n#   \"name\": \"type\",\n#   \"type\": \"string\"\n# }\ntype",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team to which this state belongs to.\"\n#   },\n#   \"name\": \"team\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\nteam {\n                      id\n                    }"
#   ]
# }
fragment WorkflowState on WorkflowState {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The state's name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The state's UI color as a HEX string."
  #   },
  #   "name": "color",
  #   "type": "string"
  # }
  color
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Description of the state."
  #   },
  #   "name": "description",
  #   "type": "string"
  # }
  description
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The position of the state in the team flow."
  #   },
  #   "name": "position",
  #   "type": "number"
  # }
  position
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The type of the state."
  #   },
  #   "name": "type",
  #   "type": "string"
  # }
  type
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team to which this state belongs to."
  #   },
  #   "name": "team",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  team {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CycleConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Cycle\"\n#   }\n# }\nnodes {\n                  ...Cycle\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment CycleConnection on CycleConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Cycle"
  #   }
  # }
  nodes {
    ...Cycle
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# A set of issues to be resolved in a specified amount of time.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A set of issues to be resolved in a specified amount of time."
#   },
#   "name": "Cycle",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The number of the cycle.\"\n#   },\n#   \"name\": \"number\",\n#   \"type\": \"number\"\n# }\nnumber",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The custom name of the cycle.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The start time of the cycle.\"\n#   },\n#   \"name\": \"startsAt\",\n#   \"type\": \"DateTime\"\n# }\nstartsAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The end time of the cycle.\"\n#   },\n#   \"name\": \"endsAt\",\n#   \"type\": \"DateTime\"\n# }\nendsAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The completion time of the cycle. If null, the cycle hasn't been completed.\"\n#   },\n#   \"name\": \"completedAt\",\n#   \"type\": \"DateTime\"\n# }\ncompletedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The total number of issues in the cycle after each day.\"\n#   },\n#   \"name\": \"issueCountHistory\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"number\"\n#   }\n# }\nissueCountHistory",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The number of completed issues in the cycle after each day.\"\n#   },\n#   \"name\": \"completedIssueCountHistory\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"number\"\n#   }\n# }\ncompletedIssueCountHistory",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The total number of estimation points after each day.\"\n#   },\n#   \"name\": \"scopeHistory\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"number\"\n#   }\n# }\nscopeHistory",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The number of completed estimation points after each day.\"\n#   },\n#   \"name\": \"completedScopeHistory\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"number\"\n#   }\n# }\ncompletedScopeHistory",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that the cycle is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\nteam {\n                      id\n                    }"
#   ]
# }
fragment Cycle on Cycle {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The number of the cycle."
  #   },
  #   "name": "number",
  #   "type": "number"
  # }
  number
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The custom name of the cycle."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The start time of the cycle."
  #   },
  #   "name": "startsAt",
  #   "type": "DateTime"
  # }
  startsAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The end time of the cycle."
  #   },
  #   "name": "endsAt",
  #   "type": "DateTime"
  # }
  endsAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The completion time of the cycle. If null, the cycle hasn't been completed."
  #   },
  #   "name": "completedAt",
  #   "type": "DateTime"
  # }
  completedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The total number of issues in the cycle after each day."
  #   },
  #   "name": "issueCountHistory",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "number"
  #   }
  # }
  issueCountHistory
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The number of completed issues in the cycle after each day."
  #   },
  #   "name": "completedIssueCountHistory",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "number"
  #   }
  # }
  completedIssueCountHistory
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The total number of estimation points after each day."
  #   },
  #   "name": "scopeHistory",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "number"
  #   }
  # }
  scopeHistory
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The number of completed estimation points after each day."
  #   },
  #   "name": "completedScopeHistory",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "number"
  #   }
  # }
  completedScopeHistory
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that the cycle is associated with."
  #   },
  #   "name": "team",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  team {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "PageInfo",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Indicates if there are more results when paginating backward.\"\n#   },\n#   \"name\": \"hasPreviousPage\",\n#   \"type\": \"boolean\"\n# }\nhasPreviousPage",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Indicates if there are more results when paginating forward.\"\n#   },\n#   \"name\": \"hasNextPage\",\n#   \"type\": \"boolean\"\n# }\nhasNextPage",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Cursor representing the first result in the paginated results.\"\n#   },\n#   \"name\": \"startCursor\",\n#   \"type\": \"string\"\n# }\nstartCursor",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Cursor representing the last result in the paginated results.\"\n#   },\n#   \"name\": \"endCursor\",\n#   \"type\": \"string\"\n# }\nendCursor"
#   ]
# }
fragment PageInfo on PageInfo {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Indicates if there are more results when paginating backward."
  #   },
  #   "name": "hasPreviousPage",
  #   "type": "boolean"
  # }
  hasPreviousPage
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Indicates if there are more results when paginating forward."
  #   },
  #   "name": "hasNextPage",
  #   "type": "boolean"
  # }
  hasNextPage
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Cursor representing the first result in the paginated results."
  #   },
  #   "name": "startCursor",
  #   "type": "string"
  # }
  startCursor
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Cursor representing the last result in the paginated results."
  #   },
  #   "name": "endCursor",
  #   "type": "string"
  # }
  endCursor
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "TeamMembershipConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"TeamMembership\"\n#   }\n# }\nnodes {\n                  ...TeamMembership\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment TeamMembershipConnection on TeamMembershipConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "TeamMembership"
  #   }
  # }
  nodes {
    ...TeamMembership
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# Defines the membership of a user to a team.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Defines the membership of a user to a team."
#   },
#   "name": "TeamMembership",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user that the membership is associated with.\"\n#   },\n#   \"name\": \"user\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\nuser {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that the membership is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\nteam {\n                      id\n                    }"
#   ]
# }
fragment TeamMembership on TeamMembership {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user that the membership is associated with."
  #   },
  #   "name": "user",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  user {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that the membership is associated with."
  #   },
  #   "name": "team",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  team {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ProjectConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Project\"\n#   }\n# }\nnodes {\n                  ...Project\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment ProjectConnection on ProjectConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Project"
  #   }
  # }
  nodes {
    ...Project
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# A project.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A project."
#   },
#   "name": "Project",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project's name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project's description.\"\n#   },\n#   \"name\": \"description\",\n#   \"type\": \"string\"\n# }\ndescription",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project's unique URL slug.\"\n#   },\n#   \"name\": \"slugId\",\n#   \"type\": \"string\"\n# }\nslugId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The icon of the project.\"\n#   },\n#   \"name\": \"icon\",\n#   \"type\": \"string\"\n# }\nicon",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project's color.\"\n#   },\n#   \"name\": \"color\",\n#   \"type\": \"string\"\n# }\ncolor",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The type of the state.\"\n#   },\n#   \"name\": \"state\",\n#   \"type\": \"string\"\n# }\nstate",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the project.\"\n#   },\n#   \"name\": \"creator\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ncreator {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project lead.\"\n#   },\n#   \"name\": \"lead\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\nlead {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The milestone that this project is associated with.\"\n#   },\n#   \"name\": \"milestone\",\n#   \"type\": \"Milestone\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific milestone.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"milestone\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Milestone\"\n#       }\n#     }\n#   }\n# }\nmilestone {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The estimated completion date of the project.\"\n#   },\n#   \"name\": \"targetDate\",\n#   \"type\": \"TimelessDateScalar\"\n# }\ntargetDate",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the project was moved into started state.\"\n#   },\n#   \"name\": \"startedAt\",\n#   \"type\": \"DateTime\"\n# }\nstartedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the project was moved into completed state.\"\n#   },\n#   \"name\": \"completedAt\",\n#   \"type\": \"DateTime\"\n# }\ncompletedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the project was moved into canceled state.\"\n#   },\n#   \"name\": \"canceledAt\",\n#   \"type\": \"DateTime\"\n# }\ncanceledAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The sort order for the project within its milestone.\"\n#   },\n#   \"name\": \"sortOrder\",\n#   \"type\": \"number\"\n# }\nsortOrder",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The total number of issues in the project after each week.\"\n#   },\n#   \"name\": \"issueCountHistory\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"number\"\n#   }\n# }\nissueCountHistory",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The number of completed issues in the project after each week.\"\n#   },\n#   \"name\": \"completedIssueCountHistory\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"number\"\n#   }\n# }\ncompletedIssueCountHistory",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The total number of estimation points after each week.\"\n#   },\n#   \"name\": \"scopeHistory\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"number\"\n#   }\n# }\nscopeHistory",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The number of completed estimation points after each week.\"\n#   },\n#   \"name\": \"completedScopeHistory\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"number\"\n#   }\n# }\ncompletedScopeHistory",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether to send new issue notifications to Slack.\"\n#   },\n#   \"name\": \"slackNewIssue\",\n#   \"type\": \"boolean\"\n# }\nslackNewIssue",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether to send new issue comment notifications to Slack.\"\n#   },\n#   \"name\": \"slackIssueComments\",\n#   \"type\": \"boolean\"\n# }\nslackIssueComments",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether to send new issue status updates to Slack.\"\n#   },\n#   \"name\": \"slackIssueStatuses\",\n#   \"type\": \"boolean\"\n# }\nslackIssueStatuses"
#   ]
# }
fragment Project on Project {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project's name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project's description."
  #   },
  #   "name": "description",
  #   "type": "string"
  # }
  description
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project's unique URL slug."
  #   },
  #   "name": "slugId",
  #   "type": "string"
  # }
  slugId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The icon of the project."
  #   },
  #   "name": "icon",
  #   "type": "string"
  # }
  icon
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project's color."
  #   },
  #   "name": "color",
  #   "type": "string"
  # }
  color
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The type of the state."
  #   },
  #   "name": "state",
  #   "type": "string"
  # }
  state
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the project."
  #   },
  #   "name": "creator",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project lead."
  #   },
  #   "name": "lead",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  lead {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The milestone that this project is associated with."
  #   },
  #   "name": "milestone",
  #   "type": "Milestone"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific milestone."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "milestone"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Milestone"
  #       }
  #     }
  #   }
  # }
  milestone {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The estimated completion date of the project."
  #   },
  #   "name": "targetDate",
  #   "type": "TimelessDateScalar"
  # }
  targetDate
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the project was moved into started state."
  #   },
  #   "name": "startedAt",
  #   "type": "DateTime"
  # }
  startedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the project was moved into completed state."
  #   },
  #   "name": "completedAt",
  #   "type": "DateTime"
  # }
  completedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the project was moved into canceled state."
  #   },
  #   "name": "canceledAt",
  #   "type": "DateTime"
  # }
  canceledAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The sort order for the project within its milestone."
  #   },
  #   "name": "sortOrder",
  #   "type": "number"
  # }
  sortOrder
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The total number of issues in the project after each week."
  #   },
  #   "name": "issueCountHistory",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "number"
  #   }
  # }
  issueCountHistory
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The number of completed issues in the project after each week."
  #   },
  #   "name": "completedIssueCountHistory",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "number"
  #   }
  # }
  completedIssueCountHistory
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The total number of estimation points after each week."
  #   },
  #   "name": "scopeHistory",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "number"
  #   }
  # }
  scopeHistory
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The number of completed estimation points after each week."
  #   },
  #   "name": "completedScopeHistory",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "number"
  #   }
  # }
  completedScopeHistory
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether to send new issue notifications to Slack."
  #   },
  #   "name": "slackNewIssue",
  #   "type": "boolean"
  # }
  slackNewIssue
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether to send new issue comment notifications to Slack."
  #   },
  #   "name": "slackIssueComments",
  #   "type": "boolean"
  # }
  slackIssueComments
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether to send new issue status updates to Slack."
  #   },
  #   "name": "slackIssueStatuses",
  #   "type": "boolean"
  # }
  slackIssueStatuses
}

# A milestone that contains projects.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A milestone that contains projects."
#   },
#   "name": "Milestone",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The name of the milestone.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The sort order for the milestone.\"\n#   },\n#   \"name\": \"sortOrder\",\n#   \"type\": \"number\"\n# }\nsortOrder"
#   ]
# }
fragment Milestone on Milestone {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The name of the milestone."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The sort order for the milestone."
  #   },
  #   "name": "sortOrder",
  #   "type": "number"
  # }
  sortOrder
}

# An organization. Organizations are root-level objects that contain user accounts and teams.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An organization. Organizations are root-level objects that contain user accounts and teams."
#   },
#   "name": "Organization",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization's name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization's unique URL key.\"\n#   },\n#   \"name\": \"urlKey\",\n#   \"type\": \"string\"\n# }\nurlKey",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization's logo URL.\"\n#   },\n#   \"name\": \"logoUrl\",\n#   \"type\": \"string\"\n# }\nlogoUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"upgradeThresholdExceeded\",\n#   \"type\": \"boolean\"\n# }\nupgradeThresholdExceeded",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Rolling 30-day total upload volume for the organization, in megabytes.\"\n#   },\n#   \"name\": \"periodUploadVolume\",\n#   \"type\": \"number\"\n# }\nperiodUploadVolume",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"How git branches are formatted. If null, default formatting will be used.\"\n#   },\n#   \"name\": \"gitBranchFormat\",\n#   \"type\": \"string\"\n# }\ngitBranchFormat",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the Git integration linkback messages should be sent to private repositories.\"\n#   },\n#   \"name\": \"gitLinkbackMessagesEnabled\",\n#   \"type\": \"boolean\"\n# }\ngitLinkbackMessagesEnabled",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the Git integration linkback messages should be sent to public repositories.\"\n#   },\n#   \"name\": \"gitPublicLinkbackMessagesEnabled\",\n#   \"type\": \"boolean\"\n# }\ngitPublicLinkbackMessagesEnabled",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the organization is using a roadmap.\"\n#   },\n#   \"name\": \"roadmapEnabled\",\n#   \"type\": \"boolean\"\n# }\nroadmapEnabled",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether SAML authentication is enabled for organization.\"\n#   },\n#   \"name\": \"samlEnabled\",\n#   \"type\": \"boolean\"\n# }\nsamlEnabled",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Allowed authentication providers, empty array means all are allowed\"\n#   },\n#   \"name\": \"allowedAuthServices\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nallowedAuthServices",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Number of active users in the organization.\"\n#   },\n#   \"name\": \"userCount\",\n#   \"type\": \"number\"\n# }\nuserCount",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Number of issues in the organization.\"\n#   },\n#   \"name\": \"createdIssueCount\",\n#   \"type\": \"number\"\n# }\ncreatedIssueCount"
#   ]
# }
fragment Organization on Organization {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization's name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization's unique URL key."
  #   },
  #   "name": "urlKey",
  #   "type": "string"
  # }
  urlKey
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization's logo URL."
  #   },
  #   "name": "logoUrl",
  #   "type": "string"
  # }
  logoUrl
  # {
  #   "kind": "FieldDefinition",
  #   "name": "upgradeThresholdExceeded",
  #   "type": "boolean"
  # }
  upgradeThresholdExceeded
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Rolling 30-day total upload volume for the organization, in megabytes."
  #   },
  #   "name": "periodUploadVolume",
  #   "type": "number"
  # }
  periodUploadVolume
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "How git branches are formatted. If null, default formatting will be used."
  #   },
  #   "name": "gitBranchFormat",
  #   "type": "string"
  # }
  gitBranchFormat
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the Git integration linkback messages should be sent to private repositories."
  #   },
  #   "name": "gitLinkbackMessagesEnabled",
  #   "type": "boolean"
  # }
  gitLinkbackMessagesEnabled
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the Git integration linkback messages should be sent to public repositories."
  #   },
  #   "name": "gitPublicLinkbackMessagesEnabled",
  #   "type": "boolean"
  # }
  gitPublicLinkbackMessagesEnabled
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the organization is using a roadmap."
  #   },
  #   "name": "roadmapEnabled",
  #   "type": "boolean"
  # }
  roadmapEnabled
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether SAML authentication is enabled for organization."
  #   },
  #   "name": "samlEnabled",
  #   "type": "boolean"
  # }
  samlEnabled
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Allowed authentication providers, empty array means all are allowed"
  #   },
  #   "name": "allowedAuthServices",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  allowedAuthServices
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Number of active users in the organization."
  #   },
  #   "name": "userCount",
  #   "type": "number"
  # }
  userCount
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Number of issues in the organization."
  #   },
  #   "name": "createdIssueCount",
  #   "type": "number"
  # }
  createdIssueCount
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UserConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"User\"\n#   }\n# }\nnodes {\n                  ...User\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment UserConnection on UserConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "User"
  #   }
  # }
  nodes {
    ...User
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "TeamConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Team\"\n#   }\n# }\nnodes {\n                  ...Team\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment TeamConnection on TeamConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Team"
  #   }
  # }
  nodes {
    ...Team
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "MilestoneConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Milestone\"\n#   }\n# }\nnodes {\n                  ...Milestone\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment MilestoneConnection on MilestoneConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Milestone"
  #   }
  # }
  nodes {
    ...Milestone
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IntegrationConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Integration\"\n#   }\n# }\nnodes {\n                  ...Integration\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment IntegrationConnection on IntegrationConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Integration"
  #   }
  # }
  nodes {
    ...Integration
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# An integration with an external service.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An integration with an external service."
#   },
#   "name": "Integration",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The integration's type.\"\n#   },\n#   \"name\": \"service\",\n#   \"type\": \"string\"\n# }\nservice",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The external service identifier.\"\n#   },\n#   \"name\": \"serviceId\",\n#   \"type\": \"string\"\n# }\nserviceId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Settings related to the integration.\"\n#   },\n#   \"name\": \"settings\",\n#   \"type\": \"IntegrationSettings\"\n# }\nsettings {\n                  ...IntegrationSettings\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that the integration is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\nteam {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user that added the integration.\"\n#   },\n#   \"name\": \"creator\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ncreator {\n                      id\n                    }"
#   ]
# }
fragment Integration on Integration {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The integration's type."
  #   },
  #   "name": "service",
  #   "type": "string"
  # }
  service
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The external service identifier."
  #   },
  #   "name": "serviceId",
  #   "type": "string"
  # }
  serviceId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Settings related to the integration."
  #   },
  #   "name": "settings",
  #   "type": "IntegrationSettings"
  # }
  settings {
    ...IntegrationSettings
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that the integration is associated with."
  #   },
  #   "name": "team",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user that added the integration."
  #   },
  #   "name": "creator",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  creator {
    id
  }
}

# The integration resource's settings
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "The integration resource's settings"
#   },
#   "name": "IntegrationSettings",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"slackPost\",\n#   \"type\": \"SlackPostSettings\"\n# }\nslackPost {\n                  ...SlackPostSettings\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"slackProjectPost\",\n#   \"type\": \"SlackPostSettings\"\n# }\nslackProjectPost {\n                  ...SlackPostSettings\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"googleSheets\",\n#   \"type\": \"GoogleSheetsSettings\"\n# }\ngoogleSheets {\n                  ...GoogleSheetsSettings\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"sentry\",\n#   \"type\": \"SentrySettings\"\n# }\nsentry {\n                  ...SentrySettings\n                }"
#   ]
# }
fragment IntegrationSettings on IntegrationSettings {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "slackPost",
  #   "type": "SlackPostSettings"
  # }
  slackPost {
    ...SlackPostSettings
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "slackProjectPost",
  #   "type": "SlackPostSettings"
  # }
  slackProjectPost {
    ...SlackPostSettings
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "googleSheets",
  #   "type": "GoogleSheetsSettings"
  # }
  googleSheets {
    ...GoogleSheetsSettings
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "sentry",
  #   "type": "SentrySettings"
  # }
  sentry {
    ...SentrySettings
  }
}

# Slack notification specific settings.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Slack notification specific settings."
#   },
#   "name": "SlackPostSettings",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"channel\",\n#   \"type\": \"string\"\n# }\nchannel",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"channelId\",\n#   \"type\": \"string\"\n# }\nchannelId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"configurationUrl\",\n#   \"type\": \"string\"\n# }\nconfigurationUrl"
#   ]
# }
fragment SlackPostSettings on SlackPostSettings {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "channel",
  #   "type": "string"
  # }
  channel
  # {
  #   "kind": "FieldDefinition",
  #   "name": "channelId",
  #   "type": "string"
  # }
  channelId
  # {
  #   "kind": "FieldDefinition",
  #   "name": "configurationUrl",
  #   "type": "string"
  # }
  configurationUrl
}

# Google Sheets specific settings.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Google Sheets specific settings."
#   },
#   "name": "GoogleSheetsSettings",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"spreadsheetId\",\n#   \"type\": \"string\"\n# }\nspreadsheetId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"spreadsheetUrl\",\n#   \"type\": \"string\"\n# }\nspreadsheetUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"sheetId\",\n#   \"type\": \"number\"\n# }\nsheetId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"updatedIssuesAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedIssuesAt"
#   ]
# }
fragment GoogleSheetsSettings on GoogleSheetsSettings {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "spreadsheetId",
  #   "type": "string"
  # }
  spreadsheetId
  # {
  #   "kind": "FieldDefinition",
  #   "name": "spreadsheetUrl",
  #   "type": "string"
  # }
  spreadsheetUrl
  # {
  #   "kind": "FieldDefinition",
  #   "name": "sheetId",
  #   "type": "number"
  # }
  sheetId
  # {
  #   "kind": "FieldDefinition",
  #   "name": "updatedIssuesAt",
  #   "type": "DateTime"
  # }
  updatedIssuesAt
}

# Sentry specific settings.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Sentry specific settings."
#   },
#   "name": "SentrySettings",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The slug of the Sentry organization being connected.\"\n#   },\n#   \"name\": \"organizationSlug\",\n#   \"type\": \"string\"\n# }\norganizationSlug"
#   ]
# }
fragment SentrySettings on SentrySettings {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The slug of the Sentry organization being connected."
  #   },
  #   "name": "organizationSlug",
  #   "type": "string"
  # }
  organizationSlug
}

# The subscription of an organization.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "The subscription of an organization."
#   },
#   "name": "Subscription",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The subscription type.\"\n#   },\n#   \"name\": \"type\",\n#   \"type\": \"string\"\n# }\ntype",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The number of seats in the subscription.\"\n#   },\n#   \"name\": \"seats\",\n#   \"type\": \"number\"\n# }\nseats",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The creator of the subscription.\"\n#   },\n#   \"name\": \"creator\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ncreator {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The date the subscription was canceled, if any.\"\n#   },\n#   \"name\": \"canceledAt\",\n#   \"type\": \"DateTime\"\n# }\ncanceledAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The subscription type of a pending change. Null if no change pending.\"\n#   },\n#   \"name\": \"pendingChangeType\",\n#   \"type\": \"string\"\n# }\npendingChangeType"
#   ]
# }
fragment Subscription on Subscription {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The subscription type."
  #   },
  #   "name": "type",
  #   "type": "string"
  # }
  type
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The number of seats in the subscription."
  #   },
  #   "name": "seats",
  #   "type": "number"
  # }
  seats
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The creator of the subscription."
  #   },
  #   "name": "creator",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The date the subscription was canceled, if any."
  #   },
  #   "name": "canceledAt",
  #   "type": "DateTime"
  # }
  canceledAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The subscription type of a pending change. Null if no change pending."
  #   },
  #   "name": "pendingChangeType",
  #   "type": "string"
  # }
  pendingChangeType
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ProjectLinkConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"ProjectLink\"\n#   }\n# }\nnodes {\n                  ...ProjectLink\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment ProjectLinkConnection on ProjectLinkConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "ProjectLink"
  #   }
  # }
  nodes {
    ...ProjectLink
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# An external link for a project.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An external link for a project."
#   },
#   "name": "ProjectLink",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The link's URL.\"\n#   },\n#   \"name\": \"url\",\n#   \"type\": \"string\"\n# }\nurl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The link's label.\"\n#   },\n#   \"name\": \"label\",\n#   \"type\": \"string\"\n# }\nlabel",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the link.\"\n#   },\n#   \"name\": \"creator\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ncreator {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project that the link is associated with.\"\n#   },\n#   \"name\": \"project\",\n#   \"type\": \"Project\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific project.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"project\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Project\"\n#       }\n#     }\n#   }\n# }\nproject {\n                      id\n                    }"
#   ]
# }
fragment ProjectLink on ProjectLink {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The link's URL."
  #   },
  #   "name": "url",
  #   "type": "string"
  # }
  url
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The link's label."
  #   },
  #   "name": "label",
  #   "type": "string"
  # }
  label
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the link."
  #   },
  #   "name": "creator",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project that the link is associated with."
  #   },
  #   "name": "project",
  #   "type": "Project"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific project."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "project"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Project"
  #       }
  #     }
  #   }
  # }
  project {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "WorkflowStateConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"WorkflowState\"\n#   }\n# }\nnodes {\n                  ...WorkflowState\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment WorkflowStateConnection on WorkflowStateConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "WorkflowState"
  #   }
  # }
  nodes {
    ...WorkflowState
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "TemplateConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment TemplateConnection on TemplateConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# A template object used for creating new issues faster.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A template object used for creating new issues faster."
#   },
#   "name": "Template",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The entity type this template is for.\"\n#   },\n#   \"name\": \"type\",\n#   \"type\": \"string\"\n# }\ntype",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The name of the template.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Template description.\"\n#   },\n#   \"name\": \"description\",\n#   \"type\": \"string\"\n# }\ndescription",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Template data.\"\n#   },\n#   \"name\": \"templateData\",\n#   \"type\": \"JSON\"\n# }\ntemplateData",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that the template is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\nteam {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the template.\"\n#   },\n#   \"name\": \"creator\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ncreator {\n                      id\n                    }"
#   ]
# }
fragment Template on Template {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The entity type this template is for."
  #   },
  #   "name": "type",
  #   "type": "string"
  # }
  type
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The name of the template."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Template description."
  #   },
  #   "name": "description",
  #   "type": "string"
  # }
  description
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Template data."
  #   },
  #   "name": "templateData",
  #   "type": "JSON"
  # }
  templateData
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that the template is associated with."
  #   },
  #   "name": "team",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the template."
  #   },
  #   "name": "creator",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  creator {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IssueLabelConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"IssueLabel\"\n#   }\n# }\nnodes {\n                  ...IssueLabel\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment IssueLabelConnection on IssueLabelConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "IssueLabel"
  #   }
  # }
  nodes {
    ...IssueLabel
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# Labels that can be associated with issues.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Labels that can be associated with issues."
#   },
#   "name": "IssueLabel",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The label's name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The label's description.\"\n#   },\n#   \"name\": \"description\",\n#   \"type\": \"string\"\n# }\ndescription",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The label's color as a HEX string.\"\n#   },\n#   \"name\": \"color\",\n#   \"type\": \"string\"\n# }\ncolor",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team to which the label belongs to.\"\n#   },\n#   \"name\": \"team\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\nteam {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the label.\"\n#   },\n#   \"name\": \"creator\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ncreator {\n                      id\n                    }"
#   ]
# }
fragment IssueLabel on IssueLabel {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The label's name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The label's description."
  #   },
  #   "name": "description",
  #   "type": "string"
  # }
  description
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The label's color as a HEX string."
  #   },
  #   "name": "color",
  #   "type": "string"
  # }
  color
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team to which the label belongs to."
  #   },
  #   "name": "team",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the label."
  #   },
  #   "name": "creator",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  creator {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "WebhookConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Webhook\"\n#   }\n# }\nnodes {\n                  ...Webhook\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment WebhookConnection on WebhookConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Webhook"
  #   }
  # }
  nodes {
    ...Webhook
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# A webhook used to send HTTP notifications over data updates
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A webhook used to send HTTP notifications over data updates"
#   },
#   "name": "Webhook",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Webhook URL\"\n#   },\n#   \"name\": \"url\",\n#   \"type\": \"string\"\n# }\nurl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the Webhook is enabled.\"\n#   },\n#   \"name\": \"enabled\",\n#   \"type\": \"boolean\"\n# }\nenabled",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that the webhook is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\nteam {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the webhook.\"\n#   },\n#   \"name\": \"creator\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ncreator {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Secret token for verifying the origin on the recipient side.\"\n#   },\n#   \"name\": \"secret\",\n#   \"type\": \"string\"\n# }\nsecret"
#   ]
# }
fragment Webhook on Webhook {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Webhook URL"
  #   },
  #   "name": "url",
  #   "type": "string"
  # }
  url
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the Webhook is enabled."
  #   },
  #   "name": "enabled",
  #   "type": "boolean"
  # }
  enabled
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that the webhook is associated with."
  #   },
  #   "name": "team",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the webhook."
  #   },
  #   "name": "creator",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Secret token for verifying the origin on the recipient side."
  #   },
  #   "name": "secret",
  #   "type": "string"
  # }
  secret
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CommentConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Comment\"\n#   }\n# }\nnodes {\n                  ...Comment\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment CommentConnection on CommentConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Comment"
  #   }
  # }
  nodes {
    ...Comment
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# A comment associated with an issue.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A comment associated with an issue."
#   },
#   "name": "Comment",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The comment content in markdown format.\"\n#   },\n#   \"name\": \"body\",\n#   \"type\": \"string\"\n# }\nbody",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Comment content as a Prosemirror document.\"\n#   },\n#   \"name\": \"bodyData\",\n#   \"type\": \"JSON\"\n# }\nbodyData",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Emoji reactions on the comment.\"\n#   },\n#   \"name\": \"reactionData\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"JSON\"\n#   }\n# }\nreactionData",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time user edited the comment.\"\n#   },\n#   \"name\": \"editedAt\",\n#   \"type\": \"DateTime\"\n# }\neditedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who wrote the comment.\"\n#   },\n#   \"name\": \"user\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\nuser {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue that the comment is associated with.\"\n#   },\n#   \"name\": \"issue\",\n#   \"type\": \"Issue\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific issue.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issue\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Issue\"\n#       }\n#     }\n#   }\n# }\nissue {\n                      id\n                    }"
#   ]
# }
fragment Comment on Comment {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The comment content in markdown format."
  #   },
  #   "name": "body",
  #   "type": "string"
  # }
  body
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Comment content as a Prosemirror document."
  #   },
  #   "name": "bodyData",
  #   "type": "JSON"
  # }
  bodyData
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Emoji reactions on the comment."
  #   },
  #   "name": "reactionData",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "JSON"
  #   }
  # }
  reactionData
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time user edited the comment."
  #   },
  #   "name": "editedAt",
  #   "type": "DateTime"
  # }
  editedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who wrote the comment."
  #   },
  #   "name": "user",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  user {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue that the comment is associated with."
  #   },
  #   "name": "issue",
  #   "type": "Issue"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific issue."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issue"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Issue"
  #       }
  #     }
  #   }
  # }
  issue {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IssueHistoryConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"IssueHistory\"\n#   }\n# }\nnodes {\n                  ...IssueHistory\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment IssueHistoryConnection on IssueHistoryConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "IssueHistory"
  #   }
  # }
  nodes {
    ...IssueHistory
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# A record of changes to an issue.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A record of changes to an issue."
#   },
#   "name": "IssueHistory",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue that was changed.\"\n#   },\n#   \"name\": \"issue\",\n#   \"type\": \"Issue\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific issue.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issue\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Issue\"\n#       }\n#     }\n#   }\n# }\nissue {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who made these changes. If null, possibly means that the change made by an integration.\"\n#   },\n#   \"name\": \"actor\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\nactor {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The integration that made these changes. If null, possibly means that the change was made by a user.\"\n#   },\n#   \"name\": \"integration\",\n#   \"type\": \"Integration\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific integration.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"integration\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Integration\"\n#       }\n#     }\n#   }\n# }\nintegration {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the issue's description was updated.\"\n#   },\n#   \"name\": \"updatedDescription\",\n#   \"type\": \"boolean\"\n# }\nupdatedDescription",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"What the title was changed from.\"\n#   },\n#   \"name\": \"fromTitle\",\n#   \"type\": \"string\"\n# }\nfromTitle",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"What the title was changed to.\"\n#   },\n#   \"name\": \"toTitle\",\n#   \"type\": \"string\"\n# }\ntoTitle",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user from whom the issue was re-assigned from.\"\n#   },\n#   \"name\": \"fromAssignee\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\nfromAssignee {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user to whom the issue was assigned to.\"\n#   },\n#   \"name\": \"toAssignee\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ntoAssignee {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"What the priority was changed from.\"\n#   },\n#   \"name\": \"fromPriority\",\n#   \"type\": \"number\"\n# }\nfromPriority",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"What the priority was changed to.\"\n#   },\n#   \"name\": \"toPriority\",\n#   \"type\": \"number\"\n# }\ntoPriority",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team from which the issue was moved from.\"\n#   },\n#   \"name\": \"fromTeam\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\nfromTeam {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team to which the issue was moved to.\"\n#   },\n#   \"name\": \"toTeam\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\ntoTeam {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The previous parent of the issue.\"\n#   },\n#   \"name\": \"fromParent\",\n#   \"type\": \"Issue\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific issue.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issue\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Issue\"\n#       }\n#     }\n#   }\n# }\nfromParent {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The new parent of the issue.\"\n#   },\n#   \"name\": \"toParent\",\n#   \"type\": \"Issue\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific issue.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issue\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Issue\"\n#       }\n#     }\n#   }\n# }\ntoParent {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The previous workflow state of the issue.\"\n#   },\n#   \"name\": \"fromState\",\n#   \"type\": \"WorkflowState\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific state.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"workflowState\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"WorkflowState\"\n#       }\n#     }\n#   }\n# }\nfromState {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The new workflow state of the issue.\"\n#   },\n#   \"name\": \"toState\",\n#   \"type\": \"WorkflowState\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific state.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"workflowState\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"WorkflowState\"\n#       }\n#     }\n#   }\n# }\ntoState {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The previous cycle of the issue.\"\n#   },\n#   \"name\": \"fromCycle\",\n#   \"type\": \"Cycle\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific cycle.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"cycle\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Cycle\"\n#       }\n#     }\n#   }\n# }\nfromCycle {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The new cycle of the issue.\"\n#   },\n#   \"name\": \"toCycle\",\n#   \"type\": \"Cycle\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific cycle.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"cycle\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Cycle\"\n#       }\n#     }\n#   }\n# }\ntoCycle {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The previous project of the issue.\"\n#   },\n#   \"name\": \"fromProject\",\n#   \"type\": \"Project\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific project.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"project\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Project\"\n#       }\n#     }\n#   }\n# }\nfromProject {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The new project of the issue.\"\n#   },\n#   \"name\": \"toProject\",\n#   \"type\": \"Project\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific project.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"project\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Project\"\n#       }\n#     }\n#   }\n# }\ntoProject {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"What the estimate was changed from.\"\n#   },\n#   \"name\": \"fromEstimate\",\n#   \"type\": \"number\"\n# }\nfromEstimate",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"What the estimate was changed to.\"\n#   },\n#   \"name\": \"toEstimate\",\n#   \"type\": \"number\"\n# }\ntoEstimate",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the issue was archived or un-archived.\"\n#   },\n#   \"name\": \"archived\",\n#   \"type\": \"boolean\"\n# }\narchived",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"ID's of labels that were added.\"\n#   },\n#   \"name\": \"addedLabelIds\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\naddedLabelIds",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"ID's of labels that were removed.\"\n#   },\n#   \"name\": \"removedLabelIds\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nremovedLabelIds",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Changed issue relationships.\"\n#   },\n#   \"name\": \"relationChanges\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nrelationChanges",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"autoClosed\",\n#   \"type\": \"boolean\"\n# }\nautoClosed",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"autoArchived\",\n#   \"type\": \"boolean\"\n# }\nautoArchived",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"What the due date was changed from\"\n#   },\n#   \"name\": \"fromDueDate\",\n#   \"type\": \"TimelessDateScalar\"\n# }\nfromDueDate",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"What the due date was changed to\"\n#   },\n#   \"name\": \"toDueDate\",\n#   \"type\": \"TimelessDateScalar\"\n# }\ntoDueDate"
#   ]
# }
fragment IssueHistory on IssueHistory {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue that was changed."
  #   },
  #   "name": "issue",
  #   "type": "Issue"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific issue."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issue"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Issue"
  #       }
  #     }
  #   }
  # }
  issue {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who made these changes. If null, possibly means that the change made by an integration."
  #   },
  #   "name": "actor",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  actor {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The integration that made these changes. If null, possibly means that the change was made by a user."
  #   },
  #   "name": "integration",
  #   "type": "Integration"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific integration."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "integration"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Integration"
  #       }
  #     }
  #   }
  # }
  integration {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the issue's description was updated."
  #   },
  #   "name": "updatedDescription",
  #   "type": "boolean"
  # }
  updatedDescription
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "What the title was changed from."
  #   },
  #   "name": "fromTitle",
  #   "type": "string"
  # }
  fromTitle
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "What the title was changed to."
  #   },
  #   "name": "toTitle",
  #   "type": "string"
  # }
  toTitle
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user from whom the issue was re-assigned from."
  #   },
  #   "name": "fromAssignee",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  fromAssignee {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user to whom the issue was assigned to."
  #   },
  #   "name": "toAssignee",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  toAssignee {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "What the priority was changed from."
  #   },
  #   "name": "fromPriority",
  #   "type": "number"
  # }
  fromPriority
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "What the priority was changed to."
  #   },
  #   "name": "toPriority",
  #   "type": "number"
  # }
  toPriority
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team from which the issue was moved from."
  #   },
  #   "name": "fromTeam",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  fromTeam {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team to which the issue was moved to."
  #   },
  #   "name": "toTeam",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  toTeam {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The previous parent of the issue."
  #   },
  #   "name": "fromParent",
  #   "type": "Issue"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific issue."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issue"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Issue"
  #       }
  #     }
  #   }
  # }
  fromParent {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The new parent of the issue."
  #   },
  #   "name": "toParent",
  #   "type": "Issue"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific issue."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issue"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Issue"
  #       }
  #     }
  #   }
  # }
  toParent {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The previous workflow state of the issue."
  #   },
  #   "name": "fromState",
  #   "type": "WorkflowState"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific state."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "workflowState"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "WorkflowState"
  #       }
  #     }
  #   }
  # }
  fromState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The new workflow state of the issue."
  #   },
  #   "name": "toState",
  #   "type": "WorkflowState"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific state."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "workflowState"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "WorkflowState"
  #       }
  #     }
  #   }
  # }
  toState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The previous cycle of the issue."
  #   },
  #   "name": "fromCycle",
  #   "type": "Cycle"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific cycle."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "cycle"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Cycle"
  #       }
  #     }
  #   }
  # }
  fromCycle {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The new cycle of the issue."
  #   },
  #   "name": "toCycle",
  #   "type": "Cycle"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific cycle."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "cycle"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Cycle"
  #       }
  #     }
  #   }
  # }
  toCycle {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The previous project of the issue."
  #   },
  #   "name": "fromProject",
  #   "type": "Project"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific project."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "project"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Project"
  #       }
  #     }
  #   }
  # }
  fromProject {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The new project of the issue."
  #   },
  #   "name": "toProject",
  #   "type": "Project"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific project."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "project"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Project"
  #       }
  #     }
  #   }
  # }
  toProject {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "What the estimate was changed from."
  #   },
  #   "name": "fromEstimate",
  #   "type": "number"
  # }
  fromEstimate
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "What the estimate was changed to."
  #   },
  #   "name": "toEstimate",
  #   "type": "number"
  # }
  toEstimate
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the issue was archived or un-archived."
  #   },
  #   "name": "archived",
  #   "type": "boolean"
  # }
  archived
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "ID's of labels that were added."
  #   },
  #   "name": "addedLabelIds",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  addedLabelIds
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "ID's of labels that were removed."
  #   },
  #   "name": "removedLabelIds",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  removedLabelIds
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Changed issue relationships."
  #   },
  #   "name": "relationChanges",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  relationChanges
  # {
  #   "kind": "FieldDefinition",
  #   "name": "autoClosed",
  #   "type": "boolean"
  # }
  autoClosed
  # {
  #   "kind": "FieldDefinition",
  #   "name": "autoArchived",
  #   "type": "boolean"
  # }
  autoArchived
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "What the due date was changed from"
  #   },
  #   "name": "fromDueDate",
  #   "type": "TimelessDateScalar"
  # }
  fromDueDate
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "What the due date was changed to"
  #   },
  #   "name": "toDueDate",
  #   "type": "TimelessDateScalar"
  # }
  toDueDate
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IntegrationResourceConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"IntegrationResource\"\n#   }\n# }\nnodes {\n                  ...IntegrationResource\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment IntegrationResourceConnection on IntegrationResourceConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "IntegrationResource"
  #   }
  # }
  nodes {
    ...IntegrationResource
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# An integration resource created by an external service.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An integration resource created by an external service."
#   },
#   "name": "IntegrationResource",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The integration's type.\"\n#   },\n#   \"name\": \"resourceType\",\n#   \"type\": \"string\"\n# }\nresourceType",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The external service resource ID.\"\n#   },\n#   \"name\": \"resourceId\",\n#   \"type\": \"string\"\n# }\nresourceId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Detailed information about the external resource.\"\n#   },\n#   \"name\": \"data\",\n#   \"type\": \"IntegrationResourceData\"\n# }\ndata {\n                  ...IntegrationResourceData\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The integration that the resource is associated with.\"\n#   },\n#   \"name\": \"integration\",\n#   \"type\": \"Integration\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific integration.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"integration\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Integration\"\n#       }\n#     }\n#   }\n# }\nintegration {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue that the resource is associated with.\"\n#   },\n#   \"name\": \"issue\",\n#   \"type\": \"Issue\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific issue.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issue\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Issue\"\n#       }\n#     }\n#   }\n# }\nissue {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Pull request information for GitHub pull requests and GitLab merge requests.\"\n#   },\n#   \"name\": \"pullRequest\",\n#   \"type\": \"PullRequestPayload\"\n# }\npullRequest {\n                  ...PullRequestPayload\n                }"
#   ]
# }
fragment IntegrationResource on IntegrationResource {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The integration's type."
  #   },
  #   "name": "resourceType",
  #   "type": "string"
  # }
  resourceType
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The external service resource ID."
  #   },
  #   "name": "resourceId",
  #   "type": "string"
  # }
  resourceId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Detailed information about the external resource."
  #   },
  #   "name": "data",
  #   "type": "IntegrationResourceData"
  # }
  data {
    ...IntegrationResourceData
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The integration that the resource is associated with."
  #   },
  #   "name": "integration",
  #   "type": "Integration"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific integration."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "integration"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Integration"
  #       }
  #     }
  #   }
  # }
  integration {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue that the resource is associated with."
  #   },
  #   "name": "issue",
  #   "type": "Issue"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific issue."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issue"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Issue"
  #       }
  #     }
  #   }
  # }
  issue {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Pull request information for GitHub pull requests and GitLab merge requests."
  #   },
  #   "name": "pullRequest",
  #   "type": "PullRequestPayload"
  # }
  pullRequest {
    ...PullRequestPayload
  }
}

# Integration resource's payload
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Integration resource's payload"
#   },
#   "name": "IntegrationResourceData",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The payload for an IntegrationResource of type 'githubPullRequest'\"\n#   },\n#   \"name\": \"githubPullRequest\",\n#   \"type\": \"PullRequestPayload\"\n# }\ngithubPullRequest {\n                  ...PullRequestPayload\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The payload for an IntegrationResource of type 'gitlabMergeRequest'\"\n#   },\n#   \"name\": \"gitlabMergeRequest\",\n#   \"type\": \"PullRequestPayload\"\n# }\ngitlabMergeRequest {\n                  ...PullRequestPayload\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The payload for an IntegrationResource of type 'githubCommit'\"\n#   },\n#   \"name\": \"githubCommit\",\n#   \"type\": \"CommitPayload\"\n# }\ngithubCommit {\n                  ...CommitPayload\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The payload for an IntegrationResource of type 'sentryIssue'\"\n#   },\n#   \"name\": \"sentryIssue\",\n#   \"type\": \"SentryIssuePayload\"\n# }\nsentryIssue {\n                  ...SentryIssuePayload\n                }"
#   ]
# }
fragment IntegrationResourceData on IntegrationResourceData {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The payload for an IntegrationResource of type 'githubPullRequest'"
  #   },
  #   "name": "githubPullRequest",
  #   "type": "PullRequestPayload"
  # }
  githubPullRequest {
    ...PullRequestPayload
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The payload for an IntegrationResource of type 'gitlabMergeRequest'"
  #   },
  #   "name": "gitlabMergeRequest",
  #   "type": "PullRequestPayload"
  # }
  gitlabMergeRequest {
    ...PullRequestPayload
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The payload for an IntegrationResource of type 'githubCommit'"
  #   },
  #   "name": "githubCommit",
  #   "type": "CommitPayload"
  # }
  githubCommit {
    ...CommitPayload
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The payload for an IntegrationResource of type 'sentryIssue'"
  #   },
  #   "name": "sentryIssue",
  #   "type": "SentryIssuePayload"
  # }
  sentryIssue {
    ...SentryIssuePayload
  }
}

# Pull request data
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Pull request data"
#   },
#   "name": "PullRequestPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"status\",\n#   \"type\": \"string\"\n# }\nstatus",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"number\",\n#   \"type\": \"number\"\n# }\nnumber",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"url\",\n#   \"type\": \"string\"\n# }\nurl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"draft\",\n#   \"type\": \"boolean\"\n# }\ndraft",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"title\",\n#   \"type\": \"string\"\n# }\ntitle",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"branch\",\n#   \"type\": \"string\"\n# }\nbranch",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"userId\",\n#   \"type\": \"string\"\n# }\nuserId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"userLogin\",\n#   \"type\": \"string\"\n# }\nuserLogin",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"repoLogin\",\n#   \"type\": \"string\"\n# }\nrepoLogin",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"repoName\",\n#   \"type\": \"string\"\n# }\nrepoName",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"createdAt\",\n#   \"type\": \"string\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"updatedAt\",\n#   \"type\": \"string\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"closedAt\",\n#   \"type\": \"string\"\n# }\nclosedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"mergedAt\",\n#   \"type\": \"string\"\n# }\nmergedAt"
#   ]
# }
fragment PullRequestPayload on PullRequestPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "status",
  #   "type": "string"
  # }
  status
  # {
  #   "kind": "FieldDefinition",
  #   "name": "number",
  #   "type": "number"
  # }
  number
  # {
  #   "kind": "FieldDefinition",
  #   "name": "url",
  #   "type": "string"
  # }
  url
  # {
  #   "kind": "FieldDefinition",
  #   "name": "draft",
  #   "type": "boolean"
  # }
  draft
  # {
  #   "kind": "FieldDefinition",
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "name": "title",
  #   "type": "string"
  # }
  title
  # {
  #   "kind": "FieldDefinition",
  #   "name": "branch",
  #   "type": "string"
  # }
  branch
  # {
  #   "kind": "FieldDefinition",
  #   "name": "userId",
  #   "type": "string"
  # }
  userId
  # {
  #   "kind": "FieldDefinition",
  #   "name": "userLogin",
  #   "type": "string"
  # }
  userLogin
  # {
  #   "kind": "FieldDefinition",
  #   "name": "repoLogin",
  #   "type": "string"
  # }
  repoLogin
  # {
  #   "kind": "FieldDefinition",
  #   "name": "repoName",
  #   "type": "string"
  # }
  repoName
  # {
  #   "kind": "FieldDefinition",
  #   "name": "createdAt",
  #   "type": "string"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "name": "updatedAt",
  #   "type": "string"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "name": "closedAt",
  #   "type": "string"
  # }
  closedAt
  # {
  #   "kind": "FieldDefinition",
  #   "name": "mergedAt",
  #   "type": "string"
  # }
  mergedAt
}

# GitHub's commit data
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "GitHub's commit data"
#   },
#   "name": "CommitPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"message\",\n#   \"type\": \"string\"\n# }\nmessage",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"timestamp\",\n#   \"type\": \"string\"\n# }\ntimestamp",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"url\",\n#   \"type\": \"string\"\n# }\nurl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"added\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nadded",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"removed\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nremoved",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"modified\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nmodified"
#   ]
# }
fragment CommitPayload on CommitPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "name": "message",
  #   "type": "string"
  # }
  message
  # {
  #   "kind": "FieldDefinition",
  #   "name": "timestamp",
  #   "type": "string"
  # }
  timestamp
  # {
  #   "kind": "FieldDefinition",
  #   "name": "url",
  #   "type": "string"
  # }
  url
  # {
  #   "kind": "FieldDefinition",
  #   "name": "added",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  added
  # {
  #   "kind": "FieldDefinition",
  #   "name": "removed",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  removed
  # {
  #   "kind": "FieldDefinition",
  #   "name": "modified",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  modified
}

# Sentry issue data
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Sentry issue data"
#   },
#   "name": "SentryIssuePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The Sentry identifier for the issue.\"\n#   },\n#   \"name\": \"issueId\",\n#   \"type\": \"string\"\n# }\nissueId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The description of the issue.\"\n#   },\n#   \"name\": \"webUrl\",\n#   \"type\": \"string\"\n# }\nwebUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The type of the actor who created the issue.\"\n#   },\n#   \"name\": \"actorType\",\n#   \"type\": \"string\"\n# }\nactorType",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The Sentry identifier of the actor who created the issue.\"\n#   },\n#   \"name\": \"actorId\",\n#   \"type\": \"number\"\n# }\nactorId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The name of the Sentry actor who created this issue.\"\n#   },\n#   \"name\": \"actorName\",\n#   \"type\": \"string\"\n# }\nactorName",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The Sentry identifier of the project this issue belongs to.\"\n#   },\n#   \"name\": \"projectId\",\n#   \"type\": \"number\"\n# }\nprojectId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The slug of the project this issue belongs to.\"\n#   },\n#   \"name\": \"projectSlug\",\n#   \"type\": \"string\"\n# }\nprojectSlug",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The title of the issue.\"\n#   },\n#   \"name\": \"issueTitle\",\n#   \"type\": \"string\"\n# }\nissueTitle",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The shortId of the issue.\"\n#   },\n#   \"name\": \"shortId\",\n#   \"type\": \"string\"\n# }\nshortId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The date this issue was first seen.\"\n#   },\n#   \"name\": \"firstSeen\",\n#   \"type\": \"string\"\n# }\nfirstSeen",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The name of the first release version this issue appeared on, if available.\"\n#   },\n#   \"name\": \"firstVersion\",\n#   \"type\": \"string\"\n# }\nfirstVersion"
#   ]
# }
fragment SentryIssuePayload on SentryIssuePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The Sentry identifier for the issue."
  #   },
  #   "name": "issueId",
  #   "type": "string"
  # }
  issueId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The description of the issue."
  #   },
  #   "name": "webUrl",
  #   "type": "string"
  # }
  webUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The type of the actor who created the issue."
  #   },
  #   "name": "actorType",
  #   "type": "string"
  # }
  actorType
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The Sentry identifier of the actor who created the issue."
  #   },
  #   "name": "actorId",
  #   "type": "number"
  # }
  actorId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The name of the Sentry actor who created this issue."
  #   },
  #   "name": "actorName",
  #   "type": "string"
  # }
  actorName
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The Sentry identifier of the project this issue belongs to."
  #   },
  #   "name": "projectId",
  #   "type": "number"
  # }
  projectId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The slug of the project this issue belongs to."
  #   },
  #   "name": "projectSlug",
  #   "type": "string"
  # }
  projectSlug
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The title of the issue."
  #   },
  #   "name": "issueTitle",
  #   "type": "string"
  # }
  issueTitle
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The shortId of the issue."
  #   },
  #   "name": "shortId",
  #   "type": "string"
  # }
  shortId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The date this issue was first seen."
  #   },
  #   "name": "firstSeen",
  #   "type": "string"
  # }
  firstSeen
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The name of the first release version this issue appeared on, if available."
  #   },
  #   "name": "firstVersion",
  #   "type": "string"
  # }
  firstVersion
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IssueRelationConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"IssueRelation\"\n#   }\n# }\nnodes {\n                  ...IssueRelation\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment IssueRelationConnection on IssueRelationConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "IssueRelation"
  #   }
  # }
  nodes {
    ...IssueRelation
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# A relation between two issues.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A relation between two issues."
#   },
#   "name": "IssueRelation",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The relationship of the issue with the related issue.\"\n#   },\n#   \"name\": \"type\",\n#   \"type\": \"string\"\n# }\ntype",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue whose relationship is being described.\"\n#   },\n#   \"name\": \"issue\",\n#   \"type\": \"Issue\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific issue.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issue\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Issue\"\n#       }\n#     }\n#   }\n# }\nissue {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The related issue.\"\n#   },\n#   \"name\": \"relatedIssue\",\n#   \"type\": \"Issue\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific issue.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issue\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Issue\"\n#       }\n#     }\n#   }\n# }\nrelatedIssue {\n                      id\n                    }"
#   ]
# }
fragment IssueRelation on IssueRelation {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The relationship of the issue with the related issue."
  #   },
  #   "name": "type",
  #   "type": "string"
  # }
  type
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue whose relationship is being described."
  #   },
  #   "name": "issue",
  #   "type": "Issue"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific issue."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issue"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Issue"
  #       }
  #     }
  #   }
  # }
  issue {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The related issue."
  #   },
  #   "name": "relatedIssue",
  #   "type": "Issue"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific issue."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issue"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Issue"
  #       }
  #     }
  #   }
  # }
  relatedIssue {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationExistsPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the organization exists.\"\n#   },\n#   \"name\": \"exists\",\n#   \"type\": \"boolean\"\n# }\nexists"
#   ]
# }
fragment OrganizationExistsPayload on OrganizationExistsPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the organization exists."
  #   },
  #   "name": "exists",
  #   "type": "boolean"
  # }
  exists
}

# Contains either the full serialized state of the application or delta packets that the requester can
# apply to the local data set in order to be up-to-date.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Contains either the full serialized state of the application or delta packets that the requester can\n  apply to the local data set in order to be up-to-date."
#   },
#   "name": "SyncResponse",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The full state of the organization as a serialized JSON object.\\n    Mutually exclusive with the delta property\"\n#   },\n#   \"name\": \"state\",\n#   \"type\": \"string\"\n# }\nstate",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"JSON serialized delta changes that the client can apply to its local state\\n    in order to catch up with the state of the world.\"\n#   },\n#   \"name\": \"delta\",\n#   \"type\": \"string\"\n# }\ndelta",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"A JSON serialized collection of model objects loaded from the archive\"\n#   },\n#   \"name\": \"archive\",\n#   \"type\": \"string\"\n# }\narchive",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last sync id covered by the response.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The version of the remote database. Incremented by 1 for each migration run on the database.\"\n#   },\n#   \"name\": \"databaseVersion\",\n#   \"type\": \"number\"\n# }\ndatabaseVersion"
#   ]
# }
fragment SyncResponse on SyncResponse {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The full state of the organization as a serialized JSON object.\n    Mutually exclusive with the delta property"
  #   },
  #   "name": "state",
  #   "type": "string"
  # }
  state
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "JSON serialized delta changes that the client can apply to its local state\n    in order to catch up with the state of the world."
  #   },
  #   "name": "delta",
  #   "type": "string"
  # }
  delta
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "A JSON serialized collection of model objects loaded from the archive"
  #   },
  #   "name": "archive",
  #   "type": "string"
  # }
  archive
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last sync id covered by the response."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The version of the remote database. Incremented by 1 for each migration run on the database."
  #   },
  #   "name": "databaseVersion",
  #   "type": "number"
  # }
  databaseVersion
}

# Contains requested archived model objects.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Contains requested archived model objects."
#   },
#   "name": "ArchiveResponse",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"A JSON serialized collection of model objects loaded from the archive\"\n#   },\n#   \"name\": \"archive\",\n#   \"type\": \"string\"\n# }\narchive",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The total number of entities in the archive.\"\n#   },\n#   \"name\": \"totalCount\",\n#   \"type\": \"number\"\n# }\ntotalCount",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The version of the remote database. Incremented by 1 for each migration run on the database.\"\n#   },\n#   \"name\": \"databaseVersion\",\n#   \"type\": \"number\"\n# }\ndatabaseVersion"
#   ]
# }
fragment ArchiveResponse on ArchiveResponse {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "A JSON serialized collection of model objects loaded from the archive"
  #   },
  #   "name": "archive",
  #   "type": "string"
  # }
  archive
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The total number of entities in the archive."
  #   },
  #   "name": "totalCount",
  #   "type": "number"
  # }
  totalCount
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The version of the remote database. Incremented by 1 for each migration run on the database."
  #   },
  #   "name": "databaseVersion",
  #   "type": "number"
  # }
  databaseVersion
}

# A user account. Super user required.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A user account. Super user required."
#   },
#   "name": "UserAccountAdminPrivileged",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The models identifier.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the model was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the model was updated.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the model was archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user's name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user's email address.\"\n#   },\n#   \"name\": \"email\",\n#   \"type\": \"string\"\n# }\nemail",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The authentication service used to create the account.\"\n#   },\n#   \"name\": \"service\",\n#   \"type\": \"string\"\n# }\nservice",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"users\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"UserAdminPrivileged\"\n#   }\n# }\nusers {\n                  ...UserAdminPrivileged\n                }"
#   ]
# }
fragment UserAccountAdminPrivileged on UserAccountAdminPrivileged {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The models identifier."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the model was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the model was updated."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the model was archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user's name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user's email address."
  #   },
  #   "name": "email",
  #   "type": "string"
  # }
  email
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The authentication service used to create the account."
  #   },
  #   "name": "service",
  #   "type": "string"
  # }
  service
  # {
  #   "kind": "FieldDefinition",
  #   "name": "users",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "UserAdminPrivileged"
  #   }
  # }
  users {
    ...UserAdminPrivileged
  }
}

# A user that has access to the the resources of an organization. Super user required.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A user that has access to the the resources of an organization. Super user required."
#   },
#   "name": "UserAdminPrivileged",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user's full name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user's display (nick) name. Unique within each organization.\"\n#   },\n#   \"name\": \"displayName\",\n#   \"type\": \"string\"\n# }\ndisplayName",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user's email address.\"\n#   },\n#   \"name\": \"email\",\n#   \"type\": \"string\"\n# }\nemail",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"An URL to the user's avatar image.\"\n#   },\n#   \"name\": \"avatarUrl\",\n#   \"type\": \"string\"\n# }\navatarUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Reason why is the account disabled.\"\n#   },\n#   \"name\": \"disableReason\",\n#   \"type\": \"string\"\n# }\ndisableReason",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Unique hash for the user to be used in invite URLs.\"\n#   },\n#   \"name\": \"inviteHash\",\n#   \"type\": \"string\"\n# }\ninviteHash",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time the user was seen online. If null, the user is currently online.\"\n#   },\n#   \"name\": \"lastSeen\",\n#   \"type\": \"DateTime\"\n# }\nlastSeen",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the user is an organization administrator.\"\n#   },\n#   \"name\": \"admin\",\n#   \"type\": \"boolean\"\n# }\nadmin",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the user account is active or disabled.\"\n#   },\n#   \"name\": \"active\",\n#   \"type\": \"boolean\"\n# }\nactive",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Organization in which the user belongs to. Super user required.\"\n#   },\n#   \"name\": \"organization\",\n#   \"type\": \"OrganizationAdminPrivileged\"\n# }\norganization {\n                  ...OrganizationAdminPrivileged\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Number of issues created.\"\n#   },\n#   \"name\": \"createdIssueCount\",\n#   \"type\": \"number\"\n# }\ncreatedIssueCount"
#   ]
# }
fragment UserAdminPrivileged on UserAdminPrivileged {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user's full name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user's display (nick) name. Unique within each organization."
  #   },
  #   "name": "displayName",
  #   "type": "string"
  # }
  displayName
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user's email address."
  #   },
  #   "name": "email",
  #   "type": "string"
  # }
  email
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "An URL to the user's avatar image."
  #   },
  #   "name": "avatarUrl",
  #   "type": "string"
  # }
  avatarUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Reason why is the account disabled."
  #   },
  #   "name": "disableReason",
  #   "type": "string"
  # }
  disableReason
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Unique hash for the user to be used in invite URLs."
  #   },
  #   "name": "inviteHash",
  #   "type": "string"
  # }
  inviteHash
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time the user was seen online. If null, the user is currently online."
  #   },
  #   "name": "lastSeen",
  #   "type": "DateTime"
  # }
  lastSeen
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the user is an organization administrator."
  #   },
  #   "name": "admin",
  #   "type": "boolean"
  # }
  admin
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the user account is active or disabled."
  #   },
  #   "name": "active",
  #   "type": "boolean"
  # }
  active
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Organization in which the user belongs to. Super user required."
  #   },
  #   "name": "organization",
  #   "type": "OrganizationAdminPrivileged"
  # }
  organization {
    ...OrganizationAdminPrivileged
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Number of issues created."
  #   },
  #   "name": "createdIssueCount",
  #   "type": "number"
  # }
  createdIssueCount
}

# An organization. Super user required.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An organization. Super user required."
#   },
#   "name": "OrganizationAdminPrivileged",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization's name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization's unique URL key.\"\n#   },\n#   \"name\": \"urlKey\",\n#   \"type\": \"string\"\n# }\nurlKey",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization's logo URL.\"\n#   },\n#   \"name\": \"logoUrl\",\n#   \"type\": \"string\"\n# }\nlogoUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"upgradeThresholdExceeded\",\n#   \"type\": \"boolean\"\n# }\nupgradeThresholdExceeded",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Rolling 30-day total upload volume for the organization, in megabytes.\"\n#   },\n#   \"name\": \"periodUploadVolume\",\n#   \"type\": \"number\"\n# }\nperiodUploadVolume",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"How git branches are formatted. If null, default formatting will be used.\"\n#   },\n#   \"name\": \"gitBranchFormat\",\n#   \"type\": \"string\"\n# }\ngitBranchFormat",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the Git integration linkback messages should be sent to private repositories.\"\n#   },\n#   \"name\": \"gitLinkbackMessagesEnabled\",\n#   \"type\": \"boolean\"\n# }\ngitLinkbackMessagesEnabled",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the Git integration linkback messages should be sent to public repositories.\"\n#   },\n#   \"name\": \"gitPublicLinkbackMessagesEnabled\",\n#   \"type\": \"boolean\"\n# }\ngitPublicLinkbackMessagesEnabled",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the organization is using a roadmap.\"\n#   },\n#   \"name\": \"roadmapEnabled\",\n#   \"type\": \"boolean\"\n# }\nroadmapEnabled",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether SAML authentication is enabled for organization.\"\n#   },\n#   \"name\": \"samlEnabled\",\n#   \"type\": \"boolean\"\n# }\nsamlEnabled",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Allowed authentication providers, empty array means all are allowed\"\n#   },\n#   \"name\": \"allowedAuthServices\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nallowedAuthServices",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization's subscription to a paid plan. Super user required.\"\n#   },\n#   \"name\": \"subscription\",\n#   \"type\": \"SubscriptionAdminPrivileged\"\n# }\nsubscription {\n                  ...SubscriptionAdminPrivileged\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Number of active users in the organization.\"\n#   },\n#   \"name\": \"userCount\",\n#   \"type\": \"number\"\n# }\nuserCount",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Number of issues in the organization.\"\n#   },\n#   \"name\": \"createdIssueCount\",\n#   \"type\": \"number\"\n# }\ncreatedIssueCount",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The Stripe identifier for the organization.\"\n#   },\n#   \"name\": \"stripeCustomerId\",\n#   \"type\": \"string\"\n# }\nstripeCustomerId"
#   ]
# }
fragment OrganizationAdminPrivileged on OrganizationAdminPrivileged {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization's name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization's unique URL key."
  #   },
  #   "name": "urlKey",
  #   "type": "string"
  # }
  urlKey
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization's logo URL."
  #   },
  #   "name": "logoUrl",
  #   "type": "string"
  # }
  logoUrl
  # {
  #   "kind": "FieldDefinition",
  #   "name": "upgradeThresholdExceeded",
  #   "type": "boolean"
  # }
  upgradeThresholdExceeded
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Rolling 30-day total upload volume for the organization, in megabytes."
  #   },
  #   "name": "periodUploadVolume",
  #   "type": "number"
  # }
  periodUploadVolume
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "How git branches are formatted. If null, default formatting will be used."
  #   },
  #   "name": "gitBranchFormat",
  #   "type": "string"
  # }
  gitBranchFormat
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the Git integration linkback messages should be sent to private repositories."
  #   },
  #   "name": "gitLinkbackMessagesEnabled",
  #   "type": "boolean"
  # }
  gitLinkbackMessagesEnabled
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the Git integration linkback messages should be sent to public repositories."
  #   },
  #   "name": "gitPublicLinkbackMessagesEnabled",
  #   "type": "boolean"
  # }
  gitPublicLinkbackMessagesEnabled
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the organization is using a roadmap."
  #   },
  #   "name": "roadmapEnabled",
  #   "type": "boolean"
  # }
  roadmapEnabled
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether SAML authentication is enabled for organization."
  #   },
  #   "name": "samlEnabled",
  #   "type": "boolean"
  # }
  samlEnabled
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Allowed authentication providers, empty array means all are allowed"
  #   },
  #   "name": "allowedAuthServices",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  allowedAuthServices
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization's subscription to a paid plan. Super user required."
  #   },
  #   "name": "subscription",
  #   "type": "SubscriptionAdminPrivileged"
  # }
  subscription {
    ...SubscriptionAdminPrivileged
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Number of active users in the organization."
  #   },
  #   "name": "userCount",
  #   "type": "number"
  # }
  userCount
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Number of issues in the organization."
  #   },
  #   "name": "createdIssueCount",
  #   "type": "number"
  # }
  createdIssueCount
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The Stripe identifier for the organization."
  #   },
  #   "name": "stripeCustomerId",
  #   "type": "string"
  # }
  stripeCustomerId
}

# The subscription of an organization. Super user required.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "The subscription of an organization. Super user required."
#   },
#   "name": "SubscriptionAdminPrivileged",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The subscription type.\"\n#   },\n#   \"name\": \"type\",\n#   \"type\": \"string\"\n# }\ntype",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The number of seats in the subscription.\"\n#   },\n#   \"name\": \"seats\",\n#   \"type\": \"number\"\n# }\nseats",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The creator of the subscription.\"\n#   },\n#   \"name\": \"creator\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ncreator {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The date the subscription was canceled, if any.\"\n#   },\n#   \"name\": \"canceledAt\",\n#   \"type\": \"DateTime\"\n# }\ncanceledAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The subscription type of a pending change. Null if no change pending.\"\n#   },\n#   \"name\": \"pendingChangeType\",\n#   \"type\": \"string\"\n# }\npendingChangeType",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The Stripe identifier for the subscription.\"\n#   },\n#   \"name\": \"stripeSubscriptionId\",\n#   \"type\": \"string\"\n# }\nstripeSubscriptionId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The Stripe status for the subscription.\"\n#   },\n#   \"name\": \"stripeStatus\",\n#   \"type\": \"string\"\n# }\nstripeStatus"
#   ]
# }
fragment SubscriptionAdminPrivileged on SubscriptionAdminPrivileged {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The subscription type."
  #   },
  #   "name": "type",
  #   "type": "string"
  # }
  type
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The number of seats in the subscription."
  #   },
  #   "name": "seats",
  #   "type": "number"
  # }
  seats
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The creator of the subscription."
  #   },
  #   "name": "creator",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The date the subscription was canceled, if any."
  #   },
  #   "name": "canceledAt",
  #   "type": "DateTime"
  # }
  canceledAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The subscription type of a pending change. Null if no change pending."
  #   },
  #   "name": "pendingChangeType",
  #   "type": "string"
  # }
  pendingChangeType
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The Stripe identifier for the subscription."
  #   },
  #   "name": "stripeSubscriptionId",
  #   "type": "string"
  # }
  stripeSubscriptionId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The Stripe status for the subscription."
  #   },
  #   "name": "stripeStatus",
  #   "type": "string"
  # }
  stripeStatus
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ApiKeyConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"ApiKey\"\n#   }\n# }\nnodes {\n                  ...ApiKey\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment ApiKeyConnection on ApiKeyConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "ApiKey"
  #   }
  # }
  nodes {
    ...ApiKey
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# An API key. Grants access to the user's resources.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An API key. Grants access to the user's resources."
#   },
#   "name": "ApiKey",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The label of the API key.\"\n#   },\n#   \"name\": \"label\",\n#   \"type\": \"string\"\n# }\nlabel"
#   ]
# }
fragment ApiKey on ApiKey {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The label of the API key."
  #   },
  #   "name": "label",
  #   "type": "string"
  # }
  label
}

# Public information of the OAuth application, plus whether the application has been authorized for
# the given scopes.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Public information of the OAuth application, plus whether the application has been authorized for the given scopes."
#   },
#   "name": "UserAuthorizedApplication",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"OAuth application's client ID.\"\n#   },\n#   \"name\": \"clientId\",\n#   \"type\": \"string\"\n# }\nclientId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Application name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Information about the application.\"\n#   },\n#   \"name\": \"description\",\n#   \"type\": \"string\"\n# }\ndescription",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Name of the developer.\"\n#   },\n#   \"name\": \"developer\",\n#   \"type\": \"string\"\n# }\ndeveloper",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Url of the developer (homepage or docs).\"\n#   },\n#   \"name\": \"developerUrl\",\n#   \"type\": \"string\"\n# }\ndeveloperUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Image of the application.\"\n#   },\n#   \"name\": \"imageUrl\",\n#   \"type\": \"string\"\n# }\nimageUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the user has authorized the application for the given scopes.\"\n#   },\n#   \"name\": \"isAuthorized\",\n#   \"type\": \"boolean\"\n# }\nisAuthorized"
#   ]
# }
fragment UserAuthorizedApplication on UserAuthorizedApplication {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "OAuth application's client ID."
  #   },
  #   "name": "clientId",
  #   "type": "string"
  # }
  clientId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Application name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Information about the application."
  #   },
  #   "name": "description",
  #   "type": "string"
  # }
  description
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Name of the developer."
  #   },
  #   "name": "developer",
  #   "type": "string"
  # }
  developer
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Url of the developer (homepage or docs)."
  #   },
  #   "name": "developerUrl",
  #   "type": "string"
  # }
  developerUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Image of the application."
  #   },
  #   "name": "imageUrl",
  #   "type": "string"
  # }
  imageUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the user has authorized the application for the given scopes."
  #   },
  #   "name": "isAuthorized",
  #   "type": "boolean"
  # }
  isAuthorized
}

# Public information of the OAuth application, plus the authorized scopes for a given user.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Public information of the OAuth application, plus the authorized scopes for a given user."
#   },
#   "name": "AuthorizedApplication",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"OAuth application's client ID.\"\n#   },\n#   \"name\": \"clientId\",\n#   \"type\": \"string\"\n# }\nclientId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Application name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Information about the application.\"\n#   },\n#   \"name\": \"description\",\n#   \"type\": \"string\"\n# }\ndescription",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Name of the developer.\"\n#   },\n#   \"name\": \"developer\",\n#   \"type\": \"string\"\n# }\ndeveloper",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Url of the developer (homepage or docs).\"\n#   },\n#   \"name\": \"developerUrl\",\n#   \"type\": \"string\"\n# }\ndeveloperUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Image of the application.\"\n#   },\n#   \"name\": \"imageUrl\",\n#   \"type\": \"string\"\n# }\nimageUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Scopes that are authorized for this application for a given user.\"\n#   },\n#   \"name\": \"scope\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nscope",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"OAuth application's ID.\"\n#   },\n#   \"name\": \"appId\",\n#   \"type\": \"string\"\n# }\nappId"
#   ]
# }
fragment AuthorizedApplication on AuthorizedApplication {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "OAuth application's client ID."
  #   },
  #   "name": "clientId",
  #   "type": "string"
  # }
  clientId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Application name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Information about the application."
  #   },
  #   "name": "description",
  #   "type": "string"
  # }
  description
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Name of the developer."
  #   },
  #   "name": "developer",
  #   "type": "string"
  # }
  developer
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Url of the developer (homepage or docs)."
  #   },
  #   "name": "developerUrl",
  #   "type": "string"
  # }
  developerUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Image of the application."
  #   },
  #   "name": "imageUrl",
  #   "type": "string"
  # }
  imageUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Scopes that are authorized for this application for a given user."
  #   },
  #   "name": "scope",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  scope
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "OAuth application's ID."
  #   },
  #   "name": "appId",
  #   "type": "string"
  # }
  appId
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "AuthResolverResponse",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"User account ID.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"JWT token for authentication of the account.\"\n#   },\n#   \"name\": \"token\",\n#   \"type\": \"string\"\n# }\ntoken",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Email for the authenticated account.\"\n#   },\n#   \"name\": \"email\",\n#   \"type\": \"string\"\n# }\nemail",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Should the signup flow allow access for the domain.\"\n#   },\n#   \"name\": \"allowDomainAccess\",\n#   \"type\": \"boolean\"\n# }\nallowDomainAccess",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Users belonging to this account.\"\n#   },\n#   \"name\": \"users\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"User\"\n#   }\n# }\nusers {\n                  ...User\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Organizations this account has access to, but is not yet a member.\"\n#   },\n#   \"name\": \"availableOrganizations\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Organization\"\n#   }\n# }\navailableOrganizations {\n                  ...Organization\n                }"
#   ]
# }
fragment AuthResolverResponse on AuthResolverResponse {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "User account ID."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "JWT token for authentication of the account."
  #   },
  #   "name": "token",
  #   "type": "string"
  # }
  token
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Email for the authenticated account."
  #   },
  #   "name": "email",
  #   "type": "string"
  # }
  email
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Should the signup flow allow access for the domain."
  #   },
  #   "name": "allowDomainAccess",
  #   "type": "boolean"
  # }
  allowDomainAccess
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Users belonging to this account."
  #   },
  #   "name": "users",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "User"
  #   }
  # }
  users {
    ...User
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Organizations this account has access to, but is not yet a member."
  #   },
  #   "name": "availableOrganizations",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Organization"
  #   }
  # }
  availableOrganizations {
    ...Organization
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "SsoUrlFromEmailResponse",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"SAML SSO sign-in URL.\"\n#   },\n#   \"name\": \"samlSsoUrl\",\n#   \"type\": \"string\"\n# }\nsamlSsoUrl"
#   ]
# }
fragment SsoUrlFromEmailResponse on SsoUrlFromEmailResponse {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "SAML SSO sign-in URL."
  #   },
  #   "name": "samlSsoUrl",
  #   "type": "string"
  # }
  samlSsoUrl
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "BillingDetailsPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The customer's email address the invoices are sent to.\"\n#   },\n#   \"name\": \"email\",\n#   \"type\": \"string\"\n# }\nemail",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"List of invoices, if any.\"\n#   },\n#   \"name\": \"invoices\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Invoice\"\n#   }\n# }\ninvoices {\n                  ...Invoice\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The payment method.\"\n#   },\n#   \"name\": \"paymentMethod\",\n#   \"type\": \"Card\"\n# }\npaymentMethod {\n                  ...Card\n                }"
#   ]
# }
fragment BillingDetailsPayload on BillingDetailsPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The customer's email address the invoices are sent to."
  #   },
  #   "name": "email",
  #   "type": "string"
  # }
  email
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "List of invoices, if any."
  #   },
  #   "name": "invoices",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Invoice"
  #   }
  # }
  invoices {
    ...Invoice
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The payment method."
  #   },
  #   "name": "paymentMethod",
  #   "type": "Card"
  # }
  paymentMethod {
    ...Card
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "Invoice",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The URL at which the invoice can be viewed or paid.\"\n#   },\n#   \"name\": \"url\",\n#   \"type\": \"string\"\n# }\nurl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The creation date of the invoice.\"\n#   },\n#   \"name\": \"created\",\n#   \"type\": \"TimelessDateScalar\"\n# }\ncreated",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The due date of the invoice.\"\n#   },\n#   \"name\": \"dueDate\",\n#   \"type\": \"TimelessDateScalar\"\n# }\ndueDate",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The status of the invoice.\"\n#   },\n#   \"name\": \"status\",\n#   \"type\": \"string\"\n# }\nstatus",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The invoice total, in cents.\"\n#   },\n#   \"name\": \"total\",\n#   \"type\": \"number\"\n# }\ntotal"
#   ]
# }
fragment Invoice on Invoice {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The URL at which the invoice can be viewed or paid."
  #   },
  #   "name": "url",
  #   "type": "string"
  # }
  url
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The creation date of the invoice."
  #   },
  #   "name": "created",
  #   "type": "TimelessDateScalar"
  # }
  created
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The due date of the invoice."
  #   },
  #   "name": "dueDate",
  #   "type": "TimelessDateScalar"
  # }
  dueDate
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The status of the invoice."
  #   },
  #   "name": "status",
  #   "type": "string"
  # }
  status
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The invoice total, in cents."
  #   },
  #   "name": "total",
  #   "type": "number"
  # }
  total
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "Card",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The brand of the card, e.g. Visa.\"\n#   },\n#   \"name\": \"brand\",\n#   \"type\": \"string\"\n# }\nbrand",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last four digits used to identify the card.\"\n#   },\n#   \"name\": \"last4\",\n#   \"type\": \"string\"\n# }\nlast4"
#   ]
# }
fragment Card on Card {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The brand of the card, e.g. Visa."
  #   },
  #   "name": "brand",
  #   "type": "string"
  # }
  brand
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last four digits used to identify the card."
  #   },
  #   "name": "last4",
  #   "type": "string"
  # }
  last4
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CollaborationDocumentUpdatePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Document steps the client has not seen yet and need to rebase it's local steps on.\"\n#   },\n#   \"name\": \"steps\",\n#   \"type\": \"StepsResponse\"\n# }\nsteps {\n                  ...StepsResponse\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment CollaborationDocumentUpdatePayload on CollaborationDocumentUpdatePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Document steps the client has not seen yet and need to rebase it's local steps on."
  #   },
  #   "name": "steps",
  #   "type": "StepsResponse"
  # }
  steps {
    ...StepsResponse
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "StepsResponse",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Client's document version.\"\n#   },\n#   \"name\": \"version\",\n#   \"type\": \"number\"\n# }\nversion",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"New document steps from the client.\"\n#   },\n#   \"name\": \"steps\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"JSON\"\n#   }\n# }\nsteps",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"List of client IDs for the document steps.\"\n#   },\n#   \"name\": \"clientIds\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nclientIds"
#   ]
# }
fragment StepsResponse on StepsResponse {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Client's document version."
  #   },
  #   "name": "version",
  #   "type": "number"
  # }
  version
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "New document steps from the client."
  #   },
  #   "name": "steps",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "JSON"
  #   }
  # }
  steps
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "List of client IDs for the document steps."
  #   },
  #   "name": "clientIds",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  clientIds
}

# A custom view that has been saved by a user.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A custom view that has been saved by a user."
#   },
#   "name": "CustomView",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The name of the custom view.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The description of the custom view.\"\n#   },\n#   \"name\": \"description\",\n#   \"type\": \"string\"\n# }\ndescription",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The icon of the custom view.\"\n#   },\n#   \"name\": \"icon\",\n#   \"type\": \"string\"\n# }\nicon",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The color of the icon of the custom view.\"\n#   },\n#   \"name\": \"color\",\n#   \"type\": \"string\"\n# }\ncolor",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team associated with the custom view.\"\n#   },\n#   \"name\": \"team\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\nteam {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the custom view.\"\n#   },\n#   \"name\": \"creator\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ncreator {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The filters applied to issues in the custom view.\"\n#   },\n#   \"name\": \"filters\",\n#   \"type\": \"JSONObject\"\n# }\nfilters",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the custom view is shared with everyone in the organization.\"\n#   },\n#   \"name\": \"shared\",\n#   \"type\": \"boolean\"\n# }\nshared"
#   ]
# }
fragment CustomView on CustomView {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The name of the custom view."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The description of the custom view."
  #   },
  #   "name": "description",
  #   "type": "string"
  # }
  description
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The icon of the custom view."
  #   },
  #   "name": "icon",
  #   "type": "string"
  # }
  icon
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The color of the icon of the custom view."
  #   },
  #   "name": "color",
  #   "type": "string"
  # }
  color
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team associated with the custom view."
  #   },
  #   "name": "team",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the custom view."
  #   },
  #   "name": "creator",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The filters applied to issues in the custom view."
  #   },
  #   "name": "filters",
  #   "type": "JSONObject"
  # }
  filters
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the custom view is shared with everyone in the organization."
  #   },
  #   "name": "shared",
  #   "type": "boolean"
  # }
  shared
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CustomViewConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"CustomView\"\n#   }\n# }\nnodes {\n                  ...CustomView\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment CustomViewConnection on CustomViewConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "CustomView"
  #   }
  # }
  nodes {
    ...CustomView
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# A custom emoji.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A custom emoji."
#   },
#   "name": "Emoji",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The emoji's name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The emoji image URL.\"\n#   },\n#   \"name\": \"url\",\n#   \"type\": \"string\"\n# }\nurl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The source of the emoji.\"\n#   },\n#   \"name\": \"source\",\n#   \"type\": \"string\"\n# }\nsource",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the emoji.\"\n#   },\n#   \"name\": \"creator\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ncreator {\n                      id\n                    }"
#   ]
# }
fragment Emoji on Emoji {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The emoji's name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The emoji image URL."
  #   },
  #   "name": "url",
  #   "type": "string"
  # }
  url
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The source of the emoji."
  #   },
  #   "name": "source",
  #   "type": "string"
  # }
  source
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the emoji."
  #   },
  #   "name": "creator",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  creator {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "EmojiConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Emoji\"\n#   }\n# }\nnodes {\n                  ...Emoji\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment EmojiConnection on EmojiConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Emoji"
  #   }
  # }
  nodes {
    ...Emoji
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# User favorites presented in the sidebar.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "User favorites presented in the sidebar."
#   },
#   "name": "Favorite",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The type of the favorite.\"\n#   },\n#   \"name\": \"type\",\n#   \"type\": \"string\"\n# }\ntype",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The order of the item in the favorites list.\"\n#   },\n#   \"name\": \"sortOrder\",\n#   \"type\": \"number\"\n# }\nsortOrder",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The owner of the favorite.\"\n#   },\n#   \"name\": \"user\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\nuser {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Favorited issue.\"\n#   },\n#   \"name\": \"issue\",\n#   \"type\": \"Issue\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific issue.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issue\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Issue\"\n#       }\n#     }\n#   }\n# }\nissue {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Favorited project.\"\n#   },\n#   \"name\": \"project\",\n#   \"type\": \"Project\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific project.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"project\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Project\"\n#       }\n#     }\n#   }\n# }\nproject {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Favorited project team.\"\n#   },\n#   \"name\": \"projectTeam\",\n#   \"type\": \"Project\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific project.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"project\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Project\"\n#       }\n#     }\n#   }\n# }\nprojectTeam {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Favorited cycle.\"\n#   },\n#   \"name\": \"cycle\",\n#   \"type\": \"Cycle\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific cycle.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"cycle\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Cycle\"\n#       }\n#     }\n#   }\n# }\ncycle {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Favorited issue label.\"\n#   },\n#   \"name\": \"label\",\n#   \"type\": \"IssueLabel\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific label.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issueLabel\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"IssueLabel\"\n#       }\n#     }\n#   }\n# }\nlabel {\n                      id\n                    }"
#   ]
# }
fragment Favorite on Favorite {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The type of the favorite."
  #   },
  #   "name": "type",
  #   "type": "string"
  # }
  type
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The order of the item in the favorites list."
  #   },
  #   "name": "sortOrder",
  #   "type": "number"
  # }
  sortOrder
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The owner of the favorite."
  #   },
  #   "name": "user",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  user {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Favorited issue."
  #   },
  #   "name": "issue",
  #   "type": "Issue"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific issue."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issue"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Issue"
  #       }
  #     }
  #   }
  # }
  issue {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Favorited project."
  #   },
  #   "name": "project",
  #   "type": "Project"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific project."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "project"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Project"
  #       }
  #     }
  #   }
  # }
  project {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Favorited project team."
  #   },
  #   "name": "projectTeam",
  #   "type": "Project"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific project."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "project"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Project"
  #       }
  #     }
  #   }
  # }
  projectTeam {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Favorited cycle."
  #   },
  #   "name": "cycle",
  #   "type": "Cycle"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific cycle."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "cycle"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Cycle"
  #       }
  #     }
  #   }
  # }
  cycle {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Favorited issue label."
  #   },
  #   "name": "label",
  #   "type": "IssueLabel"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific label."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issueLabel"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "IssueLabel"
  #       }
  #     }
  #   }
  # }
  label {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "FavoriteConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Favorite\"\n#   }\n# }\nnodes {\n                  ...Favorite\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment FavoriteConnection on FavoriteConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Favorite"
  #   }
  # }
  nodes {
    ...Favorite
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "FigmaEmbedPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Figma embed information.\"\n#   },\n#   \"name\": \"figmaEmbed\",\n#   \"type\": \"FigmaEmbed\"\n# }\nfigmaEmbed {\n                  ...FigmaEmbed\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment FigmaEmbedPayload on FigmaEmbedPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Figma embed information."
  #   },
  #   "name": "figmaEmbed",
  #   "type": "FigmaEmbed"
  # }
  figmaEmbed {
    ...FigmaEmbed
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# Object representing Figma preview information.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Object representing Figma preview information."
#   },
#   "name": "FigmaEmbed",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Figma file name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Date when the file was updated at the time of embedding.\"\n#   },\n#   \"name\": \"lastModified\",\n#   \"type\": \"DateTime\"\n# }\nlastModified",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Node name.\"\n#   },\n#   \"name\": \"nodeName\",\n#   \"type\": \"string\"\n# }\nnodeName",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Figma screenshot URL.\"\n#   },\n#   \"name\": \"url\",\n#   \"type\": \"string\"\n# }\nurl"
#   ]
# }
fragment FigmaEmbed on FigmaEmbed {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Figma file name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Date when the file was updated at the time of embedding."
  #   },
  #   "name": "lastModified",
  #   "type": "DateTime"
  # }
  lastModified
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Node name."
  #   },
  #   "name": "nodeName",
  #   "type": "string"
  # }
  nodeName
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Figma screenshot URL."
  #   },
  #   "name": "url",
  #   "type": "string"
  # }
  url
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "InvitePagePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Invite data.\"\n#   },\n#   \"name\": \"inviteData\",\n#   \"type\": \"InviteData\"\n# }\ninviteData {\n                  ...InviteData\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment InvitePagePayload on InvitePagePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Invite data."
  #   },
  #   "name": "inviteData",
  #   "type": "InviteData"
  # }
  inviteData {
    ...InviteData
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "InviteData",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The name of the inviter.\"\n#   },\n#   \"name\": \"inviterName\",\n#   \"type\": \"string\"\n# }\ninviterName",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Avatar URLs for the invitees.\"\n#   },\n#   \"name\": \"avatarURLs\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\navatarURLs",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Team names for the invitees.\"\n#   },\n#   \"name\": \"teamNames\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nteamNames",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Team identifiers for the invitees.\"\n#   },\n#   \"name\": \"teamIds\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nteamIds",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The name of the organization the users were invited to.\"\n#   },\n#   \"name\": \"organizationName\",\n#   \"type\": \"string\"\n# }\norganizationName",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The domain of the organization the users were invited to.\"\n#   },\n#   \"name\": \"organizationDomain\",\n#   \"type\": \"string\"\n# }\norganizationDomain",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The logo of the organization the users were invited to.\"\n#   },\n#   \"name\": \"organizationLogoUrl\",\n#   \"type\": \"string\"\n# }\norganizationLogoUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user count of the organization.\"\n#   },\n#   \"name\": \"userCount\",\n#   \"type\": \"number\"\n# }\nuserCount"
#   ]
# }
fragment InviteData on InviteData {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The name of the inviter."
  #   },
  #   "name": "inviterName",
  #   "type": "string"
  # }
  inviterName
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Avatar URLs for the invitees."
  #   },
  #   "name": "avatarURLs",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  avatarURLs
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Team names for the invitees."
  #   },
  #   "name": "teamNames",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  teamNames
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Team identifiers for the invitees."
  #   },
  #   "name": "teamIds",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  teamIds
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The name of the organization the users were invited to."
  #   },
  #   "name": "organizationName",
  #   "type": "string"
  # }
  organizationName
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The domain of the organization the users were invited to."
  #   },
  #   "name": "organizationDomain",
  #   "type": "string"
  # }
  organizationDomain
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The logo of the organization the users were invited to."
  #   },
  #   "name": "organizationLogoUrl",
  #   "type": "string"
  # }
  organizationLogoUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user count of the organization."
  #   },
  #   "name": "userCount",
  #   "type": "number"
  # }
  userCount
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "NotificationConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Notification\"\n#   }\n# }\nnodes {\n                  ...Notification\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment NotificationConnection on NotificationConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Notification"
  #   }
  # }
  nodes {
    ...Notification
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# A notification sent to a user.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A notification sent to a user."
#   },
#   "name": "Notification",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Notification type\"\n#   },\n#   \"name\": \"type\",\n#   \"type\": \"string\"\n# }\ntype",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Name of the reaction emoji associated with the notification.\"\n#   },\n#   \"name\": \"reactionEmoji\",\n#   \"type\": \"string\"\n# }\nreactionEmoji",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at when the user marked the notification as read. Null, if the the user hasn't read the notification\"\n#   },\n#   \"name\": \"readAt\",\n#   \"type\": \"DateTime\"\n# }\nreadAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at when an email reminder for this notification was sent to the user. Null, if no email\\n    reminder has been sent.\"\n#   },\n#   \"name\": \"emailedAt\",\n#   \"type\": \"DateTime\"\n# }\nemailedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The recipient of the notification.\"\n#   },\n#   \"name\": \"user\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\nuser {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue that the notification is associated with.\"\n#   },\n#   \"name\": \"issue\",\n#   \"type\": \"Issue\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific issue.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issue\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Issue\"\n#       }\n#     }\n#   }\n# }\nissue {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team which the notification is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\nteam {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The comment which the notification is associated with.\"\n#   },\n#   \"name\": \"comment\",\n#   \"type\": \"Comment\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"A specific comment.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"comment\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the comment to retrieve.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Comment\"\n#       }\n#     }\n#   }\n# }\ncomment {\n                      id\n                    }"
#   ]
# }
fragment Notification on Notification {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Notification type"
  #   },
  #   "name": "type",
  #   "type": "string"
  # }
  type
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Name of the reaction emoji associated with the notification."
  #   },
  #   "name": "reactionEmoji",
  #   "type": "string"
  # }
  reactionEmoji
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at when the user marked the notification as read. Null, if the the user hasn't read the notification"
  #   },
  #   "name": "readAt",
  #   "type": "DateTime"
  # }
  readAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at when an email reminder for this notification was sent to the user. Null, if no email\n    reminder has been sent."
  #   },
  #   "name": "emailedAt",
  #   "type": "DateTime"
  # }
  emailedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The recipient of the notification."
  #   },
  #   "name": "user",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  user {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue that the notification is associated with."
  #   },
  #   "name": "issue",
  #   "type": "Issue"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific issue."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issue"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Issue"
  #       }
  #     }
  #   }
  # }
  issue {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team which the notification is associated with."
  #   },
  #   "name": "team",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The comment which the notification is associated with."
  #   },
  #   "name": "comment",
  #   "type": "Comment"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "A specific comment."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "comment"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the comment to retrieve."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Comment"
  #       }
  #     }
  #   }
  # }
  comment {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "NotificationSubscriptionConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"NotificationSubscription\"\n#   }\n# }\nnodes {\n                  ...NotificationSubscription\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment NotificationSubscriptionConnection on NotificationSubscriptionConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "NotificationSubscription"
  #   }
  # }
  nodes {
    ...NotificationSubscription
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# Notification subscriptions for models.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Notification subscriptions for models."
#   },
#   "name": "NotificationSubscription",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The type of the subscription.\"\n#   },\n#   \"name\": \"type\",\n#   \"type\": \"string\"\n# }\ntype",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user associated with notification subscriptions.\"\n#   },\n#   \"name\": \"user\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\nuser {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Subscribed team.\"\n#   },\n#   \"name\": \"team\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\nteam {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Subscribed project.\"\n#   },\n#   \"name\": \"project\",\n#   \"type\": \"Project\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific project.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"project\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Project\"\n#       }\n#     }\n#   }\n# }\nproject {\n                      id\n                    }"
#   ]
# }
fragment NotificationSubscription on NotificationSubscription {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The type of the subscription."
  #   },
  #   "name": "type",
  #   "type": "string"
  # }
  type
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user associated with notification subscriptions."
  #   },
  #   "name": "user",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  user {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Subscribed team."
  #   },
  #   "name": "team",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Subscribed project."
  #   },
  #   "name": "project",
  #   "type": "Project"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific project."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "project"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Project"
  #       }
  #     }
  #   }
  # }
  project {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationInviteConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"OrganizationInvite\"\n#   }\n# }\nnodes {\n                  ...OrganizationInvite\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment OrganizationInviteConnection on OrganizationInviteConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "OrganizationInvite"
  #   }
  # }
  nodes {
    ...OrganizationInvite
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# An invitation to the organization that has been sent via email.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An invitation to the organization that has been sent via email."
#   },
#   "name": "OrganizationInvite",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The invitees email address.\"\n#   },\n#   \"name\": \"email\",\n#   \"type\": \"string\"\n# }\nemail",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The invite was sent to external address.\"\n#   },\n#   \"name\": \"external\",\n#   \"type\": \"boolean\"\n# }\nexternal",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the invite was accepted. Null, if the invite hasn't been accepted\"\n#   },\n#   \"name\": \"acceptedAt\",\n#   \"type\": \"DateTime\"\n# }\nacceptedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the invite will be expiring. Null, if the invite shouldn't expire\"\n#   },\n#   \"name\": \"expiresAt\",\n#   \"type\": \"DateTime\"\n# }\nexpiresAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the invitation.\"\n#   },\n#   \"name\": \"inviter\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ninviter {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who has accepted the invite. Null, if the invite hasn't been accepted.\"\n#   },\n#   \"name\": \"invitee\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ninvitee {\n                      id\n                    }"
#   ]
# }
fragment OrganizationInvite on OrganizationInvite {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The invitees email address."
  #   },
  #   "name": "email",
  #   "type": "string"
  # }
  email
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The invite was sent to external address."
  #   },
  #   "name": "external",
  #   "type": "boolean"
  # }
  external
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the invite was accepted. Null, if the invite hasn't been accepted"
  #   },
  #   "name": "acceptedAt",
  #   "type": "DateTime"
  # }
  acceptedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the invite will be expiring. Null, if the invite shouldn't expire"
  #   },
  #   "name": "expiresAt",
  #   "type": "DateTime"
  # }
  expiresAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the invitation."
  #   },
  #   "name": "inviter",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  inviter {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who has accepted the invite. Null, if the invite hasn't been accepted."
  #   },
  #   "name": "invitee",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  invitee {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "PushSubscriptionPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment PushSubscriptionPayload on PushSubscriptionPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# A reaction associated with a comment.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A reaction associated with a comment."
#   },
#   "name": "Reaction",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Name of the reaction's emoji.\"\n#   },\n#   \"name\": \"emoji\",\n#   \"type\": \"string\"\n# }\nemoji",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who reacted.\"\n#   },\n#   \"name\": \"user\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\nuser {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The comment that the reaction is associated with.\"\n#   },\n#   \"name\": \"comment\",\n#   \"type\": \"Comment\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"A specific comment.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"comment\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the comment to retrieve.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Comment\"\n#       }\n#     }\n#   }\n# }\ncomment {\n                      id\n                    }"
#   ]
# }
fragment Reaction on Reaction {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Name of the reaction's emoji."
  #   },
  #   "name": "emoji",
  #   "type": "string"
  # }
  emoji
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who reacted."
  #   },
  #   "name": "user",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  user {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The comment that the reaction is associated with."
  #   },
  #   "name": "comment",
  #   "type": "Comment"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "A specific comment."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "comment"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the comment to retrieve."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Comment"
  #       }
  #     }
  #   }
  # }
  comment {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ReactionConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Reaction\"\n#   }\n# }\nnodes {\n                  ...Reaction\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment ReactionConnection on ReactionConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Reaction"
  #   }
  # }
  nodes {
    ...Reaction
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ViewPreferencesConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"ViewPreferences\"\n#   }\n# }\nnodes {\n                  ...ViewPreferences\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment ViewPreferencesConnection on ViewPreferencesConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "ViewPreferences"
  #   }
  # }
  nodes {
    ...ViewPreferences
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# View preferences.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "View preferences."
#   },
#   "name": "ViewPreferences",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The view preference type.\"\n#   },\n#   \"name\": \"type\",\n#   \"type\": \"string\"\n# }\ntype",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The view type.\"\n#   },\n#   \"name\": \"viewType\",\n#   \"type\": \"string\"\n# }\nviewType"
#   ]
# }
fragment ViewPreferences on ViewPreferences {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The view preference type."
  #   },
  #   "name": "type",
  #   "type": "string"
  # }
  type
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The view type."
  #   },
  #   "name": "viewType",
  #   "type": "string"
  # }
  viewType
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UserPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user that was created or updated.\"\n#   },\n#   \"name\": \"user\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\nuser {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment UserPayload on UserPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user that was created or updated."
  #   },
  #   "name": "user",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  user {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UserAdminPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment UserAdminPayload on UserAdminPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment OrganizationPayload on OrganizationPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationDeletePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment OrganizationDeletePayload on OrganizationDeletePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "AdminIntegrationPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment AdminIntegrationPayload on AdminIntegrationPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationAccessPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment OrganizationAccessPayload on OrganizationAccessPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationSamlConfigurePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Organization's current SAML configuration.\"\n#   },\n#   \"name\": \"samlConfiguration\",\n#   \"type\": \"SamlConfiguration\"\n# }\nsamlConfiguration {\n                  ...SamlConfiguration\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether SAML is enabled for the organization.\"\n#   },\n#   \"name\": \"samlEnabled\",\n#   \"type\": \"boolean\"\n# }\nsamlEnabled"
#   ]
# }
fragment OrganizationSamlConfigurePayload on OrganizationSamlConfigurePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Organization's current SAML configuration."
  #   },
  #   "name": "samlConfiguration",
  #   "type": "SamlConfiguration"
  # }
  samlConfiguration {
    ...SamlConfiguration
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether SAML is enabled for the organization."
  #   },
  #   "name": "samlEnabled",
  #   "type": "boolean"
  # }
  samlEnabled
}

# The integration resource's settings
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "The integration resource's settings"
#   },
#   "name": "SamlConfiguration",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"X.509 Signing Certificate in string form.\"\n#   },\n#   \"name\": \"ssoSigningCert\",\n#   \"type\": \"string\"\n# }\nssoSigningCert",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Sign in endpoint URL for the identity provider.\"\n#   },\n#   \"name\": \"ssoEndpoint\",\n#   \"type\": \"string\"\n# }\nssoEndpoint",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Binding method for authentication call. Can be either `post` (default) or `redirect`.\"\n#   },\n#   \"name\": \"ssoBinding\",\n#   \"type\": \"string\"\n# }\nssoBinding",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The algorithm of the Signing Certificate. Can be one of `sha1`, `sha256` (default), or `sha512`.\"\n#   },\n#   \"name\": \"ssoSignAlgo\",\n#   \"type\": \"string\"\n# }\nssoSignAlgo",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"List of allowed email domains for SAML authentication.\"\n#   },\n#   \"name\": \"allowedDomains\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nallowedDomains"
#   ]
# }
fragment SamlConfiguration on SamlConfiguration {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "X.509 Signing Certificate in string form."
  #   },
  #   "name": "ssoSigningCert",
  #   "type": "string"
  # }
  ssoSigningCert
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Sign in endpoint URL for the identity provider."
  #   },
  #   "name": "ssoEndpoint",
  #   "type": "string"
  # }
  ssoEndpoint
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Binding method for authentication call. Can be either `post` (default) or `redirect`."
  #   },
  #   "name": "ssoBinding",
  #   "type": "string"
  # }
  ssoBinding
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The algorithm of the Signing Certificate. Can be one of `sha1`, `sha256` (default), or `sha512`."
  #   },
  #   "name": "ssoSignAlgo",
  #   "type": "string"
  # }
  ssoSignAlgo
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "List of allowed email domains for SAML authentication."
  #   },
  #   "name": "allowedDomains",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  allowedDomains
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "AdminCommandPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment AdminCommandPayload on AdminCommandPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "EventPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment EventPayload on EventPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ApiKeyPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The API key that was created.\"\n#   },\n#   \"name\": \"apiKey\",\n#   \"type\": \"ApiKey\"\n# }\napiKey {\n                  ...ApiKey\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment ApiKeyPayload on ApiKeyPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The API key that was created."
  #   },
  #   "name": "apiKey",
  #   "type": "ApiKey"
  # }
  apiKey {
    ...ApiKey
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ArchivePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment ArchivePayload on ArchivePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "EmailUserAccountAuthChallengeResponse",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Supported challenge for this user account. Can be either verificationCode or password.\"\n#   },\n#   \"name\": \"authType\",\n#   \"type\": \"string\"\n# }\nauthType"
#   ]
# }
fragment EmailUserAccountAuthChallengeResponse on EmailUserAccountAuthChallengeResponse {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Supported challenge for this user account. Can be either verificationCode or password."
  #   },
  #   "name": "authType",
  #   "type": "string"
  # }
  authType
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CreateOrJoinOrganizationResponse",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"user\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\nuser {\n                      id\n                    }"
#   ]
# }
fragment CreateOrJoinOrganizationResponse on CreateOrJoinOrganizationResponse {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "user",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  user {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "BillingEmailPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The customer's email address the invoices are sent to.\"\n#   },\n#   \"name\": \"email\",\n#   \"type\": \"string\"\n# }\nemail"
#   ]
# }
fragment BillingEmailPayload on BillingEmailPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The customer's email address the invoices are sent to."
  #   },
  #   "name": "email",
  #   "type": "string"
  # }
  email
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CommentPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The comment that was created or updated.\"\n#   },\n#   \"name\": \"comment\",\n#   \"type\": \"Comment\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"A specific comment.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"comment\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the comment to retrieve.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Comment\"\n#       }\n#     }\n#   }\n# }\ncomment {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment CommentPayload on CommentPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The comment that was created or updated."
  #   },
  #   "name": "comment",
  #   "type": "Comment"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "A specific comment."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "comment"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the comment to retrieve."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Comment"
  #       }
  #     }
  #   }
  # }
  comment {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ContactPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment ContactPayload on ContactPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CustomViewPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The custom view that was created or updated.\"\n#   },\n#   \"name\": \"customView\",\n#   \"type\": \"CustomView\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific custom view.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"customView\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"CustomView\"\n#       }\n#     }\n#   }\n# }\ncustomView {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment CustomViewPayload on CustomViewPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The custom view that was created or updated."
  #   },
  #   "name": "customView",
  #   "type": "CustomView"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific custom view."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "customView"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "CustomView"
  #       }
  #     }
  #   }
  # }
  customView {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CyclePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The Cycle that was created or updated.\"\n#   },\n#   \"name\": \"cycle\",\n#   \"type\": \"Cycle\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific cycle.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"cycle\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Cycle\"\n#       }\n#     }\n#   }\n# }\ncycle {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment CyclePayload on CyclePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The Cycle that was created or updated."
  #   },
  #   "name": "cycle",
  #   "type": "Cycle"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific cycle."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "cycle"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Cycle"
  #       }
  #     }
  #   }
  # }
  cycle {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "DebugPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment DebugPayload on DebugPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "EmailUnsubscribePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment EmailUnsubscribePayload on EmailUnsubscribePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "EmojiPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The emoji that was created.\"\n#   },\n#   \"name\": \"emoji\",\n#   \"type\": \"Emoji\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"A specific emoji.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"emoji\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the emoji to retrieve.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Emoji\"\n#       }\n#     }\n#   }\n# }\nemoji {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment EmojiPayload on EmojiPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The emoji that was created."
  #   },
  #   "name": "emoji",
  #   "type": "Emoji"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "A specific emoji."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "emoji"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the emoji to retrieve."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Emoji"
  #       }
  #     }
  #   }
  # }
  emoji {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "FavoritePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The object that was added as a favorite.\"\n#   },\n#   \"name\": \"favorite\",\n#   \"type\": \"Favorite\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific favorite.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"favorite\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Favorite\"\n#       }\n#     }\n#   }\n# }\nfavorite {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment FavoritePayload on FavoritePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The object that was added as a favorite."
  #   },
  #   "name": "favorite",
  #   "type": "Favorite"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific favorite."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "favorite"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Favorite"
  #       }
  #     }
  #   }
  # }
  favorite {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "FeedbackPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment FeedbackPayload on FeedbackPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UploadPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Object describing the file to be uploaded.\"\n#   },\n#   \"name\": \"uploadFile\",\n#   \"type\": \"UploadFile\"\n# }\nuploadFile {\n                  ...UploadFile\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment UploadPayload on UploadPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Object describing the file to be uploaded."
  #   },
  #   "name": "uploadFile",
  #   "type": "UploadFile"
  # }
  uploadFile {
    ...UploadFile
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# Object representing Google Cloud upload policy, plus additional data.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Object representing Google Cloud upload policy, plus additional data."
#   },
#   "name": "UploadFile",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The filename.\"\n#   },\n#   \"name\": \"filename\",\n#   \"type\": \"string\"\n# }\nfilename",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The content type.\"\n#   },\n#   \"name\": \"contentType\",\n#   \"type\": \"string\"\n# }\ncontentType",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The size of the uploaded file.\"\n#   },\n#   \"name\": \"size\",\n#   \"type\": \"number\"\n# }\nsize",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The signed URL the for the uploaded file. (assigned automatically)\"\n#   },\n#   \"name\": \"uploadUrl\",\n#   \"type\": \"string\"\n# }\nuploadUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The asset URL for the uploaded file. (assigned automatically)\"\n#   },\n#   \"name\": \"assetUrl\",\n#   \"type\": \"string\"\n# }\nassetUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"metaData\",\n#   \"type\": \"JSON\"\n# }\nmetaData",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"headers\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"UploadFileHeader\"\n#   }\n# }\nheaders {\n                  ...UploadFileHeader\n                }"
#   ]
# }
fragment UploadFile on UploadFile {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The filename."
  #   },
  #   "name": "filename",
  #   "type": "string"
  # }
  filename
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The content type."
  #   },
  #   "name": "contentType",
  #   "type": "string"
  # }
  contentType
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The size of the uploaded file."
  #   },
  #   "name": "size",
  #   "type": "number"
  # }
  size
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The signed URL the for the uploaded file. (assigned automatically)"
  #   },
  #   "name": "uploadUrl",
  #   "type": "string"
  # }
  uploadUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The asset URL for the uploaded file. (assigned automatically)"
  #   },
  #   "name": "assetUrl",
  #   "type": "string"
  # }
  assetUrl
  # {
  #   "kind": "FieldDefinition",
  #   "name": "metaData",
  #   "type": "JSON"
  # }
  metaData
  # {
  #   "kind": "FieldDefinition",
  #   "name": "headers",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "UploadFileHeader"
  #   }
  # }
  headers {
    ...UploadFileHeader
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UploadFileHeader",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Upload file header key.\"\n#   },\n#   \"name\": \"key\",\n#   \"type\": \"string\"\n# }\nkey",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Upload file header value.\"\n#   },\n#   \"name\": \"value\",\n#   \"type\": \"string\"\n# }\nvalue"
#   ]
# }
fragment UploadFileHeader on UploadFileHeader {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Upload file header key."
  #   },
  #   "name": "key",
  #   "type": "string"
  # }
  key
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Upload file header value."
  #   },
  #   "name": "value",
  #   "type": "string"
  # }
  value
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ImageUploadFromUrlPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The URL containing the image.\"\n#   },\n#   \"name\": \"url\",\n#   \"type\": \"string\"\n# }\nurl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment ImageUploadFromUrlPayload on ImageUploadFromUrlPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The URL containing the image."
  #   },
  #   "name": "url",
  #   "type": "string"
  # }
  url
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IntegrationPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The integration that was created or updated.\"\n#   },\n#   \"name\": \"integration\",\n#   \"type\": \"Integration\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific integration.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"integration\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Integration\"\n#       }\n#     }\n#   }\n# }\nintegration {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment IntegrationPayload on IntegrationPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The integration that was created or updated."
  #   },
  #   "name": "integration",
  #   "type": "Integration"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific integration."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "integration"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Integration"
  #       }
  #     }
  #   }
  # }
  integration {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IssueLabelPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The label that was created or updated.\"\n#   },\n#   \"name\": \"issueLabel\",\n#   \"type\": \"IssueLabel\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific label.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issueLabel\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"IssueLabel\"\n#       }\n#     }\n#   }\n# }\nissueLabel {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment IssueLabelPayload on IssueLabelPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The label that was created or updated."
  #   },
  #   "name": "issueLabel",
  #   "type": "IssueLabel"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific label."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issueLabel"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "IssueLabel"
  #       }
  #     }
  #   }
  # }
  issueLabel {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IssueRelationPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue relation that was created or updated.\"\n#   },\n#   \"name\": \"issueRelation\",\n#   \"type\": \"IssueRelation\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific issue relation.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issueRelation\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"IssueRelation\"\n#       }\n#     }\n#   }\n# }\nissueRelation {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment IssueRelationPayload on IssueRelationPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue relation that was created or updated."
  #   },
  #   "name": "issueRelation",
  #   "type": "IssueRelation"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific issue relation."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issueRelation"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "IssueRelation"
  #       }
  #     }
  #   }
  # }
  issueRelation {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IssuePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue that was created or updated.\"\n#   },\n#   \"name\": \"issue\",\n#   \"type\": \"Issue\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific issue.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"issue\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Issue\"\n#       }\n#     }\n#   }\n# }\nissue {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment IssuePayload on IssuePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue that was created or updated."
  #   },
  #   "name": "issue",
  #   "type": "Issue"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific issue."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "issue"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Issue"
  #       }
  #     }
  #   }
  # }
  issue {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "MilestonePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The milesteone that was created or updated.\"\n#   },\n#   \"name\": \"milestone\",\n#   \"type\": \"Milestone\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific milestone.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"milestone\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Milestone\"\n#       }\n#     }\n#   }\n# }\nmilestone {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment MilestonePayload on MilestonePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The milesteone that was created or updated."
  #   },
  #   "name": "milestone",
  #   "type": "Milestone"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific milestone."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "milestone"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Milestone"
  #       }
  #     }
  #   }
  # }
  milestone {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "NotificationPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The notification that was created or updated.\"\n#   },\n#   \"name\": \"notification\",\n#   \"type\": \"Notification\"\n# }\nnotification {\n                  ...Notification\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment NotificationPayload on NotificationPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The notification that was created or updated."
  #   },
  #   "name": "notification",
  #   "type": "Notification"
  # }
  notification {
    ...Notification
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "NotificationSubscriptionPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The notification subscription that was created or updated.\"\n#   },\n#   \"name\": \"notificationSubscription\",\n#   \"type\": \"NotificationSubscription\"\n# }\nnotificationSubscription {\n                  ...NotificationSubscription\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment NotificationSubscriptionPayload on NotificationSubscriptionPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The notification subscription that was created or updated."
  #   },
  #   "name": "notificationSubscription",
  #   "type": "NotificationSubscription"
  # }
  notificationSubscription {
    ...NotificationSubscription
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OauthClientPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The OAuth client application that was created or updated.\"\n#   },\n#   \"name\": \"oauthClient\",\n#   \"type\": \"OauthClient\"\n# }\noauthClient {\n                  ...OauthClient\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment OauthClientPayload on OauthClientPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The OAuth client application that was created or updated."
  #   },
  #   "name": "oauthClient",
  #   "type": "OauthClient"
  # }
  oauthClient {
    ...OauthClient
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# OAuth2 client application
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "OAuth2 client application"
#   },
#   "name": "OauthClient",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"OAuth application's client ID.\"\n#   },\n#   \"name\": \"clientId\",\n#   \"type\": \"string\"\n# }\nclientId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"OAuth application's client name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Information about the application.\"\n#   },\n#   \"name\": \"description\",\n#   \"type\": \"string\"\n# }\ndescription",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Name of the developer.\"\n#   },\n#   \"name\": \"developer\",\n#   \"type\": \"string\"\n# }\ndeveloper",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Url of the developer.\"\n#   },\n#   \"name\": \"developerUrl\",\n#   \"type\": \"string\"\n# }\ndeveloperUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Image of the application.\"\n#   },\n#   \"name\": \"imageUrl\",\n#   \"type\": \"string\"\n# }\nimageUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"OAuth application's client secret.\"\n#   },\n#   \"name\": \"clientSecret\",\n#   \"type\": \"string\"\n# }\nclientSecret",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"List of allowed redirect URIs for the application.\"\n#   },\n#   \"name\": \"redirectUris\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"string\"\n#   }\n# }\nredirectUris"
#   ]
# }
fragment OauthClient on OauthClient {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "OAuth application's client ID."
  #   },
  #   "name": "clientId",
  #   "type": "string"
  # }
  clientId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "OAuth application's client name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Information about the application."
  #   },
  #   "name": "description",
  #   "type": "string"
  # }
  description
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Name of the developer."
  #   },
  #   "name": "developer",
  #   "type": "string"
  # }
  developer
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Url of the developer."
  #   },
  #   "name": "developerUrl",
  #   "type": "string"
  # }
  developerUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Image of the application."
  #   },
  #   "name": "imageUrl",
  #   "type": "string"
  # }
  imageUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "OAuth application's client secret."
  #   },
  #   "name": "clientSecret",
  #   "type": "string"
  # }
  clientSecret
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "List of allowed redirect URIs for the application."
  #   },
  #   "name": "redirectUris",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "string"
  #   }
  # }
  redirectUris
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "RotateSecretPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment RotateSecretPayload on RotateSecretPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OauthTokenRevokePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment OauthTokenRevokePayload on OauthTokenRevokePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationDomainPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization domain that was created or updated.\"\n#   },\n#   \"name\": \"organizationDomain\",\n#   \"type\": \"OrganizationDomain\"\n# }\norganizationDomain {\n                  ...OrganizationDomain\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment OrganizationDomainPayload on OrganizationDomainPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization domain that was created or updated."
  #   },
  #   "name": "organizationDomain",
  #   "type": "OrganizationDomain"
  # }
  organizationDomain {
    ...OrganizationDomain
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# Defines the use of a domain by an organization.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Defines the use of a domain by an organization."
#   },
#   "name": "OrganizationDomain",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Domain name\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Is this domain verified\"\n#   },\n#   \"name\": \"verified\",\n#   \"type\": \"boolean\"\n# }\nverified",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who added the domain.\"\n#   },\n#   \"name\": \"creator\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ncreator {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"E-mail used to verify this domain\"\n#   },\n#   \"name\": \"verificationEmail\",\n#   \"type\": \"string\"\n# }\nverificationEmail"
#   ]
# }
fragment OrganizationDomain on OrganizationDomain {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Domain name"
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Is this domain verified"
  #   },
  #   "name": "verified",
  #   "type": "boolean"
  # }
  verified
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who added the domain."
  #   },
  #   "name": "creator",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "E-mail used to verify this domain"
  #   },
  #   "name": "verificationEmail",
  #   "type": "string"
  # }
  verificationEmail
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationInvitePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization invite that was created or updated.\"\n#   },\n#   \"name\": \"organizationInvite\",\n#   \"type\": \"OrganizationInvite\"\n# }\norganizationInvite {\n                  ...OrganizationInvite\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment OrganizationInvitePayload on OrganizationInvitePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization invite that was created or updated."
  #   },
  #   "name": "organizationInvite",
  #   "type": "OrganizationInvite"
  # }
  organizationInvite {
    ...OrganizationInvite
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ProjectLinkPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project that was created or updated.\"\n#   },\n#   \"name\": \"projectLink\",\n#   \"type\": \"ProjectLink\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific project link.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"projectLink\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"ProjectLink\"\n#       }\n#     }\n#   }\n# }\nprojectLink {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment ProjectLinkPayload on ProjectLinkPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project that was created or updated."
  #   },
  #   "name": "projectLink",
  #   "type": "ProjectLink"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific project link."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "projectLink"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "ProjectLink"
  #       }
  #     }
  #   }
  # }
  projectLink {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ProjectPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project that was created or updated.\"\n#   },\n#   \"name\": \"project\",\n#   \"type\": \"Project\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific project.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"project\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Project\"\n#       }\n#     }\n#   }\n# }\nproject {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment ProjectPayload on ProjectPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project that was created or updated."
  #   },
  #   "name": "project",
  #   "type": "Project"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific project."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "project"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Project"
  #       }
  #     }
  #   }
  # }
  project {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ReactionPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"reaction\",\n#   \"type\": \"Reaction\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"A specific reaction.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"reaction\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier to retrieve.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Reaction\"\n#       }\n#     }\n#   }\n# }\nreaction {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment ReactionPayload on ReactionPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "name": "reaction",
  #   "type": "Reaction"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "A specific reaction."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "reaction"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier to retrieve."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Reaction"
  #       }
  #     }
  #   }
  # }
  reaction {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CreateCsvExportReportPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment CreateCsvExportReportPayload on CreateCsvExportReportPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "SubscriptionSessionPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The subscription session that was created or updated.\"\n#   },\n#   \"name\": \"session\",\n#   \"type\": \"string\"\n# }\nsession"
#   ]
# }
fragment SubscriptionSessionPayload on SubscriptionSessionPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The subscription session that was created or updated."
  #   },
  #   "name": "session",
  #   "type": "string"
  # }
  session
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "SubscriptionPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The date the subscription was set to cancel at the end of the billing period, if any.\"\n#   },\n#   \"name\": \"canceledAt\",\n#   \"type\": \"DateTime\"\n# }\ncanceledAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment SubscriptionPayload on SubscriptionPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The date the subscription was set to cancel at the end of the billing period, if any."
  #   },
  #   "name": "canceledAt",
  #   "type": "DateTime"
  # }
  canceledAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "TeamMembershipPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team membership that was created or updated.\"\n#   },\n#   \"name\": \"teamMembership\",\n#   \"type\": \"TeamMembership\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team membership.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"teamMembership\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"TeamMembership\"\n#       }\n#     }\n#   }\n# }\nteamMembership {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment TeamMembershipPayload on TeamMembershipPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team membership that was created or updated."
  #   },
  #   "name": "teamMembership",
  #   "type": "TeamMembership"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team membership."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "teamMembership"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "TeamMembership"
  #       }
  #     }
  #   }
  # }
  teamMembership {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "TeamPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that was created or updated.\"\n#   },\n#   \"name\": \"team\",\n#   \"type\": \"Team\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific team.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"team\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Team\"\n#       }\n#     }\n#   }\n# }\nteam {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment TeamPayload on TeamPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that was created or updated."
  #   },
  #   "name": "team",
  #   "type": "Team"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific team."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "team"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Team"
  #       }
  #     }
  #   }
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "TemplatePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The template that was created or updated.\"\n#   },\n#   \"name\": \"template\",\n#   \"type\": \"Template\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"A specific template.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"template\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the template to retrieve.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Template\"\n#       }\n#     }\n#   }\n# }\ntemplate {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment TemplatePayload on TemplatePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The template that was created or updated."
  #   },
  #   "name": "template",
  #   "type": "Template"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "A specific template."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "template"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the template to retrieve."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Template"
  #       }
  #     }
  #   }
  # }
  template {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UserSettingsPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment UserSettingsPayload on UserSettingsPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UserSettingsFlagPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The flag key which was updated.\"\n#   },\n#   \"name\": \"flag\",\n#   \"type\": \"string\"\n# }\nflag",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The flag value after update.\"\n#   },\n#   \"name\": \"value\",\n#   \"type\": \"number\"\n# }\nvalue",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment UserSettingsFlagPayload on UserSettingsFlagPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The flag key which was updated."
  #   },
  #   "name": "flag",
  #   "type": "string"
  # }
  flag
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The flag value after update."
  #   },
  #   "name": "value",
  #   "type": "number"
  # }
  value
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UserSettingsFlagsResetPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment UserSettingsFlagsResetPayload on UserSettingsFlagsResetPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UserSubscribeToNewsletterPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment UserSubscribeToNewsletterPayload on UserSubscribeToNewsletterPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ViewPreferencesPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The view preferences entity being mutated.\"\n#   },\n#   \"name\": \"viewPreferences\",\n#   \"type\": \"ViewPreferences\"\n# }\nviewPreferences {\n                  ...ViewPreferences\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment ViewPreferencesPayload on ViewPreferencesPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The view preferences entity being mutated."
  #   },
  #   "name": "viewPreferences",
  #   "type": "ViewPreferences"
  # }
  viewPreferences {
    ...ViewPreferences
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "WebhookPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The webhook entity being mutated.\"\n#   },\n#   \"name\": \"webhook\",\n#   \"type\": \"Webhook\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"A specific webhook.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"webhook\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the webhook to retrieve.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"Webhook\"\n#       }\n#     }\n#   }\n# }\nwebhook {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment WebhookPayload on WebhookPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The webhook entity being mutated."
  #   },
  #   "name": "webhook",
  #   "type": "Webhook"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "A specific webhook."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "webhook"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the webhook to retrieve."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "Webhook"
  #       }
  #     }
  #   }
  # }
  webhook {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "WorkflowStatePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The state that was created or updated.\"\n#   },\n#   \"name\": \"workflowState\",\n#   \"type\": \"WorkflowState\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific state.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"workflowState\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"WorkflowState\"\n#       }\n#     }\n#   }\n# }\nworkflowState {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment WorkflowStatePayload on WorkflowStatePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The state that was created or updated."
  #   },
  #   "name": "workflowState",
  #   "type": "WorkflowState"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific state."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "workflowState"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "WorkflowState"
  #       }
  #     }
  #   }
  # }
  workflowState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# Collaborative editing steps for documents.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Collaborative editing steps for documents."
#   },
#   "name": "DocumentStep",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Step data.\"\n#   },\n#   \"name\": \"step\",\n#   \"type\": \"JSON\"\n# }\nstep",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Step version.\"\n#   },\n#   \"name\": \"version\",\n#   \"type\": \"number\"\n# }\nversion",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Connected client ID.\"\n#   },\n#   \"name\": \"clientId\",\n#   \"type\": \"string\"\n# }\nclientId"
#   ]
# }
fragment DocumentStep on DocumentStep {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Step data."
  #   },
  #   "name": "step",
  #   "type": "JSON"
  # }
  step
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Step version."
  #   },
  #   "name": "version",
  #   "type": "number"
  # }
  version
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Connected client ID."
  #   },
  #   "name": "clientId",
  #   "type": "string"
  # }
  clientId
}

# A user's web browser push notification subscription.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A user's web browser push notification subscription."
#   },
#   "name": "PushSubscription",
#   "interfaces": [
#     "Node"
#   ],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The last time at which the entity was updated. This is the same as the creation time if the\\n    entity hasn't been update after creation.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the entity was archived. Null if the entity has not been archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt"
#   ]
# }
fragment PushSubscription on PushSubscription {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The last time at which the entity was updated. This is the same as the creation time if the\n    entity hasn't been update after creation."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the entity was archived. Null if the entity has not been archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "PushSubscriptionConnection",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"nodes\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"PushSubscription\"\n#   }\n# }\nnodes {\n                  ...PushSubscription\n                }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"pageInfo\",\n#   \"type\": \"PageInfo\"\n# }\npageInfo {\n                  ...PageInfo\n                }"
#   ]
# }
fragment PushSubscriptionConnection on PushSubscriptionConnection {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "nodes",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "PushSubscription"
  #   }
  # }
  nodes {
    ...PushSubscription
  }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "pageInfo",
  #   "type": "PageInfo"
  # }
  pageInfo {
    ...PageInfo
  }
}

# A user account.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A user account."
#   },
#   "name": "UserAccount",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The models identifier.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the model was created.\"\n#   },\n#   \"name\": \"createdAt\",\n#   \"type\": \"DateTime\"\n# }\ncreatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the model was updated.\"\n#   },\n#   \"name\": \"updatedAt\",\n#   \"type\": \"DateTime\"\n# }\nupdatedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The time at which the model was archived.\"\n#   },\n#   \"name\": \"archivedAt\",\n#   \"type\": \"DateTime\"\n# }\narchivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user's name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user's email address.\"\n#   },\n#   \"name\": \"email\",\n#   \"type\": \"string\"\n# }\nemail",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The authentication service used to create the account.\"\n#   },\n#   \"name\": \"service\",\n#   \"type\": \"string\"\n# }\nservice",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Users belonging to the account.\"\n#   },\n#   \"name\": \"users\",\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"User\"\n#   }\n# }\nusers {\n                  ...User\n                }"
#   ]
# }
fragment UserAccount on UserAccount {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The models identifier."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the model was created."
  #   },
  #   "name": "createdAt",
  #   "type": "DateTime"
  # }
  createdAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the model was updated."
  #   },
  #   "name": "updatedAt",
  #   "type": "DateTime"
  # }
  updatedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The time at which the model was archived."
  #   },
  #   "name": "archivedAt",
  #   "type": "DateTime"
  # }
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user's name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user's email address."
  #   },
  #   "name": "email",
  #   "type": "string"
  # }
  email
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The authentication service used to create the account."
  #   },
  #   "name": "service",
  #   "type": "string"
  # }
  service
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Users belonging to the account."
  #   },
  #   "name": "users",
  #   "type": {
  #     "kind": "ListType",
  #     "type": "User"
  #   }
  # }
  users {
    ...User
  }
}

# A recorded entry of a file uploaded by a user.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A recorded entry of a file uploaded by a user."
#   },
#   "name": "FileUpload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The unique identifier of the entity.\"\n#   },\n#   \"name\": \"id\",\n#   \"type\": \"string\"\n# }\nid",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who uploaded the file.\"\n#   },\n#   \"name\": \"creator\",\n#   \"type\": \"User\"\n# }\n# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"One specific user.\"\n#   },\n#   \"name\": {\n#     \"kind\": \"Name\",\n#     \"value\": \"user\"\n#   },\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query.\"\n#       },\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"id\"\n#       },\n#       \"type\": {\n#         \"kind\": \"NonNullType\",\n#         \"type\": {\n#           \"kind\": \"NamedType\",\n#           \"name\": {\n#             \"kind\": \"Name\",\n#             \"value\": \"String\"\n#           }\n#         }\n#       }\n#     }\n#   ],\n#   \"type\": {\n#     \"kind\": \"NonNullType\",\n#     \"type\": {\n#       \"kind\": \"NamedType\",\n#       \"name\": {\n#         \"kind\": \"Name\",\n#         \"value\": \"User\"\n#       }\n#     }\n#   }\n# }\ncreator {\n                      id\n                    }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The asset URL this file is available at.\"\n#   },\n#   \"name\": \"assetUrl\",\n#   \"type\": \"string\"\n# }\nassetUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The MIME type of the uploaded file.\"\n#   },\n#   \"name\": \"contentType\",\n#   \"type\": \"string\"\n# }\ncontentType",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The name of the uploaded file.\"\n#   },\n#   \"name\": \"filename\",\n#   \"type\": \"string\"\n# }\nfilename",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Additional metadata of the file.\"\n#   },\n#   \"name\": \"metaData\",\n#   \"type\": \"JSON\"\n# }\nmetaData",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Size of the uploaded file in bytes.\"\n#   },\n#   \"name\": \"size\",\n#   \"type\": \"number\"\n# }\nsize"
#   ]
# }
fragment FileUpload on FileUpload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The unique identifier of the entity."
  #   },
  #   "name": "id",
  #   "type": "string"
  # }
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who uploaded the file."
  #   },
  #   "name": "creator",
  #   "type": "User"
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "One specific user."
  #   },
  #   "name": {
  #     "kind": "Name",
  #     "value": "user"
  #   },
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
  #       },
  #       "name": {
  #         "kind": "Name",
  #         "value": "id"
  #       },
  #       "type": {
  #         "kind": "NonNullType",
  #         "type": {
  #           "kind": "NamedType",
  #           "name": {
  #             "kind": "Name",
  #             "value": "String"
  #           }
  #         }
  #       }
  #     }
  #   ],
  #   "type": {
  #     "kind": "NonNullType",
  #     "type": {
  #       "kind": "NamedType",
  #       "name": {
  #         "kind": "Name",
  #         "value": "User"
  #       }
  #     }
  #   }
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The asset URL this file is available at."
  #   },
  #   "name": "assetUrl",
  #   "type": "string"
  # }
  assetUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The MIME type of the uploaded file."
  #   },
  #   "name": "contentType",
  #   "type": "string"
  # }
  contentType
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The name of the uploaded file."
  #   },
  #   "name": "filename",
  #   "type": "string"
  # }
  filename
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Additional metadata of the file."
  #   },
  #   "name": "metaData",
  #   "type": "JSON"
  # }
  metaData
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Size of the uploaded file in bytes."
  #   },
  #   "name": "size",
  #   "type": "number"
  # }
  size
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "SynchronizedPayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The identifier of the last sync operation.\"\n#   },\n#   \"name\": \"lastSyncId\",\n#   \"type\": \"number\"\n# }\nlastSyncId"
#   ]
# }
fragment SynchronizedPayload on SynchronizedPayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The identifier of the last sync operation."
  #   },
  #   "name": "lastSyncId",
  #   "type": "number"
  # }
  lastSyncId
}

# Public information of the OAuth application.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Public information of the OAuth application."
#   },
#   "name": "Application",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"OAuth application's client ID.\"\n#   },\n#   \"name\": \"clientId\",\n#   \"type\": \"string\"\n# }\nclientId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Application name.\"\n#   },\n#   \"name\": \"name\",\n#   \"type\": \"string\"\n# }\nname",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Information about the application.\"\n#   },\n#   \"name\": \"description\",\n#   \"type\": \"string\"\n# }\ndescription",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Name of the developer.\"\n#   },\n#   \"name\": \"developer\",\n#   \"type\": \"string\"\n# }\ndeveloper",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Url of the developer (homepage or docs).\"\n#   },\n#   \"name\": \"developerUrl\",\n#   \"type\": \"string\"\n# }\ndeveloperUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Image of the application.\"\n#   },\n#   \"name\": \"imageUrl\",\n#   \"type\": \"string\"\n# }\nimageUrl"
#   ]
# }
fragment Application on Application {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "OAuth application's client ID."
  #   },
  #   "name": "clientId",
  #   "type": "string"
  # }
  clientId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Application name."
  #   },
  #   "name": "name",
  #   "type": "string"
  # }
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Information about the application."
  #   },
  #   "name": "description",
  #   "type": "string"
  # }
  description
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Name of the developer."
  #   },
  #   "name": "developer",
  #   "type": "string"
  # }
  developer
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Url of the developer (homepage or docs)."
  #   },
  #   "name": "developerUrl",
  #   "type": "string"
  # }
  developerUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Image of the application."
  #   },
  #   "name": "imageUrl",
  #   "type": "string"
  # }
  imageUrl
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationDomainSimplePayload",
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Whether the operation was successful.\"\n#   },\n#   \"name\": \"success\",\n#   \"type\": \"boolean\"\n# }\nsuccess"
#   ]
# }
fragment OrganizationDomainSimplePayload on OrganizationDomainSimplePayload {
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Whether the operation was successful."
  #   },
  #   "name": "success",
  #   "type": "boolean"
  # }
  success
}

# One specific user.
# {
#   "type": "query",
#   "operationName": "user",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific user."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "user"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the user to retrieve. To retrieve the authenticated user, use `viewer` query."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "User"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query user($id: String!) {
  user(id: $id) {
    ...User
  }
}
# Issues assigned to the user.
# {
#   "type": "query",
#   "operationName": "user_assignedIssues",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Issues assigned to the user."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "assignedIssues"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query user_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  user(id: $id) {
    assignedIssues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueConnection
    }
  }
}
# Issues created by the user.
# {
#   "type": "query",
#   "operationName": "user_createdIssues",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Issues created by the user."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "createdIssues"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query user_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  user(id: $id) {
    createdIssues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueConnection
    }
  }
}
# Memberships associated with the user.
# {
#   "type": "query",
#   "operationName": "user_teamMemberships",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Memberships associated with the user."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teamMemberships"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TeamMembershipConnection"
#         }
#       }
#     }
#   }
# }
query user_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  user(id: $id) {
    teamMemberships(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...TeamMembershipConnection
    }
  }
}

# The currently authenticated user.
# {
#   "type": "query",
#   "operationName": "viewer",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "The currently authenticated user."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "viewer"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "User"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query viewer {
  viewer {
    ...User
  }
}
# Issues assigned to the user.
# {
#   "type": "query",
#   "operationName": "viewer_assignedIssues",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Issues assigned to the user."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "assignedIssues"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query viewer_assignedIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  viewer {
    assignedIssues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueConnection
    }
  }
}
# Issues created by the user.
# {
#   "type": "query",
#   "operationName": "viewer_createdIssues",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Issues created by the user."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "createdIssues"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query viewer_createdIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  viewer {
    createdIssues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueConnection
    }
  }
}
# Memberships associated with the user.
# {
#   "type": "query",
#   "operationName": "viewer_teamMemberships",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Memberships associated with the user."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teamMemberships"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TeamMembershipConnection"
#         }
#       }
#     }
#   }
# }
query viewer_teamMemberships(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  viewer {
    teamMemberships(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...TeamMembershipConnection
    }
  }
}

# The user's organization.
# {
#   "type": "query",
#   "operationName": "organization",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "The user's organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organization"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Organization"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query organization {
  organization {
    ...Organization
  }
}
# Users associated with the organization.
# {
#   "type": "query",
#   "operationName": "organization_users",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Users associated with the organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "users"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserConnection"
#         }
#       }
#     }
#   }
# }
query organization_users(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organization {
    users(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...UserConnection
    }
  }
}
# Teams associated with the organization.
# {
#   "type": "query",
#   "operationName": "organization_teams",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Teams associated with the organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teams"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TeamConnection"
#         }
#       }
#     }
#   }
# }
query organization_teams(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organization {
    teams(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...TeamConnection
    }
  }
}
# Milestones associated with the organization.
# {
#   "type": "query",
#   "operationName": "organization_milestones",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Milestones associated with the organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "milestones"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "MilestoneConnection"
#         }
#       }
#     }
#   }
# }
query organization_milestones(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organization {
    milestones(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...MilestoneConnection
    }
  }
}
# Integrations associated with the organization.
# {
#   "type": "query",
#   "operationName": "organization_integrations",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Integrations associated with the organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrations"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationConnection"
#         }
#       }
#     }
#   }
# }
query organization_integrations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organization {
    integrations(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IntegrationConnection
    }
  }
}

# Does the organization exist.
# {
#   "type": "query",
#   "operationName": "organizationExists",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Does the organization exist."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationExists"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "urlKey"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OrganizationExistsPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query organizationExists($urlKey: String!) {
  organizationExists(urlKey: $urlKey) {
    ...OrganizationExistsPayload
  }
}

# Fetch data to catch up the client to the state of the world.
# {
#   "type": "query",
#   "operationName": "syncBootstrap",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Fetch data to catch up the client to the state of the world."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "syncBootstrap"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The version of the backend database the client has locally stored."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "databaseVersion"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "Int"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The last sync id the client has seen."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "sinceSyncId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "Int"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "SyncResponse"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query syncBootstrap($databaseVersion: Int!, $sinceSyncId: Int!) {
  syncBootstrap(databaseVersion: $databaseVersion, sinceSyncId: $sinceSyncId) {
    ...SyncResponse
  }
}

# Fetches delta packets to catch up the user to the current state of the world.
# {
#   "type": "query",
#   "operationName": "syncUpdates",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Fetches delta packets to catch up the user to the current state of the world."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "syncUpdates"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The last sync id the client has seen."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "sinceSyncId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "Float"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "SyncResponse"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query syncUpdates($sinceSyncId: Float!) {
  syncUpdates(sinceSyncId: $sinceSyncId) {
    ...SyncResponse
  }
}

# Fetches an archived model.
# {
#   "type": "query",
#   "operationName": "archivedModelSync",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Fetches an archived model."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "archivedModelSync"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the model to load. What an identifier is specific to the model class."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "identifier"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The class name of the model to load."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "modelClass"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchiveResponse"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query archivedModelSync($identifier: String!, $modelClass: String!) {
  archivedModelSync(identifier: $identifier, modelClass: $modelClass) {
    ...ArchiveResponse
  }
}

# Fetches archived models.
# {
#   "type": "query",
#   "operationName": "archivedModelsSync",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Fetches archived models."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "archivedModelsSync"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The class name of the models to load."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "modelClass"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The teamId for which to load archived models."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "teamId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Retrieve issues that have been archived before this date."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "DateTime"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of issues to load."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchiveResponse"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query archivedModelsSync($modelClass: String!, $teamId: String!, $before: DateTime, $last: Int) {
  archivedModelsSync(modelClass: $modelClass, teamId: $teamId, before: $before, last: $last) {
    ...ArchiveResponse
  }
}

# Finds a user account by email or identifier. Super user required.
# {
#   "type": "query",
#   "operationName": "adminUserAccountLookup",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Finds a user account by email or identifier. Super user required."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "adminUserAccountLookup"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Email by which to search for the user account."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "email"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier by which to search for the user account."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserAccountAdminPrivileged"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query adminUserAccountLookup($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    ...UserAccountAdminPrivileged
  }
}
# {
#   "type": "query",
#   "operationName": "adminUserAccountLookup_users",
#   "field": {
#     "kind": "FieldDefinition",
#     "name": {
#       "kind": "Name",
#       "value": "users"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "ListType",
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "UserAdminPrivileged"
#             }
#           }
#         }
#       }
#     }
#   }
# }
query adminUserAccountLookup_users($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      id
      createdAt
      updatedAt
      archivedAt
      name
      displayName
      email
      avatarUrl
      disableReason
      inviteHash
      # The settings of the user.
      # {
      #   "kind": "FieldDefinition",
      #   "description": {
      #     "kind": "StringValue",
      #     "value": "The settings of the user."
      #   },
      #   "name": {
      #     "kind": "Name",
      #     "value": "settings"
      #   },
      #   "type": {
      #     "kind": "NonNullType",
      #     "type": {
      #       "kind": "NamedType",
      #       "name": {
      #         "kind": "Name",
      #         "value": "UserSettings"
      #       }
      #     }
      #   }
      # }
      settings {
        ...UserSettings
      }
      lastSeen
      admin
      active
      # Issues assigned to the user.
      # {
      #   "kind": "FieldDefinition",
      #   "description": {
      #     "kind": "StringValue",
      #     "value": "Issues assigned to the user."
      #   },
      #   "name": {
      #     "kind": "Name",
      #     "value": "assignedIssues"
      #   },
      #   "type": {
      #     "kind": "NonNullType",
      #     "type": {
      #       "kind": "NamedType",
      #       "name": {
      #         "kind": "Name",
      #         "value": "IssueConnection"
      #       }
      #     }
      #   }
      # }
      assignedIssues {
        ...IssueConnection
      }
      # Issues created by the user.
      # {
      #   "kind": "FieldDefinition",
      #   "description": {
      #     "kind": "StringValue",
      #     "value": "Issues created by the user."
      #   },
      #   "name": {
      #     "kind": "Name",
      #     "value": "createdIssues"
      #   },
      #   "type": {
      #     "kind": "NonNullType",
      #     "type": {
      #       "kind": "NamedType",
      #       "name": {
      #         "kind": "Name",
      #         "value": "IssueConnection"
      #       }
      #     }
      #   }
      # }
      createdIssues {
        ...IssueConnection
      }
      # Organization in which the user belongs to. Super user required.
      # {
      #   "kind": "FieldDefinition",
      #   "description": {
      #     "kind": "StringValue",
      #     "value": "Organization in which the user belongs to. Super user required."
      #   },
      #   "name": {
      #     "kind": "Name",
      #     "value": "organization"
      #   },
      #   "type": {
      #     "kind": "NonNullType",
      #     "type": {
      #       "kind": "NamedType",
      #       "name": {
      #         "kind": "Name",
      #         "value": "OrganizationAdminPrivileged"
      #       }
      #     }
      #   }
      # }
      organization {
        ...OrganizationAdminPrivileged
      }
      createdIssueCount
      # Memberships associated with the user.
      # {
      #   "kind": "FieldDefinition",
      #   "description": {
      #     "kind": "StringValue",
      #     "value": "Memberships associated with the user."
      #   },
      #   "name": {
      #     "kind": "Name",
      #     "value": "teamMemberships"
      #   },
      #   "type": {
      #     "kind": "NonNullType",
      #     "type": {
      #       "kind": "NamedType",
      #       "name": {
      #         "kind": "Name",
      #         "value": "TeamMembershipConnection"
      #       }
      #     }
      #   }
      # }
      teamMemberships {
        ...TeamMembershipConnection
      }
    }
  }
}
# Issues assigned to the user.
# {
#   "type": "query",
#   "operationName": "adminUserAccountLookup_users_assignedIssues",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Issues assigned to the user."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "assignedIssues"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query adminUserAccountLookup_users_assignedIssues($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      assignedIssues {
        ...IssueConnection
      }
    }
  }
}
# Issues created by the user.
# {
#   "type": "query",
#   "operationName": "adminUserAccountLookup_users_createdIssues",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Issues created by the user."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "createdIssues"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query adminUserAccountLookup_users_createdIssues($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      createdIssues {
        ...IssueConnection
      }
    }
  }
}
# Organization in which the user belongs to. Super user required.
# {
#   "type": "query",
#   "operationName": "adminUserAccountLookup_users_organization",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Organization in which the user belongs to. Super user required."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organization"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OrganizationAdminPrivileged"
#         }
#       }
#     }
#   }
# }
query adminUserAccountLookup_users_organization($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        ...OrganizationAdminPrivileged
      }
    }
  }
}
# Users associated with the organization.
# {
#   "type": "query",
#   "operationName": "adminUserAccountLookup_users_organization_users",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Users associated with the organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "users"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserConnection"
#         }
#       }
#     }
#   }
# }
query adminUserAccountLookup_users_organization_users($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        users {
          ...UserConnection
        }
      }
    }
  }
}
# Teams associated with the organization.
# {
#   "type": "query",
#   "operationName": "adminUserAccountLookup_users_organization_teams",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Teams associated with the organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teams"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TeamConnection"
#         }
#       }
#     }
#   }
# }
query adminUserAccountLookup_users_organization_teams($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        teams {
          ...TeamConnection
        }
      }
    }
  }
}
# Milestones associated with the organization.
# {
#   "type": "query",
#   "operationName": "adminUserAccountLookup_users_organization_milestones",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Milestones associated with the organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "milestones"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "MilestoneConnection"
#         }
#       }
#     }
#   }
# }
query adminUserAccountLookup_users_organization_milestones($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        milestones {
          ...MilestoneConnection
        }
      }
    }
  }
}
# Integrations associated with the organization.
# {
#   "type": "query",
#   "operationName": "adminUserAccountLookup_users_organization_integrations",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Integrations associated with the organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrations"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationConnection"
#         }
#       }
#     }
#   }
# }
query adminUserAccountLookup_users_organization_integrations($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        integrations {
          ...IntegrationConnection
        }
      }
    }
  }
}
# The organization's subscription to a paid plan. Super user required.
# {
#   "type": "query",
#   "operationName": "adminUserAccountLookup_users_organization_subscription",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "The organization's subscription to a paid plan. Super user required."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "subscription"
#     },
#     "type": {
#       "kind": "NamedType",
#       "name": {
#         "kind": "Name",
#         "value": "SubscriptionAdminPrivileged"
#       }
#     }
#   }
# }
query adminUserAccountLookup_users_organization_subscription($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          ...SubscriptionAdminPrivileged
        }
      }
    }
  }
}
# Memberships associated with the user.
# {
#   "type": "query",
#   "operationName": "adminUserAccountLookup_users_teamMemberships",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Memberships associated with the user."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teamMemberships"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TeamMembershipConnection"
#         }
#       }
#     }
#   }
# }
query adminUserAccountLookup_users_teamMemberships($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      teamMemberships {
        ...TeamMembershipConnection
      }
    }
  }
}

# All users of the organization.
# {
#   "type": "query",
#   "operationName": "users",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All users of the organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "users"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query users(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  users(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...UserConnection
  }
}

# All API keys for the user.
# {
#   "type": "query",
#   "operationName": "apiKeys",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All API keys for the user."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "apiKeys"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ApiKeyConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query apiKeys(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  apiKeys(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...ApiKeyConnection
  }
}

# Get information for an application and whether a user has approved it for the given scopes.
# {
#   "type": "query",
#   "operationName": "applicationWithAuthorization",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Get information for an application and whether a user has approved it for the given scopes."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "applicationWithAuthorization"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Redirect URI for the application."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "redirectUri"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Scopes being requested by the application"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "scope"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "ListType",
#             "type": {
#               "kind": "NonNullType",
#               "type": {
#                 "kind": "NamedType",
#                 "name": {
#                   "kind": "Name",
#                   "value": "String"
#                 }
#               }
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The client ID of the application."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "clientId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserAuthorizedApplication"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query applicationWithAuthorization($redirectUri: String, $scope: [String!]!, $clientId: String!) {
  applicationWithAuthorization(redirectUri: $redirectUri, scope: $scope, clientId: $clientId) {
    ...UserAuthorizedApplication
  }
}

# Get all authorized applications for a user
# {
#   "type": "query",
#   "operationName": "authorizedApplications",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Get all authorized applications for a user"
#     },
#     "name": {
#       "kind": "Name",
#       "value": "authorizedApplications"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "ListType",
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "AuthorizedApplication"
#             }
#           }
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query authorizedApplications {
  authorizedApplications {
    clientId
    name
    description
    developer
    developerUrl
    imageUrl
    scope
    appId
  }
}

# Fetch SSO login URL for the email provided.
# {
#   "type": "query",
#   "operationName": "ssoUrlFromEmail",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Fetch SSO login URL for the email provided."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "ssoUrlFromEmail"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Whether the client is the desktop app."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "isDesktop"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Email to query the SSO login URL by."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "email"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "SsoUrlFromEmailResponse"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query ssoUrlFromEmail($isDesktop: Boolean, $email: String!) {
  ssoUrlFromEmail(isDesktop: $isDesktop, email: $email) {
    ...SsoUrlFromEmailResponse
  }
}

# Billing details for the customer.
# {
#   "type": "query",
#   "operationName": "billingDetails",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Billing details for the customer."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "billingDetails"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "BillingDetailsPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query billingDetails {
  billingDetails {
    ...BillingDetailsPayload
  }
}
# List of invoices, if any.
# {
#   "type": "query",
#   "operationName": "billingDetails_invoices",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "List of invoices, if any."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "invoices"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "ListType",
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "Invoice"
#             }
#           }
#         }
#       }
#     }
#   }
# }
query billingDetails_invoices {
  billingDetails {
    invoices {
      url
      created
      dueDate
      status
      total
    }
  }
}
# The payment method.
# {
#   "type": "query",
#   "operationName": "billingDetails_paymentMethod",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "The payment method."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "paymentMethod"
#     },
#     "type": {
#       "kind": "NamedType",
#       "name": {
#         "kind": "Name",
#         "value": "Card"
#       }
#     }
#   }
# }
query billingDetails_paymentMethod {
  billingDetails {
    paymentMethod {
      ...Card
    }
  }
}

# Join collaborative document and get missing steps.
# {
#   "type": "query",
#   "operationName": "collaborativeDocumentJoin",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Join collaborative document and get missing steps."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "collaborativeDocumentJoin"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the client."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "clientId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the Issue to join."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "issueId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Document version."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "version"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "Int"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CollaborationDocumentUpdatePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query collaborativeDocumentJoin($clientId: String!, $issueId: String!, $version: Int!) {
  collaborativeDocumentJoin(clientId: $clientId, issueId: $issueId, version: $version) {
    ...CollaborationDocumentUpdatePayload
  }
}
# Document steps the client has not seen yet and need to rebase it's local steps on.
# {
#   "type": "query",
#   "operationName": "collaborativeDocumentJoin_steps",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Document steps the client has not seen yet and need to rebase it's local steps on."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "steps"
#     },
#     "type": {
#       "kind": "NamedType",
#       "name": {
#         "kind": "Name",
#         "value": "StepsResponse"
#       }
#     }
#   }
# }
query collaborativeDocumentJoin_steps($clientId: String!, $issueId: String!, $version: Int!) {
  collaborativeDocumentJoin(clientId: $clientId, issueId: $issueId, version: $version) {
    steps {
      ...StepsResponse
    }
  }
}

# A specific comment.
# {
#   "type": "query",
#   "operationName": "comment",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "A specific comment."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "comment"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the comment to retrieve."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Comment"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query comment($id: String!) {
  comment(id: $id) {
    ...Comment
  }
}

# {
#   "type": "query",
#   "operationName": "comments",
#   "field": {
#     "kind": "FieldDefinition",
#     "name": {
#       "kind": "Name",
#       "value": "comments"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CommentConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query comments(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comments(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...CommentConnection
  }
}

# One specific custom view.
# {
#   "type": "query",
#   "operationName": "customView",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific custom view."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "customView"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CustomView"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query customView($id: String!) {
  customView(id: $id) {
    ...CustomView
  }
}

# {
#   "type": "query",
#   "operationName": "customViews",
#   "field": {
#     "kind": "FieldDefinition",
#     "name": {
#       "kind": "Name",
#       "value": "customViews"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CustomViewConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query customViews(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customViews(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...CustomViewConnection
  }
}

# One specific cycle.
# {
#   "type": "query",
#   "operationName": "cycle",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific cycle."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "cycle"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Cycle"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query cycle($id: String!) {
  cycle(id: $id) {
    ...Cycle
  }
}
# Issues associated with the cycle.
# {
#   "type": "query",
#   "operationName": "cycle_issues",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Issues associated with the cycle."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issues"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query cycle_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    issues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueConnection
    }
  }
}
# Issues that weren't completed when the cycle was closed.
# {
#   "type": "query",
#   "operationName": "cycle_uncompletedIssuesUponClose",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Issues that weren't completed when the cycle was closed."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "uncompletedIssuesUponClose"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query cycle_uncompletedIssuesUponClose(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    uncompletedIssuesUponClose(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueConnection
    }
  }
}

# All cycles.
# {
#   "type": "query",
#   "operationName": "cycles",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All cycles."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "cycles"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CycleConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query cycles(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycles(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...CycleConnection
  }
}

# A specific emoji.
# {
#   "type": "query",
#   "operationName": "emoji",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "A specific emoji."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "emoji"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the emoji to retrieve."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Emoji"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query emoji($id: String!) {
  emoji(id: $id) {
    ...Emoji
  }
}

# {
#   "type": "query",
#   "operationName": "emojis",
#   "field": {
#     "kind": "FieldDefinition",
#     "name": {
#       "kind": "Name",
#       "value": "emojis"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "EmojiConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query emojis(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emojis(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...EmojiConnection
  }
}

# One specific favorite.
# {
#   "type": "query",
#   "operationName": "favorite",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific favorite."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "favorite"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Favorite"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query favorite($id: String!) {
  favorite(id: $id) {
    ...Favorite
  }
}

# The user's favorites.
# {
#   "type": "query",
#   "operationName": "favorites",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "The user's favorites."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "favorites"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "FavoriteConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query favorites(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorites(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...FavoriteConnection
  }
}

# Fetch Figma screenshot and other information with file and node identifiers.
# {
#   "type": "query",
#   "operationName": "figmaEmbedInfo",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Fetch Figma screenshot and other information with file and node identifiers."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "figmaEmbedInfo"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Figma node identifier."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "nodeId"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Figma file identifier."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "fileId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "FigmaEmbedPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query figmaEmbedInfo($nodeId: String, $fileId: String!) {
  figmaEmbedInfo(nodeId: $nodeId, fileId: $fileId) {
    ...FigmaEmbedPayload
  }
}
# Figma embed information.
# {
#   "type": "query",
#   "operationName": "figmaEmbedInfo_figmaEmbed",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Figma embed information."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "figmaEmbed"
#     },
#     "type": {
#       "kind": "NamedType",
#       "name": {
#         "kind": "Name",
#         "value": "FigmaEmbed"
#       }
#     }
#   }
# }
query figmaEmbedInfo_figmaEmbed($nodeId: String, $fileId: String!) {
  figmaEmbedInfo(nodeId: $nodeId, fileId: $fileId) {
    figmaEmbed {
      ...FigmaEmbed
    }
  }
}

# One specific integration.
# {
#   "type": "query",
#   "operationName": "integration",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific integration."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integration"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Integration"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query integration($id: String!) {
  integration(id: $id) {
    ...Integration
  }
}
# Settings related to the integration.
# {
#   "type": "query",
#   "operationName": "integration_settings",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Settings related to the integration."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "settings"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationSettings"
#         }
#       }
#     }
#   }
# }
query integration_settings($id: String!) {
  integration(id: $id) {
    settings {
      ...IntegrationSettings
    }
  }
}
# {
#   "type": "query",
#   "operationName": "integration_settings_slackPost",
#   "field": {
#     "kind": "FieldDefinition",
#     "name": {
#       "kind": "Name",
#       "value": "slackPost"
#     },
#     "type": {
#       "kind": "NamedType",
#       "name": {
#         "kind": "Name",
#         "value": "SlackPostSettings"
#       }
#     }
#   }
# }
query integration_settings_slackPost($id: String!) {
  integration(id: $id) {
    settings {
      slackPost {
        ...SlackPostSettings
      }
    }
  }
}
# {
#   "type": "query",
#   "operationName": "integration_settings_slackProjectPost",
#   "field": {
#     "kind": "FieldDefinition",
#     "name": {
#       "kind": "Name",
#       "value": "slackProjectPost"
#     },
#     "type": {
#       "kind": "NamedType",
#       "name": {
#         "kind": "Name",
#         "value": "SlackPostSettings"
#       }
#     }
#   }
# }
query integration_settings_slackProjectPost($id: String!) {
  integration(id: $id) {
    settings {
      slackProjectPost {
        ...SlackPostSettings
      }
    }
  }
}
# {
#   "type": "query",
#   "operationName": "integration_settings_googleSheets",
#   "field": {
#     "kind": "FieldDefinition",
#     "name": {
#       "kind": "Name",
#       "value": "googleSheets"
#     },
#     "type": {
#       "kind": "NamedType",
#       "name": {
#         "kind": "Name",
#         "value": "GoogleSheetsSettings"
#       }
#     }
#   }
# }
query integration_settings_googleSheets($id: String!) {
  integration(id: $id) {
    settings {
      googleSheets {
        ...GoogleSheetsSettings
      }
    }
  }
}
# {
#   "type": "query",
#   "operationName": "integration_settings_sentry",
#   "field": {
#     "kind": "FieldDefinition",
#     "name": {
#       "kind": "Name",
#       "value": "sentry"
#     },
#     "type": {
#       "kind": "NamedType",
#       "name": {
#         "kind": "Name",
#         "value": "SentrySettings"
#       }
#     }
#   }
# }
query integration_settings_sentry($id: String!) {
  integration(id: $id) {
    settings {
      sentry {
        ...SentrySettings
      }
    }
  }
}

# All integrations.
# {
#   "type": "query",
#   "operationName": "integrations",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All integrations."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrations"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query integrations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrations(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...IntegrationConnection
  }
}

# One specific integration resource. (e.g. linked GitHub pull requests for an issue)
# {
#   "type": "query",
#   "operationName": "integrationResource",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific integration resource. (e.g. linked GitHub pull requests for an issue)"
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationResource"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationResource"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query integrationResource($id: String!) {
  integrationResource(id: $id) {
    ...IntegrationResource
  }
}
# Detailed information about the external resource.
# {
#   "type": "query",
#   "operationName": "integrationResource_data",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Detailed information about the external resource."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "data"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationResourceData"
#         }
#       }
#     }
#   }
# }
query integrationResource_data($id: String!) {
  integrationResource(id: $id) {
    data {
      ...IntegrationResourceData
    }
  }
}
# The payload for an IntegrationResource of type 'githubPullRequest'
# {
#   "type": "query",
#   "operationName": "integrationResource_data_githubPullRequest",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "The payload for an IntegrationResource of type 'githubPullRequest'"
#     },
#     "name": {
#       "kind": "Name",
#       "value": "githubPullRequest"
#     },
#     "type": {
#       "kind": "NamedType",
#       "name": {
#         "kind": "Name",
#         "value": "PullRequestPayload"
#       }
#     }
#   }
# }
query integrationResource_data_githubPullRequest($id: String!) {
  integrationResource(id: $id) {
    data {
      githubPullRequest {
        ...PullRequestPayload
      }
    }
  }
}
# The payload for an IntegrationResource of type 'gitlabMergeRequest'
# {
#   "type": "query",
#   "operationName": "integrationResource_data_gitlabMergeRequest",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "The payload for an IntegrationResource of type 'gitlabMergeRequest'"
#     },
#     "name": {
#       "kind": "Name",
#       "value": "gitlabMergeRequest"
#     },
#     "type": {
#       "kind": "NamedType",
#       "name": {
#         "kind": "Name",
#         "value": "PullRequestPayload"
#       }
#     }
#   }
# }
query integrationResource_data_gitlabMergeRequest($id: String!) {
  integrationResource(id: $id) {
    data {
      gitlabMergeRequest {
        ...PullRequestPayload
      }
    }
  }
}
# The payload for an IntegrationResource of type 'githubCommit'
# {
#   "type": "query",
#   "operationName": "integrationResource_data_githubCommit",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "The payload for an IntegrationResource of type 'githubCommit'"
#     },
#     "name": {
#       "kind": "Name",
#       "value": "githubCommit"
#     },
#     "type": {
#       "kind": "NamedType",
#       "name": {
#         "kind": "Name",
#         "value": "CommitPayload"
#       }
#     }
#   }
# }
query integrationResource_data_githubCommit($id: String!) {
  integrationResource(id: $id) {
    data {
      githubCommit {
        ...CommitPayload
      }
    }
  }
}
# The payload for an IntegrationResource of type 'sentryIssue'
# {
#   "type": "query",
#   "operationName": "integrationResource_data_sentryIssue",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "The payload for an IntegrationResource of type 'sentryIssue'"
#     },
#     "name": {
#       "kind": "Name",
#       "value": "sentryIssue"
#     },
#     "type": {
#       "kind": "NamedType",
#       "name": {
#         "kind": "Name",
#         "value": "SentryIssuePayload"
#       }
#     }
#   }
# }
query integrationResource_data_sentryIssue($id: String!) {
  integrationResource(id: $id) {
    data {
      sentryIssue {
        ...SentryIssuePayload
      }
    }
  }
}
# Pull request information for GitHub pull requests and GitLab merge requests.
# {
#   "type": "query",
#   "operationName": "integrationResource_pullRequest",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Pull request information for GitHub pull requests and GitLab merge requests."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "pullRequest"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "PullRequestPayload"
#         }
#       }
#     }
#   }
# }
query integrationResource_pullRequest($id: String!) {
  integrationResource(id: $id) {
    pullRequest {
      ...PullRequestPayload
    }
  }
}

# All integrations resources (e.g. linked GitHub pull requests for issues).
# {
#   "type": "query",
#   "operationName": "integrationResources",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All integrations resources (e.g. linked GitHub pull requests for issues)."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationResources"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationResourceConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query integrationResources(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResources(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...IntegrationResourceConnection
  }
}

# Retrieves information for the public invite page.
# {
#   "type": "query",
#   "operationName": "inviteInfo",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Retrieves information for the public invite page."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "inviteInfo"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Team hash."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "teamHash"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "User hash."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "userHash"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "InvitePagePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query inviteInfo($teamHash: String, $userHash: String!) {
  inviteInfo(teamHash: $teamHash, userHash: $userHash) {
    ...InvitePagePayload
  }
}
# Invite data.
# {
#   "type": "query",
#   "operationName": "inviteInfo_inviteData",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Invite data."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "inviteData"
#     },
#     "type": {
#       "kind": "NamedType",
#       "name": {
#         "kind": "Name",
#         "value": "InviteData"
#       }
#     }
#   }
# }
query inviteInfo_inviteData($teamHash: String, $userHash: String!) {
  inviteInfo(teamHash: $teamHash, userHash: $userHash) {
    inviteData {
      ...InviteData
    }
  }
}

# One specific label.
# {
#   "type": "query",
#   "operationName": "issueLabel",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific label."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueLabel"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueLabel"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query issueLabel($id: String!) {
  issueLabel(id: $id) {
    ...IssueLabel
  }
}
# Issues associated with the label.
# {
#   "type": "query",
#   "operationName": "issueLabel_issues",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Issues associated with the label."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issues"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query issueLabel_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    issues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueConnection
    }
  }
}

# All labels.
# {
#   "type": "query",
#   "operationName": "issueLabels",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All labels."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueLabels"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueLabelConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query issueLabels(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabels(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...IssueLabelConnection
  }
}

# One specific issue relation.
# {
#   "type": "query",
#   "operationName": "issueRelation",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific issue relation."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueRelation"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueRelation"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query issueRelation($id: String!) {
  issueRelation(id: $id) {
    ...IssueRelation
  }
}

# {
#   "type": "query",
#   "operationName": "issueRelations",
#   "field": {
#     "kind": "FieldDefinition",
#     "name": {
#       "kind": "Name",
#       "value": "issueRelations"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueRelationConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query issueRelations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelations(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...IssueRelationConnection
  }
}

# One specific issue.
# {
#   "type": "query",
#   "operationName": "issue",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific issue."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issue"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Issue"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query issue($id: String!) {
  issue(id: $id) {
    ...Issue
  }
}
# Users who are subscribed to the issue.
# {
#   "type": "query",
#   "operationName": "issue_subscribers",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Users who are subscribed to the issue."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "subscribers"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserConnection"
#         }
#       }
#     }
#   }
# }
query issue_subscribers(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    subscribers(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...UserConnection
    }
  }
}
# Children of the issue.
# {
#   "type": "query",
#   "operationName": "issue_children",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Children of the issue."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "children"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query issue_children(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    children(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueConnection
    }
  }
}
# Comments associated with the issue.
# {
#   "type": "query",
#   "operationName": "issue_comments",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Comments associated with the issue."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "comments"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CommentConnection"
#         }
#       }
#     }
#   }
# }
query issue_comments(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    comments(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...CommentConnection
    }
  }
}
# History entries associated with the issue.
# {
#   "type": "query",
#   "operationName": "issue_history",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "History entries associated with the issue."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "history"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueHistoryConnection"
#         }
#       }
#     }
#   }
# }
query issue_history(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    history(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueHistoryConnection
    }
  }
}
# Labels associated with this issue.
# {
#   "type": "query",
#   "operationName": "issue_labels",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Labels associated with this issue."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "labels"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueLabelConnection"
#         }
#       }
#     }
#   }
# }
query issue_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    labels(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueLabelConnection
    }
  }
}
# Integration resources for this issue.
# {
#   "type": "query",
#   "operationName": "issue_integrationResources",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Integration resources for this issue."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationResources"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationResourceConnection"
#         }
#       }
#     }
#   }
# }
query issue_integrationResources(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    integrationResources(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IntegrationResourceConnection
    }
  }
}
# Relations associated with this issue.
# {
#   "type": "query",
#   "operationName": "issue_relations",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Relations associated with this issue."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "relations"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueRelationConnection"
#         }
#       }
#     }
#   }
# }
query issue_relations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    relations(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueRelationConnection
    }
  }
}
# Inverse relations associated with this issue.
# {
#   "type": "query",
#   "operationName": "issue_inverseRelations",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Inverse relations associated with this issue."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "inverseRelations"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueRelationConnection"
#         }
#       }
#     }
#   }
# }
query issue_inverseRelations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    inverseRelations(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueRelationConnection
    }
  }
}

# [ALPHA] Search issues. This query is experimental and is subject to change without notice.
# {
#   "type": "query",
#   "operationName": "issueSearch",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "[ALPHA] Search issues. This query is experimental and is subject to change without notice."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueSearch"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Search string to look for."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "query"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query issueSearch(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
  $query: String!
) {
  issueSearch(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
    query: $query
  ) {
    ...IssueConnection
  }
}

# {
#   "type": "query",
#   "operationName": "issues",
#   "field": {
#     "kind": "FieldDefinition",
#     "name": {
#       "kind": "Name",
#       "value": "issues"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query issues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issues(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...IssueConnection
  }
}

# One specific milestone.
# {
#   "type": "query",
#   "operationName": "milestone",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific milestone."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "milestone"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Milestone"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query milestone($id: String!) {
  milestone(id: $id) {
    ...Milestone
  }
}
# Projects associated with the milestone.
# {
#   "type": "query",
#   "operationName": "milestone_projects",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Projects associated with the milestone."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "projects"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ProjectConnection"
#         }
#       }
#     }
#   }
# }
query milestone_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  milestone(id: $id) {
    projects(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...ProjectConnection
    }
  }
}

# All milestones.
# {
#   "type": "query",
#   "operationName": "milestones",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All milestones."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "milestones"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "MilestoneConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query milestones(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  milestones(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...MilestoneConnection
  }
}

# The user's settings.
# {
#   "type": "query",
#   "operationName": "notification",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "The user's settings."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "notification"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserSettings"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query notification {
  notification {
    ...UserSettings
  }
}

# All notifications.
# {
#   "type": "query",
#   "operationName": "notifications",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All notifications."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "notifications"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "NotificationConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query notifications(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  notifications(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...NotificationConnection
  }
}

# The user's notification subscriptions.
# {
#   "type": "query",
#   "operationName": "notificationSubscription",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "The user's notification subscriptions."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "notificationSubscription"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "NotificationSubscriptionConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query notificationSubscription(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  notificationSubscription(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...NotificationSubscriptionConnection
  }
}

# One specific organization invite.
# {
#   "type": "query",
#   "operationName": "organizationInvite",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific organization invite."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationInvite"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueLabel"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query organizationInvite($id: String!) {
  organizationInvite(id: $id) {
    ...IssueLabel
  }
}
# Issues associated with the label.
# {
#   "type": "query",
#   "operationName": "organizationInvite_issues",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Issues associated with the label."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issues"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query organizationInvite_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    issues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueConnection
    }
  }
}

# All invites for the organization.
# {
#   "type": "query",
#   "operationName": "organizationInvites",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All invites for the organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationInvites"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OrganizationInviteConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query organizationInvites(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvites(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...OrganizationInviteConnection
  }
}

# One specific project link.
# {
#   "type": "query",
#   "operationName": "projectLink",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific project link."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "projectLink"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ProjectLink"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query projectLink($id: String!) {
  projectLink(id: $id) {
    ...ProjectLink
  }
}

# All links for the project.
# {
#   "type": "query",
#   "operationName": "ProjectLinks",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All links for the project."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "ProjectLinks"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ProjectLinkConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query ProjectLinks(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  ProjectLinks(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...ProjectLinkConnection
  }
}

# One specific project.
# {
#   "type": "query",
#   "operationName": "project",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific project."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "project"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Project"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query project($id: String!) {
  project(id: $id) {
    ...Project
  }
}
# Teams associated with this project.
# {
#   "type": "query",
#   "operationName": "project_teams",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Teams associated with this project."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teams"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TeamConnection"
#         }
#       }
#     }
#   }
# }
query project_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    teams(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...TeamConnection
    }
  }
}
# Users that are members of the project.
# {
#   "type": "query",
#   "operationName": "project_members",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Users that are members of the project."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "members"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserConnection"
#         }
#       }
#     }
#   }
# }
query project_members(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    members(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...UserConnection
    }
  }
}
# Issues associated with the project.
# {
#   "type": "query",
#   "operationName": "project_issues",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Issues associated with the project."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issues"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query project_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    issues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueConnection
    }
  }
}
# Links associated with the project.
# {
#   "type": "query",
#   "operationName": "project_links",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Links associated with the project."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "links"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ProjectLinkConnection"
#         }
#       }
#     }
#   }
# }
query project_links(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    links(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...ProjectLinkConnection
    }
  }
}

# All projects.
# {
#   "type": "query",
#   "operationName": "projects",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All projects."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "projects"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ProjectConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query projects(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projects(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...ProjectConnection
  }
}

# Sends a test push message.
# {
#   "type": "query",
#   "operationName": "pushSubscriptionTest",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Sends a test push message."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "pushSubscriptionTest"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "PushSubscriptionPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query pushSubscriptionTest {
  pushSubscriptionTest {
    ...PushSubscriptionPayload
  }
}

# A specific reaction.
# {
#   "type": "query",
#   "operationName": "reaction",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "A specific reaction."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "reaction"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier to retrieve."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Reaction"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query reaction($id: String!) {
  reaction(id: $id) {
    ...Reaction
  }
}

# {
#   "type": "query",
#   "operationName": "reactions",
#   "field": {
#     "kind": "FieldDefinition",
#     "name": {
#       "kind": "Name",
#       "value": "reactions"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ReactionConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query reactions(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reactions(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...ReactionConnection
  }
}

# The organization's subscription.
# {
#   "type": "query",
#   "operationName": "subscription",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "The organization's subscription."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "subscription"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Subscription"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query subscription {
  subscription {
    ...Subscription
  }
}

# One specific team membership.
# {
#   "type": "query",
#   "operationName": "teamMembership",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific team membership."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teamMembership"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TeamMembership"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query teamMembership($id: String!) {
  teamMembership(id: $id) {
    ...TeamMembership
  }
}

# All team memberships.
# {
#   "type": "query",
#   "operationName": "teamMemberships",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All team memberships."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teamMemberships"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TeamMembershipConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query teamMemberships(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMemberships(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...TeamMembershipConnection
  }
}

# One specific team.
# {
#   "type": "query",
#   "operationName": "team",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "team"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Team"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query team($id: String!) {
  team(id: $id) {
    ...Team
  }
}
# Issues associated with the team.
# {
#   "type": "query",
#   "operationName": "team_issues",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Issues associated with the team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issues"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    issues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueConnection
    }
  }
}
# Cycles associated with the team.
# {
#   "type": "query",
#   "operationName": "team_cycles",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Cycles associated with the team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "cycles"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CycleConnection"
#         }
#       }
#     }
#   }
# }
query team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    cycles(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...CycleConnection
    }
  }
}
# Memberships associated with the team.
# {
#   "type": "query",
#   "operationName": "team_memberships",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Memberships associated with the team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "memberships"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TeamMembershipConnection"
#         }
#       }
#     }
#   }
# }
query team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    memberships(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...TeamMembershipConnection
    }
  }
}
# Projects associated with the team.
# {
#   "type": "query",
#   "operationName": "team_projects",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Projects associated with the team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "projects"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ProjectConnection"
#         }
#       }
#     }
#   }
# }
query team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    projects(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...ProjectConnection
    }
  }
}
# The states that define the workflow associated with the team.
# {
#   "type": "query",
#   "operationName": "team_states",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "The states that define the workflow associated with the team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "states"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "WorkflowStateConnection"
#         }
#       }
#     }
#   }
# }
query team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    states(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...WorkflowStateConnection
    }
  }
}
# Templates associated with the team.
# {
#   "type": "query",
#   "operationName": "team_templates",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Templates associated with the team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "templates"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TemplateConnection"
#         }
#       }
#     }
#   }
# }
query team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    templates(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...TemplateConnection
    }
  }
}
# Labels associated with the team.
# {
#   "type": "query",
#   "operationName": "team_labels",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Labels associated with the team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "labels"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueLabelConnection"
#         }
#       }
#     }
#   }
# }
query team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    labels(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueLabelConnection
    }
  }
}
# Webhooks associated with the team.
# {
#   "type": "query",
#   "operationName": "team_webhooks",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Webhooks associated with the team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "webhooks"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "WebhookConnection"
#         }
#       }
#     }
#   }
# }
query team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    webhooks(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...WebhookConnection
    }
  }
}

# All teams.
# {
#   "type": "query",
#   "operationName": "teams",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All teams."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teams"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TeamConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query teams(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teams(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...TeamConnection
  }
}

# All templates from all users.
# {
#   "type": "query",
#   "operationName": "templates",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All templates from all users."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "templates"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "ListType",
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "Template"
#             }
#           }
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query templates {
  templates {
    id
    createdAt
    updatedAt
    archivedAt
    type
    name
    description
    templateData
    # The team that the template is associated with.
    # {
    #   "kind": "FieldDefinition",
    #   "description": {
    #     "kind": "StringValue",
    #     "value": "The team that the template is associated with."
    #   },
    #   "name": {
    #     "kind": "Name",
    #     "value": "team"
    #   },
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "Team"
    #       }
    #     }
    #   }
    # }
    team {
      ...Team
    }
    # The user who created the template.
    # {
    #   "kind": "FieldDefinition",
    #   "description": {
    #     "kind": "StringValue",
    #     "value": "The user who created the template."
    #   },
    #   "name": {
    #     "kind": "Name",
    #     "value": "creator"
    #   },
    #   "type": {
    #     "kind": "NamedType",
    #     "name": {
    #       "kind": "Name",
    #       "value": "User"
    #     }
    #   }
    # }
    creator {
      ...User
    }
  }
}

# A specific template.
# {
#   "type": "query",
#   "operationName": "template",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "A specific template."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "template"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the template to retrieve."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Template"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query template($id: String!) {
  template(id: $id) {
    ...Template
  }
}

# All view preferences.
# {
#   "type": "query",
#   "operationName": "viewPreferences",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All view preferences."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "viewPreferences"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ViewPreferencesConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query viewPreferences(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  viewPreferences(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...ViewPreferencesConnection
  }
}

# A specific webhook.
# {
#   "type": "query",
#   "operationName": "webhook",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "A specific webhook."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "webhook"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the webhook to retrieve."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "Webhook"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query webhook($id: String!) {
  webhook(id: $id) {
    ...Webhook
  }
}

# All webhooks.
# {
#   "type": "query",
#   "operationName": "webhooks",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All webhooks."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "webhooks"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "WebhookConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query webhooks(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhooks(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...WebhookConnection
  }
}

# One specific state.
# {
#   "type": "query",
#   "operationName": "workflowState",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "One specific state."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "workflowState"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "WorkflowState"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query workflowState($id: String!) {
  workflowState(id: $id) {
    ...WorkflowState
  }
}
# Issues belonging in this state.
# {
#   "type": "query",
#   "operationName": "workflowState_issues",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Issues belonging in this state."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issues"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueConnection"
#         }
#       }
#     }
#   }
# }
query workflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    issues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      ...IssueConnection
    }
  }
}

# All states.
# {
#   "type": "query",
#   "operationName": "workflowStates",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "All states."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "workflowStates"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with last for backward pagination."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "before"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A cursor to be used with first for forward pagination"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "after"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to forward paginate (used with after). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "first"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The number of items to backward paginate (used with before). Defaults to 50."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "last"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Should archived resources be included (default: false)"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "includeArchived"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "orderBy"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "PaginationOrderBy"
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "WorkflowStateConnection"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
query workflowStates(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowStates(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    ...WorkflowStateConnection
  }
}
# Updates a user. Only available to organization admins and the user themselves.
# {
#   "type": "mutation",
#   "operationName": "userUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates a user. Only available to organization admins and the user themselves."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "userUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial user object to update the user with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "UpdateUserInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the user to update. Use `me` to reference currently authenticated user."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation userUpdate($input: UpdateUserInput!, $id: String!) {
  userUpdate(input: $input, id: $id) {
    ...UserPayload
  }
}

# Makes user an admin. Can only be called by an admin.
# {
#   "type": "mutation",
#   "operationName": "userPromoteAdmin",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Makes user an admin. Can only be called by an admin."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "userPromoteAdmin"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the user to make an admin."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserAdminPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation userPromoteAdmin($id: String!) {
  userPromoteAdmin(id: $id) {
    ...UserAdminPayload
  }
}

# Makes user a regular user. Can only be called by an admin.
# {
#   "type": "mutation",
#   "operationName": "userDemoteAdmin",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Makes user a regular user. Can only be called by an admin."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "userDemoteAdmin"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the user to make a regular user."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserAdminPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation userDemoteAdmin($id: String!) {
  userDemoteAdmin(id: $id) {
    ...UserAdminPayload
  }
}

# Suspends a user. Can only be called by an admin.
# {
#   "type": "mutation",
#   "operationName": "userSuspend",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Suspends a user. Can only be called by an admin."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "userSuspend"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the user to suspend."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserAdminPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation userSuspend($id: String!) {
  userSuspend(id: $id) {
    ...UserAdminPayload
  }
}

# Un-suspends a user. Can only be called by an admin.
# {
#   "type": "mutation",
#   "operationName": "userUnsuspend",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Un-suspends a user. Can only be called by an admin."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "userUnsuspend"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the user to unsuspend."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserAdminPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation userUnsuspend($id: String!) {
  userUnsuspend(id: $id) {
    ...UserAdminPayload
  }
}

# Updates the user's organization.
# {
#   "type": "mutation",
#   "operationName": "organizationUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates the user's organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial organization object to update the organization with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "UpdateOrganizationInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OrganizationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation organizationUpdate($input: UpdateOrganizationInput!) {
  organizationUpdate(input: $input) {
    ...OrganizationPayload
  }
}

# Get an organization's delete confirmation token. Administrator privileges required.
# {
#   "type": "mutation",
#   "operationName": "organizationDeleteChallenge",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Get an organization's delete confirmation token. Administrator privileges required."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationDeleteChallenge"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OrganizationDeletePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation organizationDeleteChallenge {
  organizationDeleteChallenge {
    ...OrganizationDeletePayload
  }
}

# Delete's an organization. Administrator privileges required.
# {
#   "type": "mutation",
#   "operationName": "organizationDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Delete's an organization. Administrator privileges required."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Information required to delete an organization."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "DeleteOrganizationInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OrganizationDeletePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation organizationDelete($input: DeleteOrganizationInput!) {
  organizationDelete(input: $input) {
    ...OrganizationDeletePayload
  }
}

# Deletes an integration. Superuser privileges required.
# {
#   "type": "mutation",
#   "operationName": "adminDeleteIntegration",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes an integration. Superuser privileges required."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "adminDeleteIntegration"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the integration to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "AdminIntegrationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation adminDeleteIntegration($id: String!) {
  adminDeleteIntegration(id: $id) {
    ...AdminIntegrationPayload
  }
}

# Disable organization access. Superuser privileges required.
# {
#   "type": "mutation",
#   "operationName": "organizationToggleAccess",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Disable organization access. Superuser privileges required."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationToggleAccess"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the organization to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OrganizationAccessPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation organizationToggleAccess($id: String!) {
  organizationToggleAccess(id: $id) {
    ...OrganizationAccessPayload
  }
}

# Change email domain for all users and accounts in the organization.
# {
#   "type": "mutation",
#   "operationName": "organizationChangeEmailDomain",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Change email domain for all users and accounts in the organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationChangeEmailDomain"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The email domain to update to."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "toDomain"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The email domain to update from."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "fromDomain"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the organization to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OrganizationAccessPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation organizationChangeEmailDomain($toDomain: String!, $fromDomain: String!, $id: String!) {
  organizationChangeEmailDomain(toDomain: $toDomain, fromDomain: $fromDomain, id: $id) {
    ...OrganizationAccessPayload
  }
}

# Toggle SAML authentication on or off for an organization. Superuser privileges required.
# {
#   "type": "mutation",
#   "operationName": "organizationToggleSamlEnabled",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Toggle SAML authentication on or off for an organization. Superuser privileges required."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationToggleSamlEnabled"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the organization to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OrganizationSamlConfigurePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation organizationToggleSamlEnabled($id: String!) {
  organizationToggleSamlEnabled(id: $id) {
    ...OrganizationSamlConfigurePayload
  }
}

# Configure SAML authentication for an organization. Superuser privileges required.
# {
#   "type": "mutation",
#   "operationName": "organizationConfigureSaml",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Configure SAML authentication for an organization. Superuser privileges required."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationConfigureSaml"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Saml configuration for the organization."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "samlConfiguration"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "SamlConfigurationInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the organization to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OrganizationSamlConfigurePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation organizationConfigureSaml($samlConfiguration: SamlConfigurationInput!, $id: String!) {
  organizationConfigureSaml(samlConfiguration: $samlConfiguration, id: $id) {
    ...OrganizationSamlConfigurePayload
  }
}

# Executes admin command.
# {
#   "type": "mutation",
#   "operationName": "adminCommand",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Executes admin command."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "adminCommand"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The command to perform."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "AdminCommandInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "AdminCommandPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation adminCommand($input: AdminCommandInput!) {
  adminCommand(input: $input) {
    ...AdminCommandPayload
  }
}

# Sends out emails in bulk to our users.
# {
#   "type": "mutation",
#   "operationName": "adminBulkEmail",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Sends out emails in bulk to our users."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "adminBulkEmail"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A random delay in seconds to add to the email task."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "randomDelay"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Int"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The user emails to send the email to."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "emails"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "ListType",
#             "type": {
#               "kind": "NonNullType",
#               "type": {
#                 "kind": "NamedType",
#                 "name": {
#                   "kind": "Name",
#                   "value": "String"
#                 }
#               }
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The content of the email to send in markdown format."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "markdownContent"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The subject of the email to send."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "subject"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "AdminCommandPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation adminBulkEmail($randomDelay: Int, $emails: [String!]!, $markdownContent: String!, $subject: String!) {
  adminBulkEmail(randomDelay: $randomDelay, emails: $emails, markdownContent: $markdownContent, subject: $subject) {
    ...AdminCommandPayload
  }
}

# Creates a stripe customer for an organization.
# {
#   "type": "mutation",
#   "operationName": "adminCreateStripeCustomer",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a stripe customer for an organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "adminCreateStripeCustomer"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The id of the organization to create the stripe customer for. If the organization already has a customer account, an error will be returned."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "organizationId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "AdminCommandPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation adminCreateStripeCustomer($organizationId: String!) {
  adminCreateStripeCustomer(organizationId: $organizationId) {
    ...AdminCommandPayload
  }
}

# Schedules a task. Currently only anonymous tasks without any parameters can be scheduled.
# {
#   "type": "mutation",
#   "operationName": "adminScheduleAnonymousTask",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Schedules a task. Currently only anonymous tasks without any parameters can be scheduled."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "adminScheduleAnonymousTask"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The name of the task to execute"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "taskName"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "AdminCommandPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation adminScheduleAnonymousTask($taskName: String!) {
  adminScheduleAnonymousTask(taskName: $taskName) {
    ...AdminCommandPayload
  }
}

# Changes the email address for the user account and all of its users.
# {
#   "type": "mutation",
#   "operationName": "adminUserAccountChangeEmail",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Changes the email address for the user account and all of its users."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "adminUserAccountChangeEmail"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "newEmail"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserAccountAdminPrivileged"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation adminUserAccountChangeEmail($newEmail: String!, $id: String!) {
  adminUserAccountChangeEmail(newEmail: $newEmail, id: $id) {
    ...UserAccountAdminPrivileged
  }
}

# [Deprecated] Creates a new event.
# {
#   "type": "mutation",
#   "operationName": "eventCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "[Deprecated] Creates a new event."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "eventCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The event to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "EventCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "EventPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation eventCreate($input: EventCreateInput!) {
  eventCreate(input: $input) {
    ...EventPayload
  }
}

# Creates a new API key.
# {
#   "type": "mutation",
#   "operationName": "apiKeyCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new API key."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "apiKeyCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The api key object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "ApiKeyCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ApiKeyPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation apiKeyCreate($input: ApiKeyCreateInput!) {
  apiKeyCreate(input: $input) {
    ...ApiKeyPayload
  }
}

# Deletes an API key.
# {
#   "type": "mutation",
#   "operationName": "apiKeyDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes an API key."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "apiKeyDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the API key to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation apiKeyDelete($id: String!) {
  apiKeyDelete(id: $id) {
    ...ArchivePayload
  }
}

# Finds or creates a new user account by email and sends an email with token.
# {
#   "type": "mutation",
#   "operationName": "emailUserAccountAuthChallenge",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Finds or creates a new user account by email and sends an email with token."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "emailUserAccountAuthChallenge"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The data used for email authentication."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "EmailUserAccountAuthChallengeInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "EmailUserAccountAuthChallengeResponse"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation emailUserAccountAuthChallenge($input: EmailUserAccountAuthChallengeInput!) {
  emailUserAccountAuthChallenge(input: $input) {
    ...EmailUserAccountAuthChallengeResponse
  }
}

# Authenticates a user account via email and authentication token.
# {
#   "type": "mutation",
#   "operationName": "emailTokenUserAccountAuth",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Authenticates a user account via email and authentication token."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "emailTokenUserAccountAuth"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The data used for token authentication."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "TokenUserAccountAuthInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "AuthResolverResponse"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation emailTokenUserAccountAuth($input: TokenUserAccountAuthInput!) {
  emailTokenUserAccountAuth(input: $input) {
    ...AuthResolverResponse
  }
}

# Authenticates a user account via email and authentication token for SAML.
# {
#   "type": "mutation",
#   "operationName": "samlTokenUserAccountAuth",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Authenticates a user account via email and authentication token for SAML."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "samlTokenUserAccountAuth"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The data used for token authentication."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "TokenUserAccountAuthInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "AuthResolverResponse"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation samlTokenUserAccountAuth($input: TokenUserAccountAuthInput!) {
  samlTokenUserAccountAuth(input: $input) {
    ...AuthResolverResponse
  }
}

# Authenticate user account through Google OAuth. This is the 2nd step of OAuth flow.
# {
#   "type": "mutation",
#   "operationName": "googleUserAccountAuth",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Authenticate user account through Google OAuth. This is the 2nd step of OAuth flow."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "googleUserAccountAuth"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The data used for Google authentication."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "GoogleUserAccountAuthInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "AuthResolverResponse"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation googleUserAccountAuth($input: GoogleUserAccountAuthInput!) {
  googleUserAccountAuth(input: $input) {
    ...AuthResolverResponse
  }
}

# Creates an organization from onboarding.
# {
#   "type": "mutation",
#   "operationName": "createOrganizationFromOnboarding",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates an organization from onboarding."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "createOrganizationFromOnboarding"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Onboarding survey."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "survey"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "OnboardingCustomerSurvey"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Organization details for the new organization."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "CreateOrganizationInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CreateOrJoinOrganizationResponse"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation createOrganizationFromOnboarding($survey: OnboardingCustomerSurvey, $input: CreateOrganizationInput!) {
  createOrganizationFromOnboarding(survey: $survey, input: $input) {
    ...CreateOrJoinOrganizationResponse
  }
}

# Join an organization from onboarding.
# {
#   "type": "mutation",
#   "operationName": "joinOrganizationFromOnboarding",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Join an organization from onboarding."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "joinOrganizationFromOnboarding"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Organization details for the organization to join."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "JoinOrganizationInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CreateOrJoinOrganizationResponse"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation joinOrganizationFromOnboarding($input: JoinOrganizationInput!) {
  joinOrganizationFromOnboarding(input: $input) {
    ...CreateOrJoinOrganizationResponse
  }
}

# Leave an organization.
# {
#   "type": "mutation",
#   "operationName": "leaveOrganization",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Leave an organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "leaveOrganization"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "ID of the organization to leave."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "organizationId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CreateOrJoinOrganizationResponse"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation leaveOrganization($organizationId: String!) {
  leaveOrganization(organizationId: $organizationId) {
    ...CreateOrJoinOrganizationResponse
  }
}

# Updates the billing email address for the customer.
# {
#   "type": "mutation",
#   "operationName": "billingEmailUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates the billing email address for the customer."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "billingEmailUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The properties of the billing details."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "BillingEmailUpdateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "BillingEmailPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation billingEmailUpdate($input: BillingEmailUpdateInput!) {
  billingEmailUpdate(input: $input) {
    ...BillingEmailPayload
  }
}

# Update collaborative document with client steps.
# {
#   "type": "mutation",
#   "operationName": "collaborativeDocumentUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Update collaborative document with client steps."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "collaborativeDocumentUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "CollaborationDocumentUpdateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CollaborationDocumentUpdatePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation collaborativeDocumentUpdate($input: CollaborationDocumentUpdateInput!) {
  collaborativeDocumentUpdate(input: $input) {
    ...CollaborationDocumentUpdatePayload
  }
}

# Creates a new comment.
# {
#   "type": "mutation",
#   "operationName": "commentCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new comment."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "commentCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The comment object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "CommentCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CommentPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation commentCreate($input: CommentCreateInput!) {
  commentCreate(input: $input) {
    ...CommentPayload
  }
}

# Updates a comment.
# {
#   "type": "mutation",
#   "operationName": "commentUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates a comment."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "commentUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial comment object to update the issue with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "CommentUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the comment to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CommentPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation commentUpdate($input: CommentUpdateInput!, $id: String!) {
  commentUpdate(input: $input, id: $id) {
    ...CommentPayload
  }
}

# Deletes a comment.
# {
#   "type": "mutation",
#   "operationName": "commentDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a comment."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "commentDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the comment to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation commentDelete($id: String!) {
  commentDelete(id: $id) {
    ...ArchivePayload
  }
}

# Saves user message.
# {
#   "type": "mutation",
#   "operationName": "contactCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Saves user message."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "contactCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The contact entry to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "ContactCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ContactPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation contactCreate($input: ContactCreateInput!) {
  contactCreate(input: $input) {
    ...ContactPayload
  }
}

# Creates a new custom view.
# {
#   "type": "mutation",
#   "operationName": "customViewCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new custom view."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "customViewCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The properties of the custom view to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "CustomViewCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CustomViewPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation customViewCreate($input: CustomViewCreateInput!) {
  customViewCreate(input: $input) {
    ...CustomViewPayload
  }
}

# Updates a custom view.
# {
#   "type": "mutation",
#   "operationName": "customViewUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates a custom view."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "customViewUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The properties of the custom view to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "CustomViewUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the custom view to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CustomViewPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation customViewUpdate($input: CustomViewUpdateInput!, $id: String!) {
  customViewUpdate(input: $input, id: $id) {
    ...CustomViewPayload
  }
}

# Deletes a custom view.
# {
#   "type": "mutation",
#   "operationName": "customViewDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a custom view."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "customViewDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the custom view to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation customViewDelete($id: String!) {
  customViewDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new cycle.
# {
#   "type": "mutation",
#   "operationName": "cycleCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new cycle."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "cycleCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The cycle object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "CycleCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CyclePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation cycleCreate($input: CycleCreateInput!) {
  cycleCreate(input: $input) {
    ...CyclePayload
  }
}

# Updates a cycle.
# {
#   "type": "mutation",
#   "operationName": "cycleUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates a cycle."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "cycleUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial cycle object to update the cycle with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "CycleUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the cycle to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CyclePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation cycleUpdate($input: CycleUpdateInput!, $id: String!) {
  cycleUpdate(input: $input, id: $id) {
    ...CyclePayload
  }
}

# Archives a cycle.
# {
#   "type": "mutation",
#   "operationName": "cycleArchive",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Archives a cycle."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "cycleArchive"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the cycle to archive."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation cycleArchive($id: String!) {
  cycleArchive(id: $id) {
    ...ArchivePayload
  }
}

# Always fails with internal error. Used to debug logging.
# {
#   "type": "mutation",
#   "operationName": "debugFailWithInternalError",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Always fails with internal error. Used to debug logging."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "debugFailWithInternalError"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "DebugPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation debugFailWithInternalError {
  debugFailWithInternalError {
    ...DebugPayload
  }
}

# Always logs an error to Sentry as warning. Used to debug logging.
# {
#   "type": "mutation",
#   "operationName": "debugFailWithWarning",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Always logs an error to Sentry as warning. Used to debug logging."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "debugFailWithWarning"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "DebugPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation debugFailWithWarning {
  debugFailWithWarning {
    ...DebugPayload
  }
}

# Create the SAML test organization in development.
# {
#   "type": "mutation",
#   "operationName": "debugCreateSAMLOrg",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Create the SAML test organization in development."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "debugCreateSAMLOrg"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "DebugPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation debugCreateSAMLOrg {
  debugCreateSAMLOrg {
    ...DebugPayload
  }
}

# Unsubscribes the user from one type of emails.
# {
#   "type": "mutation",
#   "operationName": "emailUnsubscribe",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Unsubscribes the user from one type of emails."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "emailUnsubscribe"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Unsubscription details."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "EmailUnsubscribeInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "EmailUnsubscribePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation emailUnsubscribe($input: EmailUnsubscribeInput!) {
  emailUnsubscribe(input: $input) {
    ...EmailUnsubscribePayload
  }
}

# Creates a custom emoji.
# {
#   "type": "mutation",
#   "operationName": "emojiCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a custom emoji."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "emojiCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The emoji object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "EmojiCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "EmojiPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation emojiCreate($input: EmojiCreateInput!) {
  emojiCreate(input: $input) {
    ...EmojiPayload
  }
}

# Deletes an emoji.
# {
#   "type": "mutation",
#   "operationName": "emojiDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes an emoji."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "emojiDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the emoji to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation emojiDelete($id: String!) {
  emojiDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new favorite (project, cycle etc).
# {
#   "type": "mutation",
#   "operationName": "favoriteCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new favorite (project, cycle etc)."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "favoriteCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The favorite object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "FavoriteCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "FavoritePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation favoriteCreate($input: FavoriteCreateInput!) {
  favoriteCreate(input: $input) {
    ...FavoritePayload
  }
}

# Updates a favorite.
# {
#   "type": "mutation",
#   "operationName": "favoriteUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates a favorite."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "favoriteUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial favorite object to update the favorite with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "FavoriteUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the favorite to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "FavoritePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation favoriteUpdate($input: FavoriteUpdateInput!, $id: String!) {
  favoriteUpdate(input: $input, id: $id) {
    ...FavoritePayload
  }
}

# Deletes a favorite reference.
# {
#   "type": "mutation",
#   "operationName": "favoriteDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a favorite reference."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "favoriteDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the favorite reference to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation favoriteDelete($id: String!) {
  favoriteDelete(id: $id) {
    ...ArchivePayload
  }
}

# Saves user feedback.
# {
#   "type": "mutation",
#   "operationName": "feedbackCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Saves user feedback."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "feedbackCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The feedback entry to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "FeedbackCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "FeedbackPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation feedbackCreate($input: FeedbackCreateInput!) {
  feedbackCreate(input: $input) {
    ...FeedbackPayload
  }
}

# XHR request payload to upload an images, video and other attachments directly to Linear's cloud
# storage.
# {
#   "type": "mutation",
#   "operationName": "fileUpload",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "XHR request payload to upload an images, video and other attachments directly to Linear's cloud storage."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "fileUpload"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Optional metadata."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "metaData"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "JSON"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "File size of the uploaded file."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "size"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "Int"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "MIME type of the uploaded file."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "contentType"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Filename of the uploaded file."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "filename"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UploadPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation fileUpload($metaData: JSON, $size: Int!, $contentType: String!, $filename: String!) {
  fileUpload(metaData: $metaData, size: $size, contentType: $contentType, filename: $filename) {
    ...UploadPayload
  }
}

# Upload an image from an URL to Linear.
# {
#   "type": "mutation",
#   "operationName": "imageUploadFromUrl",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Upload an image from an URL to Linear."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "imageUploadFromUrl"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "URL of the file to be uploaded to Linear."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "url"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ImageUploadFromUrlPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation imageUploadFromUrl($url: String!) {
  imageUploadFromUrl(url: $url) {
    ...ImageUploadFromUrlPayload
  }
}

# Connects the organization with the GitHub App.
# {
#   "type": "mutation",
#   "operationName": "integrationGithubConnect",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Connects the organization with the GitHub App."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationGithubConnect"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The GitHub data to connect with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "installationId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation integrationGithubConnect($installationId: String!) {
  integrationGithubConnect(installationId: $installationId) {
    ...IntegrationPayload
  }
}

# Connects the organization with a GitLab Access Token.
# {
#   "type": "mutation",
#   "operationName": "integrationGitlabConnect",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Connects the organization with a GitLab Access Token."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationGitlabConnect"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The URL of the GitLab installation"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "gitlabUrl"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The GitLab Access Token to connect with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "accessToken"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation integrationGitlabConnect($gitlabUrl: String!, $accessToken: String!) {
  integrationGitlabConnect(gitlabUrl: $gitlabUrl, accessToken: $accessToken) {
    ...IntegrationPayload
  }
}

# Integrates the organization with Slack.
# {
#   "type": "mutation",
#   "operationName": "integrationSlack",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Integrates the organization with Slack."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationSlack"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Whether or not v2 of Slack OAuth should be used"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "shouldUseV2Auth"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Slack OAuth redirect URI."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "redirectUri"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Slack OAuth code."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "code"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation integrationSlack($shouldUseV2Auth: Boolean, $redirectUri: String!, $code: String!) {
  integrationSlack(shouldUseV2Auth: $shouldUseV2Auth, redirectUri: $redirectUri, code: $code) {
    ...IntegrationPayload
  }
}

# Integrates your personal notifications with Slack.
# {
#   "type": "mutation",
#   "operationName": "integrationSlackPersonal",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Integrates your personal notifications with Slack."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationSlackPersonal"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Slack OAuth redirect URI."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "redirectUri"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Slack OAuth code."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "code"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation integrationSlackPersonal($redirectUri: String!, $code: String!) {
  integrationSlackPersonal(redirectUri: $redirectUri, code: $code) {
    ...IntegrationPayload
  }
}

# Slack webhook integration.
# {
#   "type": "mutation",
#   "operationName": "integrationSlackPost",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Slack webhook integration."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationSlackPost"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Whether or not v2 of Slack OAuth should be used"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "shouldUseV2Auth"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "Boolean"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Slack OAuth redirect URI."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "redirectUri"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Integration's associated team."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "teamId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Slack OAuth code."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "code"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation integrationSlackPost($shouldUseV2Auth: Boolean, $redirectUri: String!, $teamId: String!, $code: String!) {
  integrationSlackPost(shouldUseV2Auth: $shouldUseV2Auth, redirectUri: $redirectUri, teamId: $teamId, code: $code) {
    ...IntegrationPayload
  }
}

# Slack integration for project notifications.
# {
#   "type": "mutation",
#   "operationName": "integrationSlackProjectPost",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Slack integration for project notifications."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationSlackProjectPost"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Slack OAuth redirect URI."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "redirectUri"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Integration's associated project."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "projectId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Slack OAuth code."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "code"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation integrationSlackProjectPost($redirectUri: String!, $projectId: String!, $code: String!) {
  integrationSlackProjectPost(redirectUri: $redirectUri, projectId: $projectId, code: $code) {
    ...IntegrationPayload
  }
}

# Imports custom emojis from your Slack workspace.
# {
#   "type": "mutation",
#   "operationName": "integrationSlackImportEmojis",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Imports custom emojis from your Slack workspace."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationSlackImportEmojis"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Slack OAuth redirect URI."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "redirectUri"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Slack OAuth code."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "code"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation integrationSlackImportEmojis($redirectUri: String!, $code: String!) {
  integrationSlackImportEmojis(redirectUri: $redirectUri, code: $code) {
    ...IntegrationPayload
  }
}

# Integrates the organization with Figma.
# {
#   "type": "mutation",
#   "operationName": "integrationFigma",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Integrates the organization with Figma."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationFigma"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Figma OAuth redirect URI."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "redirectUri"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Figma OAuth code."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "code"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation integrationFigma($redirectUri: String!, $code: String!) {
  integrationFigma(redirectUri: $redirectUri, code: $code) {
    ...IntegrationPayload
  }
}

# Integrates the organization with Google Sheets.
# {
#   "type": "mutation",
#   "operationName": "integrationGoogleSheets",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Integrates the organization with Google Sheets."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationGoogleSheets"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Google OAuth code."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "code"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation integrationGoogleSheets($code: String!) {
  integrationGoogleSheets(code: $code) {
    ...IntegrationPayload
  }
}

# Manually update Google Sheets data.
# {
#   "type": "mutation",
#   "operationName": "refreshGoogleSheetsData",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Manually update Google Sheets data."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "refreshGoogleSheetsData"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the Google Sheets integration to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation refreshGoogleSheetsData($id: String!) {
  refreshGoogleSheetsData(id: $id) {
    ...IntegrationPayload
  }
}

# Integrates the organization with Sentry.
# {
#   "type": "mutation",
#   "operationName": "integrationSentryConnect",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Integrates the organization with Sentry."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationSentryConnect"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The slug of the Sentry organization being connected."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "organizationSlug"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Sentry grant code that's exchanged for OAuth tokens."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "code"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The Sentry installationId to connect with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "installationId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IntegrationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation integrationSentryConnect($organizationSlug: String!, $code: String!, $installationId: String!) {
  integrationSentryConnect(organizationSlug: $organizationSlug, code: $code, installationId: $installationId) {
    ...IntegrationPayload
  }
}

# Deletes an integration.
# {
#   "type": "mutation",
#   "operationName": "integrationDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes an integration."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the integration to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation integrationDelete($id: String!) {
  integrationDelete(id: $id) {
    ...ArchivePayload
  }
}

# Archives an integration resource.
# {
#   "type": "mutation",
#   "operationName": "integrationResourceArchive",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Archives an integration resource."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "integrationResourceArchive"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the integration resource to archive."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation integrationResourceArchive($id: String!) {
  integrationResourceArchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new label.
# {
#   "type": "mutation",
#   "operationName": "issueLabelCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new label."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueLabelCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The issue label to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "IssueLabelCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueLabelPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation issueLabelCreate($input: IssueLabelCreateInput!) {
  issueLabelCreate(input: $input) {
    ...IssueLabelPayload
  }
}

# Updates an label.
# {
#   "type": "mutation",
#   "operationName": "issueLabelUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates an label."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueLabelUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial label object to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "IssueLabelUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the label to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueLabelPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation issueLabelUpdate($input: IssueLabelUpdateInput!, $id: String!) {
  issueLabelUpdate(input: $input, id: $id) {
    ...IssueLabelPayload
  }
}

# Archives an issue label.
# {
#   "type": "mutation",
#   "operationName": "issueLabelArchive",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Archives an issue label."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueLabelArchive"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the label to archive."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation issueLabelArchive($id: String!) {
  issueLabelArchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new issue relation.
# {
#   "type": "mutation",
#   "operationName": "issueRelationCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new issue relation."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueRelationCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The issue relation to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "IssueRelationCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueRelationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation issueRelationCreate($input: IssueRelationCreateInput!) {
  issueRelationCreate(input: $input) {
    ...IssueRelationPayload
  }
}

# Updates an issue relation.
# {
#   "type": "mutation",
#   "operationName": "issueRelationUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates an issue relation."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueRelationUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The properties of the issue relation to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "IssueRelationUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the issue relation to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssueRelationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation issueRelationUpdate($input: IssueRelationUpdateInput!, $id: String!) {
  issueRelationUpdate(input: $input, id: $id) {
    ...IssueRelationPayload
  }
}

# Deletes an issue relation.
# {
#   "type": "mutation",
#   "operationName": "issueRelationDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes an issue relation."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueRelationDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the issue relation to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation issueRelationDelete($id: String!) {
  issueRelationDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new issue.
# {
#   "type": "mutation",
#   "operationName": "issueCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new issue."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The issue object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "IssueCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssuePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation issueCreate($input: IssueCreateInput!) {
  issueCreate(input: $input) {
    ...IssuePayload
  }
}

# Updates an issue.
# {
#   "type": "mutation",
#   "operationName": "issueUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates an issue."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial issue object to update the issue with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "IssueUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the issue to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "IssuePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation issueUpdate($input: IssueUpdateInput!, $id: String!) {
  issueUpdate(input: $input, id: $id) {
    ...IssuePayload
  }
}

# Archives an issue.
# {
#   "type": "mutation",
#   "operationName": "issueArchive",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Archives an issue."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueArchive"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the issue to archive."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation issueArchive($id: String!) {
  issueArchive(id: $id) {
    ...ArchivePayload
  }
}

# Unarchives an issue.
# {
#   "type": "mutation",
#   "operationName": "issueUnarchive",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Unarchives an issue."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "issueUnarchive"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the issue to archive."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation issueUnarchive($id: String!) {
  issueUnarchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new milestone.
# {
#   "type": "mutation",
#   "operationName": "milestoneCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new milestone."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "milestoneCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The issue object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "MilestoneCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "MilestonePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation milestoneCreate($input: MilestoneCreateInput!) {
  milestoneCreate(input: $input) {
    ...MilestonePayload
  }
}

# Updates a milestone.
# {
#   "type": "mutation",
#   "operationName": "milestoneUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates a milestone."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "milestoneUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial milestone object to update the milestone with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "MilestoneUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the milestone to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "MilestonePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation milestoneUpdate($input: MilestoneUpdateInput!, $id: String!) {
  milestoneUpdate(input: $input, id: $id) {
    ...MilestonePayload
  }
}

# Deletes a milestone.
# {
#   "type": "mutation",
#   "operationName": "milestoneDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a milestone."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "milestoneDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the milestone to delete. Only milestones without projects can be deleted."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation milestoneDelete($id: String!) {
  milestoneDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a notification.
# {
#   "type": "mutation",
#   "operationName": "notificationCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a notification."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "notificationCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial notification object to update the issue with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "NotificationUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the notification to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "NotificationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation notificationCreate($input: NotificationUpdateInput!, $id: String!) {
  notificationCreate(input: $input, id: $id) {
    ...NotificationPayload
  }
}

# Updates a notification.
# {
#   "type": "mutation",
#   "operationName": "notificationUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates a notification."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "notificationUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial notification object to update the issue with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "NotificationUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the notification to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "NotificationPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation notificationUpdate($input: NotificationUpdateInput!, $id: String!) {
  notificationUpdate(input: $input, id: $id) {
    ...NotificationPayload
  }
}

# [Deprecated] Deletes a notification.
# {
#   "type": "mutation",
#   "operationName": "notificationDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "[Deprecated] Deletes a notification."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "notificationDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the notification to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation notificationDelete($id: String!) {
  notificationDelete(id: $id) {
    ...ArchivePayload
  }
}

# Archives a notification.
# {
#   "type": "mutation",
#   "operationName": "notificationArchive",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Archives a notification."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "notificationArchive"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The id of the notification to archive."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation notificationArchive($id: String!) {
  notificationArchive(id: $id) {
    ...ArchivePayload
  }
}

# Unarchives a notification.
# {
#   "type": "mutation",
#   "operationName": "notificationUnarchive",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Unarchives a notification."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "notificationUnarchive"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The id of the notification to archive."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation notificationUnarchive($id: String!) {
  notificationUnarchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new notification subscription for a team or a project.
# {
#   "type": "mutation",
#   "operationName": "notificationSubscriptionCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new notification subscription for a team or a project."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "notificationSubscriptionCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The subscription object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "NotificationSubscriptionCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "NotificationSubscriptionPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation notificationSubscriptionCreate($input: NotificationSubscriptionCreateInput!) {
  notificationSubscriptionCreate(input: $input) {
    ...NotificationSubscriptionPayload
  }
}

# Deletes a notification subscription reference.
# {
#   "type": "mutation",
#   "operationName": "notificationSubscriptionDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a notification subscription reference."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "notificationSubscriptionDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the notification subscription reference to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation notificationSubscriptionDelete($id: String!) {
  notificationSubscriptionDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new OAuth client.
# {
#   "type": "mutation",
#   "operationName": "oauthClientCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new OAuth client."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "oauthClientCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The OAuth client application object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "OauthClientCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OauthClientPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation oauthClientCreate($input: OauthClientCreateInput!) {
  oauthClientCreate(input: $input) {
    ...OauthClientPayload
  }
}

# Updates an OAuth client.
# {
#   "type": "mutation",
#   "operationName": "oauthClientUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates an OAuth client."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "oauthClientUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial client object to update the OAuth client with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "OauthClientUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the OAuth client to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OauthClientPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation oauthClientUpdate($input: OauthClientUpdateInput!, $id: String!) {
  oauthClientUpdate(input: $input, id: $id) {
    ...OauthClientPayload
  }
}

# Archives an OAuth client.
# {
#   "type": "mutation",
#   "operationName": "oauthClientArchive",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Archives an OAuth client."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "oauthClientArchive"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the OAuth client to archive."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation oauthClientArchive($id: String!) {
  oauthClientArchive(id: $id) {
    ...ArchivePayload
  }
}

# Updates an OAuth client.
# {
#   "type": "mutation",
#   "operationName": "oauthClientRotateSecret",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates an OAuth client."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "oauthClientRotateSecret"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the OAuth client for which we want to rotate the secret."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "RotateSecretPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation oauthClientRotateSecret($id: String!) {
  oauthClientRotateSecret(id: $id) {
    ...RotateSecretPayload
  }
}

# Revokes an OAuth token.
# {
#   "type": "mutation",
#   "operationName": "oauthTokenRevoke",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Revokes an OAuth token."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "oauthTokenRevoke"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The group of scopes for the tokens to be revoked."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "scope"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "ListType",
#             "type": {
#               "kind": "NonNullType",
#               "type": {
#                 "kind": "NamedType",
#                 "name": {
#                   "kind": "Name",
#                   "value": "String"
#                 }
#               }
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the OAuth client for the tokens to be revoked."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "appId"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OauthTokenRevokePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation oauthTokenRevoke($scope: [String!]!, $appId: String!) {
  oauthTokenRevoke(scope: $scope, appId: $appId) {
    ...OauthTokenRevokePayload
  }
}

# Verifies a domain to be added to an organization.
# {
#   "type": "mutation",
#   "operationName": "organizationDomainVerify",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Verifies a domain to be added to an organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationDomainVerify"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The organization domain to verify."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "OrganizationDomainVerificationInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OrganizationDomainPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation organizationDomainVerify($input: OrganizationDomainVerificationInput!) {
  organizationDomainVerify(input: $input) {
    ...OrganizationDomainPayload
  }
}

# Adds a domain to be allowed for an organization.
# {
#   "type": "mutation",
#   "operationName": "organizationDomainCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Adds a domain to be allowed for an organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationDomainCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The organization domain entry to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "OrganizationDomainCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OrganizationDomainPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation organizationDomainCreate($input: OrganizationDomainCreateInput!) {
  organizationDomainCreate(input: $input) {
    ...OrganizationDomainPayload
  }
}

# Deletes a domain.
# {
#   "type": "mutation",
#   "operationName": "organizationDomainDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a domain."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationDomainDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the domain to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation organizationDomainDelete($id: String!) {
  organizationDomainDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new organization invite.
# {
#   "type": "mutation",
#   "operationName": "organizationInviteCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new organization invite."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationInviteCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The organization invite object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "OrganizationInviteCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "OrganizationInvitePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation organizationInviteCreate($input: OrganizationInviteCreateInput!) {
  organizationInviteCreate(input: $input) {
    ...OrganizationInvitePayload
  }
}

# Re-send an organization invite.
# {
#   "type": "mutation",
#   "operationName": "resentOrganizationInvite",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Re-send an organization invite."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "resentOrganizationInvite"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the organization invite to be re-send."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation resentOrganizationInvite($id: String!) {
  resentOrganizationInvite(id: $id) {
    ...ArchivePayload
  }
}

# Deletes an organization invite.
# {
#   "type": "mutation",
#   "operationName": "organizationInviteDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes an organization invite."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "organizationInviteDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the organization invite to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation organizationInviteDelete($id: String!) {
  organizationInviteDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new project link.
# {
#   "type": "mutation",
#   "operationName": "projectLinkCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new project link."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "projectLinkCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The project link object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "ProjectLinkCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ProjectLinkPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation projectLinkCreate($input: ProjectLinkCreateInput!) {
  projectLinkCreate(input: $input) {
    ...ProjectLinkPayload
  }
}

# Deletes a project link.
# {
#   "type": "mutation",
#   "operationName": "projectLinkDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a project link."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "projectLinkDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the project link to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation projectLinkDelete($id: String!) {
  projectLinkDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new project.
# {
#   "type": "mutation",
#   "operationName": "projectCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new project."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "projectCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The issue object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "ProjectCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ProjectPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation projectCreate($input: ProjectCreateInput!) {
  projectCreate(input: $input) {
    ...ProjectPayload
  }
}

# Updates a project.
# {
#   "type": "mutation",
#   "operationName": "projectUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates a project."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "projectUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial project object to update the project with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "ProjectUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the project to update. Also the identifier from the URL is accepted."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ProjectPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation projectUpdate($input: ProjectUpdateInput!, $id: String!) {
  projectUpdate(input: $input, id: $id) {
    ...ProjectPayload
  }
}

# Archives a project.
# {
#   "type": "mutation",
#   "operationName": "projectArchive",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Archives a project."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "projectArchive"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the project to archive. Also the identifier from the URL is accepted."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation projectArchive($id: String!) {
  projectArchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a push subscription.
# {
#   "type": "mutation",
#   "operationName": "pushSubscriptionCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a push subscription."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "pushSubscriptionCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The push subscription to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "PushSubscriptionCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "PushSubscriptionPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation pushSubscriptionCreate($input: PushSubscriptionCreateInput!) {
  pushSubscriptionCreate(input: $input) {
    ...PushSubscriptionPayload
  }
}

# Deletes a push subscription.
# {
#   "type": "mutation",
#   "operationName": "pushSubscriptionDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a push subscription."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "pushSubscriptionDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the push subscription to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "PushSubscriptionPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation pushSubscriptionDelete($id: String!) {
  pushSubscriptionDelete(id: $id) {
    ...PushSubscriptionPayload
  }
}

# Creates a new reaction.
# {
#   "type": "mutation",
#   "operationName": "reactionCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new reaction."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "reactionCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The reaction object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "ReactionCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ReactionPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation reactionCreate($input: ReactionCreateInput!) {
  reactionCreate(input: $input) {
    ...ReactionPayload
  }
}

# Deletes a reaction.
# {
#   "type": "mutation",
#   "operationName": "reactionDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a reaction."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "reactionDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the reaction to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation reactionDelete($id: String!) {
  reactionDelete(id: $id) {
    ...ArchivePayload
  }
}

# Create CSV export report for the organization.
# {
#   "type": "mutation",
#   "operationName": "createCsvExportReport",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Create CSV export report for the organization."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "createCsvExportReport"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "CreateCsvExportReportPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation createCsvExportReport {
  createCsvExportReport {
    ...CreateCsvExportReportPayload
  }
}

# Creates a subscription session. Used internally to integrate with Stripe.
# {
#   "type": "mutation",
#   "operationName": "subscriptionSessionCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a subscription session. Used internally to integrate with Stripe."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "subscriptionSessionCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The name of the plan."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "plan"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "SubscriptionSessionPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation subscriptionSessionCreate($plan: String!) {
  subscriptionSessionCreate(plan: $plan) {
    ...SubscriptionSessionPayload
  }
}

# Creates a subscription update session. Used internally to integrate with Stripe.
# {
#   "type": "mutation",
#   "operationName": "subscriptionUpdateSessionCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a subscription update session. Used internally to integrate with Stripe."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "subscriptionUpdateSessionCreate"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "SubscriptionSessionPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation subscriptionUpdateSessionCreate {
  subscriptionUpdateSessionCreate {
    ...SubscriptionSessionPayload
  }
}

# Updates a subscription.
# {
#   "type": "mutation",
#   "operationName": "subscriptionUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates a subscription."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "subscriptionUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The properties of the subscription."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "SubscriptionUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the subscription."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "SubscriptionPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation subscriptionUpdate($input: SubscriptionUpdateInput!, $id: String!) {
  subscriptionUpdate(input: $input, id: $id) {
    ...SubscriptionPayload
  }
}

# Upgrades a subscription plan.
# {
#   "type": "mutation",
#   "operationName": "subscriptionUpgrade",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Upgrades a subscription plan."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "subscriptionUpgrade"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The subscription type to upgrade to."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "type"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the subscription."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "SubscriptionPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation subscriptionUpgrade($type: String!, $id: String!) {
  subscriptionUpgrade(type: $type, id: $id) {
    ...SubscriptionPayload
  }
}

# Archives a subscription.
# {
#   "type": "mutation",
#   "operationName": "subscriptionArchive",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Archives a subscription."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "subscriptionArchive"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the subscription to archive."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation subscriptionArchive($id: String!) {
  subscriptionArchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new team membership.
# {
#   "type": "mutation",
#   "operationName": "teamMembershipCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new team membership."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teamMembershipCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The team membership object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "TeamMembershipCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TeamMembershipPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation teamMembershipCreate($input: TeamMembershipCreateInput!) {
  teamMembershipCreate(input: $input) {
    ...TeamMembershipPayload
  }
}

# Deletes a team membership.
# {
#   "type": "mutation",
#   "operationName": "teamMembershipDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a team membership."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teamMembershipDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the team membership to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation teamMembershipDelete($id: String!) {
  teamMembershipDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new team. The user who creates the team will automatically be added as a member to the
# newly created team.
# {
#   "type": "mutation",
#   "operationName": "teamCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new team. The user who creates the team will automatically be added as a member to the newly created team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teamCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The team id to copy settings from."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "copySettingsFromTeamId"
#         },
#         "type": {
#           "kind": "NamedType",
#           "name": {
#             "kind": "Name",
#             "value": "String"
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The team object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "TeamCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TeamPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation teamCreate($copySettingsFromTeamId: String, $input: TeamCreateInput!) {
  teamCreate(copySettingsFromTeamId: $copySettingsFromTeamId, input: $input) {
    ...TeamPayload
  }
}

# Updates a team.
# {
#   "type": "mutation",
#   "operationName": "teamUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates a team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teamUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial team object to update the team with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "TeamUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the team to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TeamPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation teamUpdate($input: TeamUpdateInput!, $id: String!) {
  teamUpdate(input: $input, id: $id) {
    ...TeamPayload
  }
}

# Archives a team.
# {
#   "type": "mutation",
#   "operationName": "teamArchive",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Archives a team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teamArchive"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the team to archive."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation teamArchive($id: String!) {
  teamArchive(id: $id) {
    ...ArchivePayload
  }
}

# Deletes a team.
# {
#   "type": "mutation",
#   "operationName": "teamDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "teamDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the team to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation teamDelete($id: String!) {
  teamDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new template.
# {
#   "type": "mutation",
#   "operationName": "templateCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new template."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "templateCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The template object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "TemplateCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TemplatePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation templateCreate($input: TemplateCreateInput!) {
  templateCreate(input: $input) {
    ...TemplatePayload
  }
}

# Updates an existing template.
# {
#   "type": "mutation",
#   "operationName": "templateUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates an existing template."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "templateUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The properties of the template to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "TemplateUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the template."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "TemplatePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation templateUpdate($input: TemplateUpdateInput!, $id: String!) {
  templateUpdate(input: $input, id: $id) {
    ...TemplatePayload
  }
}

# Deletes a template.
# {
#   "type": "mutation",
#   "operationName": "templateDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a template."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "templateDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the template to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation templateDelete($id: String!) {
  templateDelete(id: $id) {
    ...ArchivePayload
  }
}

# Updates the user's settings.
# {
#   "type": "mutation",
#   "operationName": "userSettingsUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates the user's settings."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "userSettingsUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial notification object to update the settings with."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "UserSettingsUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the userSettings to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserSettingsPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation userSettingsUpdate($input: UserSettingsUpdateInput!, $id: String!) {
  userSettingsUpdate(input: $input, id: $id) {
    ...UserSettingsPayload
  }
}

# [Deprecated] Updates a user's settings flag.
# {
#   "type": "mutation",
#   "operationName": "userSettingsFlagIncrement",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "[Deprecated] Updates a user's settings flag."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "userSettingsFlagIncrement"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Flag to increment."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "flag"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserSettingsFlagPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation userSettingsFlagIncrement($flag: String!) {
  userSettingsFlagIncrement(flag: $flag) {
    ...UserSettingsFlagPayload
  }
}

# Resets user's setting flags.
# {
#   "type": "mutation",
#   "operationName": "userSettingsFlagsReset",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Resets user's setting flags."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "userSettingsFlagsReset"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserSettingsFlagsResetPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation userSettingsFlagsReset {
  userSettingsFlagsReset {
    ...UserSettingsFlagsResetPayload
  }
}

# Updates a user's settings flag.
# {
#   "type": "mutation",
#   "operationName": "userFlagUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates a user's settings flag."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "userFlagUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Flag operation to perform"
#         },
#         "name": {
#           "kind": "Name",
#           "value": "operation"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "UserFlagUpdateOperation"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "Settings flag to increment."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "flag"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "UserFlagType"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserSettingsFlagPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation userFlagUpdate($operation: UserFlagUpdateOperation!, $flag: UserFlagType!) {
  userFlagUpdate(operation: $operation, flag: $flag) {
    ...UserSettingsFlagPayload
  }
}

# Subscribes user to changelog newsletter.
# {
#   "type": "mutation",
#   "operationName": "userSubscribeToNewsletter",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Subscribes user to changelog newsletter."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "userSubscribeToNewsletter"
#     },
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "UserSubscribeToNewsletterPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation userSubscribeToNewsletter {
  userSubscribeToNewsletter {
    ...UserSubscribeToNewsletterPayload
  }
}

# Creates a new ViewPreferences object.
# {
#   "type": "mutation",
#   "operationName": "viewPreferencesCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new ViewPreferences object."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "viewPreferencesCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The ViewPreferences object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "ViewPreferencesCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ViewPreferencesPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation viewPreferencesCreate($input: ViewPreferencesCreateInput!) {
  viewPreferencesCreate(input: $input) {
    ...ViewPreferencesPayload
  }
}

# Updates an existing ViewPreferences object.
# {
#   "type": "mutation",
#   "operationName": "viewPreferencesUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates an existing ViewPreferences object."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "viewPreferencesUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The properties of the view preferences."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "ViewPreferencesUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the ViewPreferences object."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ViewPreferencesPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation viewPreferencesUpdate($input: ViewPreferencesUpdateInput!, $id: String!) {
  viewPreferencesUpdate(input: $input, id: $id) {
    ...ViewPreferencesPayload
  }
}

# Deletes a ViewPreferences.
# {
#   "type": "mutation",
#   "operationName": "viewPreferencesDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a ViewPreferences."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "viewPreferencesDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the ViewPreferences to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation viewPreferencesDelete($id: String!) {
  viewPreferencesDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new webhook.
# {
#   "type": "mutation",
#   "operationName": "webhookCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new webhook."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "webhookCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The webhook object to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "WebhookCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "WebhookPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation webhookCreate($input: WebhookCreateInput!) {
  webhookCreate(input: $input) {
    ...WebhookPayload
  }
}

# Updates an existing Webhook.
# {
#   "type": "mutation",
#   "operationName": "webhookUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates an existing Webhook."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "webhookUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The properties of the Webhook."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "WebhookUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the Webhook."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "WebhookPayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation webhookUpdate($input: WebhookUpdateInput!, $id: String!) {
  webhookUpdate(input: $input, id: $id) {
    ...WebhookPayload
  }
}

# Deletes a Webhook.
# {
#   "type": "mutation",
#   "operationName": "webhookDelete",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Deletes a Webhook."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "webhookDelete"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the Webhook to delete."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation webhookDelete($id: String!) {
  webhookDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new state, adding it to the workflow of a team.
# {
#   "type": "mutation",
#   "operationName": "workflowStateCreate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Creates a new state, adding it to the workflow of a team."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "workflowStateCreate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The state to create."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "WorkflowStateCreateInput"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "WorkflowStatePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation workflowStateCreate($input: WorkflowStateCreateInput!) {
  workflowStateCreate(input: $input) {
    ...WorkflowStatePayload
  }
}

# Updates a state.
# {
#   "type": "mutation",
#   "operationName": "workflowStateUpdate",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Updates a state."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "workflowStateUpdate"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "A partial state object to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "input"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "WorkflowStateUpdateInput"
#             }
#           }
#         }
#       },
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the state to update."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "WorkflowStatePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation workflowStateUpdate($input: WorkflowStateUpdateInput!, $id: String!) {
  workflowStateUpdate(input: $input, id: $id) {
    ...WorkflowStatePayload
  }
}

# Archives a state. Only states with issues that have all been archived can be archived.
# {
#   "type": "mutation",
#   "operationName": "workflowStateArchive",
#   "field": {
#     "kind": "FieldDefinition",
#     "description": {
#       "kind": "StringValue",
#       "value": "Archives a state. Only states with issues that have all been archived can be archived."
#     },
#     "name": {
#       "kind": "Name",
#       "value": "workflowStateArchive"
#     },
#     "arguments": [
#       {
#         "kind": "InputValueDefinition",
#         "description": {
#           "kind": "StringValue",
#           "value": "The identifier of the state to archive."
#         },
#         "name": {
#           "kind": "Name",
#           "value": "id"
#         },
#         "type": {
#           "kind": "NonNullType",
#           "type": {
#             "kind": "NamedType",
#             "name": {
#               "kind": "Name",
#               "value": "String"
#             }
#           }
#         }
#       }
#     ],
#     "type": {
#       "kind": "NonNullType",
#       "type": {
#         "kind": "NamedType",
#         "name": {
#           "kind": "Name",
#           "value": "ArchivePayload"
#         }
#       }
#     },
#     "nullable": false
#   }
# }
mutation workflowStateArchive($id: String!) {
  workflowStateArchive(id: $id) {
    ...ArchivePayload
  }
}
