fragment User on User {
  id
  name
  displayName
  email
  avatarUrl
  disableReason
  inviteHash
  userAccountId
  admin
  active
  createdIssueCount
}
fragment UserSettings on UserSettings {
  id
  createdAt
  updatedAt
  archivedAt
  unsubscribedFrom
  user {
    id
  }
}
fragment Issue on Issue {
  id
  createdAt
  updatedAt
  archivedAt
  number
  title
  description
  priority
  estimate
  boardOrder
  startedAt
  completedAt
  canceledAt
  autoClosedAt
  autoArchivedAt
  previousIdentifiers
  subIssueSortOrder
  identifier
  priorityLabel
  url
  team {
    id
  }
  cycle {
    id
  }
  state {
    id
  }
  assignee {
    id
  }
  parent {
    id
  }
  project {
    id
  }
  branchName
  creator {
    id
  }
}
fragment Team on Team {
  id
  createdAt
  updatedAt
  archivedAt
  name
  key
  description
  cyclesEnabled
  cycleStartDay
  cycleDuration
  cycleCooldownTime
  cycleIssueAutoAssignStarted
  cycleIssueAutoAssignCompleted
  cycleLockToActive
  upcomingCycleCount
  timezone
  inviteHash
  issueEstimationType
  issueEstimationAllowZero
  issueEstimationExtended
  defaultIssueEstimate
  defaultTemplateForMembersId
  defaultTemplateForNonMembersId
  draftWorkflowState {
    id
  }
  startWorkflowState {
    id
  }
  reviewWorkflowState {
    id
  }
  mergeWorkflowState {
    id
  }
  groupIssueHistory
  slackNewIssue
  slackIssueComments
  slackIssueStatuses
  autoClosePeriod
  autoCloseStateId
  autoArchivePeriod
  markedAsDuplicateWorkflowState {
    id
  }
  cycleCalenderUrl
}
fragment WorkflowState on WorkflowState {
  id
  createdAt
  updatedAt
  archivedAt
  name
  color
  description
  position
  type
  team {
    id
  }
}
fragment Cycle on Cycle {
  id
  createdAt
  updatedAt
  archivedAt
  number
  name
  startsAt
  endsAt
  completedAt
  issueCountHistory
  completedIssueCountHistory
  scopeHistory
  completedScopeHistory
  team {
    id
  }
}
fragment PageInfo on PageInfo {
  hasPreviousPage
  hasNextPage
  startCursor
  endCursor
}
fragment TeamMembership on TeamMembership {
  id
  createdAt
  updatedAt
  archivedAt
  user {
    id
  }
  team {
    id
  }
}
fragment Project on Project {
  id
  createdAt
  updatedAt
  archivedAt
  name
  description
  slugId
  icon
  color
  state
  creator {
    id
  }
  lead {
    id
  }
  milestone {
    id
  }
  targetDate
  startedAt
  completedAt
  canceledAt
  sortOrder
  issueCountHistory
  completedIssueCountHistory
  scopeHistory
  completedScopeHistory
  slackNewIssue
  slackIssueComments
  slackIssueStatuses
}
fragment Milestone on Milestone {
  id
  createdAt
  updatedAt
  archivedAt
  name
  sortOrder
}
fragment Organization on Organization {
  id
  createdAt
  updatedAt
  archivedAt
  name
  urlKey
  logoUrl
  upgradeThresholdExceeded
  periodUploadVolume
  gitBranchFormat
  gitLinkbackMessagesEnabled
  gitPublicLinkbackMessagesEnabled
  roadmapEnabled
  samlEnabled
  allowedAuthServices
  userCount
  createdIssueCount
}
fragment Integration on Integration {
  id
  createdAt
  updatedAt
  archivedAt
  service
  serviceId
  team {
    id
  }
  creator {
    id
  }
}
fragment SlackPostSettings on SlackPostSettings {
  channel
  channelId
  configurationUrl
}
fragment GoogleSheetsSettings on GoogleSheetsSettings {
  spreadsheetId
  spreadsheetUrl
  sheetId
  updatedIssuesAt
}
fragment SentrySettings on SentrySettings {
  organizationSlug
}
fragment Subscription on Subscription {
  id
  createdAt
  updatedAt
  archivedAt
  type
  seats
  creator {
    id
  }
  canceledAt
  pendingChangeType
}
fragment ProjectLink on ProjectLink {
  id
  createdAt
  updatedAt
  archivedAt
  url
  label
  creator {
    id
  }
  project {
    id
  }
}
fragment Template on Template {
  id
  createdAt
  updatedAt
  archivedAt
  type
  name
  description
  templateData
  team {
    id
  }
  creator {
    id
  }
}
fragment IssueLabel on IssueLabel {
  id
  createdAt
  updatedAt
  archivedAt
  name
  description
  color
  team {
    id
  }
  creator {
    id
  }
}
fragment Webhook on Webhook {
  id
  createdAt
  updatedAt
  archivedAt
  url
  enabled
  team {
    id
  }
  creator {
    id
  }
  secret
}
fragment Comment on Comment {
  id
  createdAt
  updatedAt
  archivedAt
  body
  bodyData
  reactionData
  editedAt
  user {
    id
  }
  issue {
    id
  }
}
fragment IssueHistory on IssueHistory {
  id
  createdAt
  updatedAt
  archivedAt
  issue {
    id
  }
  actor {
    id
  }
  integration {
    id
  }
  updatedDescription
  fromTitle
  toTitle
  fromAssignee {
    id
  }
  toAssignee {
    id
  }
  fromPriority
  toPriority
  fromTeam {
    id
  }
  toTeam {
    id
  }
  fromParent {
    id
  }
  toParent {
    id
  }
  fromState {
    id
  }
  toState {
    id
  }
  fromCycle {
    id
  }
  toCycle {
    id
  }
  fromProject {
    id
  }
  toProject {
    id
  }
  fromEstimate
  toEstimate
  archived
  addedLabelIds
  removedLabelIds
  relationChanges
  autoClosed
  autoArchived
  fromDueDate
  toDueDate
}
fragment IntegrationResource on IntegrationResource {
  id
  createdAt
  updatedAt
  archivedAt
  resourceType
  resourceId
  integration {
    id
  }
  issue {
    id
  }
}
fragment PullRequestPayload on PullRequestPayload {
  status
  number
  url
  draft
  id
  title
  branch
  userId
  userLogin
  repoLogin
  repoName
  createdAt
  updatedAt
  closedAt
  mergedAt
}
fragment CommitPayload on CommitPayload {
  id
  message
  timestamp
  url
  added
  removed
  modified
}
fragment SentryIssuePayload on SentryIssuePayload {
  issueId
  webUrl
  actorType
  actorId
  actorName
  projectId
  projectSlug
  issueTitle
  shortId
  firstSeen
  firstVersion
}
fragment IssueRelation on IssueRelation {
  id
  createdAt
  updatedAt
  archivedAt
  type
  issue {
    id
  }
  relatedIssue {
    id
  }
}
fragment OrganizationExistsPayload on OrganizationExistsPayload {
  success
  exists
}
fragment SyncResponse on SyncResponse {
  state
  delta
  archive
  lastSyncId
  databaseVersion
}
fragment ArchiveResponse on ArchiveResponse {
  archive
  totalCount
  databaseVersion
}
fragment UserAccountAdminPrivileged on UserAccountAdminPrivileged {
  id
  createdAt
  updatedAt
  archivedAt
  name
  email
  service
}
fragment UserAdminPrivileged on UserAdminPrivileged {
  id
  createdAt
  updatedAt
  archivedAt
  name
  displayName
  email
  avatarUrl
  disableReason
  inviteHash
  userAccountId
  lastSeen
  admin
  active
  createdIssueCount
}
fragment OrganizationAdminPrivileged on OrganizationAdminPrivileged {
  id
  createdAt
  updatedAt
  archivedAt
  name
  urlKey
  logoUrl
  upgradeThresholdExceeded
  periodUploadVolume
  gitBranchFormat
  gitLinkbackMessagesEnabled
  gitPublicLinkbackMessagesEnabled
  roadmapEnabled
  samlEnabled
  allowedAuthServices
  userCount
  createdIssueCount
  stripeCustomerId
}
fragment SubscriptionAdminPrivileged on SubscriptionAdminPrivileged {
  id
  createdAt
  updatedAt
  archivedAt
  type
  seats
  creator {
    id
  }
  canceledAt
  pendingChangeType
  stripeSubscriptionId
  stripeStatus
}
fragment ApiKey on ApiKey {
  id
  createdAt
  updatedAt
  archivedAt
  label
}
fragment Application on Application {
  clientId
  name
  description
  developer
  developerUrl
  imageUrl
}
fragment AuthorizedApplication on AuthorizedApplication {
  clientId
  name
  description
  developer
  developerUrl
  imageUrl
  scope
  appId
}
fragment AuthResolverResponse on AuthResolverResponse {
  id
  token
  email
  allowDomainAccess
  users {
    id
  }
  availableOrganizations {
    ...Organization
  }
}
fragment SsoUrlFromEmailResponse on SsoUrlFromEmailResponse {
  success
  samlSsoUrl
}
fragment BillingDetailsPayload on BillingDetailsPayload {
  success
  email
}
fragment Invoice on Invoice {
  url
  created
  dueDate
  status
  total
}
fragment Card on Card {
  brand
  last4
}
fragment CollaborationDocumentUpdatePayload on CollaborationDocumentUpdatePayload {
  success
}
fragment StepsResponse on StepsResponse {
  version
  steps
  clientIds
}
fragment CustomView on CustomView {
  id
  createdAt
  updatedAt
  archivedAt
  name
  description
  icon
  color
  team {
    id
  }
  creator {
    id
  }
  filters
  shared
}
fragment Emoji on Emoji {
  id
  createdAt
  updatedAt
  archivedAt
  name
  url
  source
  creator {
    id
  }
}
fragment Favorite on Favorite {
  id
  createdAt
  updatedAt
  archivedAt
  type
  sortOrder
  user {
    id
  }
  issue {
    id
  }
  project {
    id
  }
  projectTeam {
    id
  }
  cycle {
    id
  }
  label {
    id
  }
}
fragment FigmaEmbedPayload on FigmaEmbedPayload {
  lastSyncId
  success
}
fragment FigmaEmbed on FigmaEmbed {
  name
  lastModified
  nodeName
  url
}
fragment InvitePagePayload on InvitePagePayload {
  success
}
fragment InviteData on InviteData {
  inviterName
  avatarURLs
  teamNames
  teamIds
  organizationName
  organizationDomain
  organizationLogoUrl
  userCount
}
fragment Notification on Notification {
  id
  createdAt
  updatedAt
  archivedAt
  type
  reactionEmoji
  readAt
  emailedAt
  user {
    id
  }
  issue {
    id
  }
  team {
    id
  }
  comment {
    id
  }
}
fragment NotificationSubscription on NotificationSubscription {
  id
  createdAt
  updatedAt
  archivedAt
  type
  user {
    id
  }
  team {
    id
  }
  project {
    id
  }
}
fragment OrganizationInvite on OrganizationInvite {
  id
  createdAt
  updatedAt
  archivedAt
  email
  external
  acceptedAt
  expiresAt
  inviter {
    id
  }
  invitee {
    id
  }
}
fragment PushSubscriptionPayload on PushSubscriptionPayload {
  lastSyncId
  success
}
fragment Reaction on Reaction {
  id
  createdAt
  updatedAt
  archivedAt
  emoji
  user {
    id
  }
  comment {
    id
  }
}
fragment ViewPreferences on ViewPreferences {
  id
  createdAt
  updatedAt
  archivedAt
  type
  viewType
}
fragment UserPayload on UserPayload {
  lastSyncId
  user {
    id
  }
  success
}
fragment UserAdminPayload on UserAdminPayload {
  success
}
fragment OrganizationPayload on OrganizationPayload {
  lastSyncId
  success
}
fragment OrganizationDeletePayload on OrganizationDeletePayload {
  success
}
fragment AdminIntegrationPayload on AdminIntegrationPayload {
  success
}
fragment OrganizationAccessPayload on OrganizationAccessPayload {
  success
}
fragment OrganizationSamlConfigurePayload on OrganizationSamlConfigurePayload {
  success
  samlEnabled
}
fragment SamlConfiguration on SamlConfiguration {
  ssoSigningCert
  ssoEndpoint
  ssoBinding
  ssoSignAlgo
  allowedDomains
}
fragment AdminCommandPayload on AdminCommandPayload {
  success
}
fragment EventPayload on EventPayload {
  success
}
fragment ApiKeyPayload on ApiKeyPayload {
  lastSyncId
  success
}
fragment ArchivePayload on ArchivePayload {
  lastSyncId
  success
}
fragment EmailUserAccountAuthChallengeResponse on EmailUserAccountAuthChallengeResponse {
  success
  authType
}
fragment CreateOrJoinOrganizationResponse on CreateOrJoinOrganizationResponse {
  user {
    id
  }
}
fragment BillingEmailPayload on BillingEmailPayload {
  success
  email
}
fragment CommentPayload on CommentPayload {
  lastSyncId
  comment {
    id
  }
  success
}
fragment ContactPayload on ContactPayload {
  success
}
fragment CustomViewPayload on CustomViewPayload {
  lastSyncId
  customView {
    id
  }
  success
}
fragment CyclePayload on CyclePayload {
  lastSyncId
  cycle {
    id
  }
  success
}
fragment DebugPayload on DebugPayload {
  success
}
fragment EmailUnsubscribePayload on EmailUnsubscribePayload {
  success
}
fragment EmojiPayload on EmojiPayload {
  lastSyncId
  emoji {
    id
  }
  success
}
fragment FavoritePayload on FavoritePayload {
  lastSyncId
  favorite {
    id
  }
  success
}
fragment FeedbackPayload on FeedbackPayload {
  success
}
fragment UploadPayload on UploadPayload {
  lastSyncId
  success
}
fragment UploadFile on UploadFile {
  filename
  contentType
  size
  uploadUrl
  assetUrl
  metaData
}
fragment UploadFileHeader on UploadFileHeader {
  key
  value
}
fragment ImageUploadFromUrlPayload on ImageUploadFromUrlPayload {
  lastSyncId
  url
  success
}
fragment IntegrationPayload on IntegrationPayload {
  lastSyncId
  integration {
    id
  }
  success
}
fragment IssueLabelPayload on IssueLabelPayload {
  lastSyncId
  issueLabel {
    id
  }
  success
}
fragment IssueRelationPayload on IssueRelationPayload {
  lastSyncId
  issueRelation {
    id
  }
  success
}
fragment IssuePayload on IssuePayload {
  lastSyncId
  issue {
    id
  }
  success
}
fragment MilestonePayload on MilestonePayload {
  lastSyncId
  milestone {
    id
  }
  success
}
fragment NotificationPayload on NotificationPayload {
  lastSyncId
  success
}
fragment NotificationSubscriptionPayload on NotificationSubscriptionPayload {
  lastSyncId
  success
}
fragment OauthClientPayload on OauthClientPayload {
  lastSyncId
  success
}
fragment OauthClient on OauthClient {
  id
  createdAt
  updatedAt
  archivedAt
  clientId
  name
  description
  developer
  developerUrl
  imageUrl
  clientSecret
  redirectUris
}
fragment RotateSecretPayload on RotateSecretPayload {
  lastSyncId
  success
}
fragment OauthTokenRevokePayload on OauthTokenRevokePayload {
  success
}
fragment OrganizationDomainPayload on OrganizationDomainPayload {
  lastSyncId
  success
}
fragment OrganizationDomain on OrganizationDomain {
  id
  createdAt
  updatedAt
  archivedAt
  name
  verified
  creator {
    id
  }
  verificationEmail
}
fragment OrganizationInvitePayload on OrganizationInvitePayload {
  lastSyncId
  success
}
fragment ProjectLinkPayload on ProjectLinkPayload {
  lastSyncId
  projectLink {
    id
  }
  success
}
fragment ProjectPayload on ProjectPayload {
  lastSyncId
  project {
    id
  }
  success
}
fragment ReactionPayload on ReactionPayload {
  lastSyncId
  reaction {
    id
  }
  success
}
fragment CreateCsvExportReportPayload on CreateCsvExportReportPayload {
  success
}
fragment SubscriptionSessionPayload on SubscriptionSessionPayload {
  session
}
fragment SubscriptionPayload on SubscriptionPayload {
  lastSyncId
  canceledAt
  success
}
fragment TeamMembershipPayload on TeamMembershipPayload {
  lastSyncId
  teamMembership {
    id
  }
  success
}
fragment TeamPayload on TeamPayload {
  lastSyncId
  team {
    id
  }
  success
}
fragment TemplatePayload on TemplatePayload {
  lastSyncId
  template {
    id
  }
  success
}
fragment UserSettingsPayload on UserSettingsPayload {
  lastSyncId
  success
}
fragment UserSettingsFlagPayload on UserSettingsFlagPayload {
  lastSyncId
  flag
  value
  success
}
fragment UserSettingsFlagsResetPayload on UserSettingsFlagsResetPayload {
  lastSyncId
  success
}
fragment UserSubscribeToNewsletterPayload on UserSubscribeToNewsletterPayload {
  success
}
fragment ViewPreferencesPayload on ViewPreferencesPayload {
  lastSyncId
  success
}
fragment WebhookPayload on WebhookPayload {
  lastSyncId
  webhook {
    id
  }
  success
}
fragment WorkflowStatePayload on WorkflowStatePayload {
  lastSyncId
  workflowState {
    id
  }
  success
}
fragment DocumentStep on DocumentStep {
  id
  createdAt
  updatedAt
  archivedAt
  step
  version
  clientId
}
fragment PushSubscription on PushSubscription {
  id
  createdAt
  updatedAt
  archivedAt
}
fragment UserAccount on UserAccount {
  id
  createdAt
  updatedAt
  archivedAt
  name
  email
  service
  users {
    id
  }
}
fragment FileUpload on FileUpload {
  id
  creator {
    id
  }
  assetUrl
  contentType
  filename
  metaData
  size
}
fragment SynchronizedPayload on SynchronizedPayload {
  lastSyncId
}
fragment OrganizationDomainSimplePayload on OrganizationDomainSimplePayload {
  success
}

# One specific user.
query user($id: String!) {
  user(id: $id) {
    ...User
  }
}
# The settings of the user.
query user_settings($id: String!) {
  user(id: $id) {
    settings {
      ...UserSettings
    }
  }
}
# Issues assigned to the user.
query user_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  user(id: $id) {
    assignedIssues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Issue
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Issues created by the user.
query user_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  user(id: $id) {
    createdIssues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Issue
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Organization in which the user belongs to.
query user_organization($id: String!) {
  user(id: $id) {
    organization {
      ...Organization
    }
  }
}
# Users associated with the organization.
query user_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  user(id: $id) {
    organization {
      users(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Teams associated with the organization.
query user_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  user(id: $id) {
    organization {
      teams(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Team
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Milestones associated with the organization.
query user_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  user(id: $id) {
    organization {
      milestones(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Milestone
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integrations associated with the organization.
query user_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  user(id: $id) {
    organization {
      integrations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Integration
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query user_organization_subscription($id: String!) {
  user(id: $id) {
    organization {
      subscription {
        ...Subscription
      }
    }
  }
}
# Memberships associated with the user.
query user_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  user(id: $id) {
    teamMemberships(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...TeamMembership
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}

# The currently authenticated user.
query viewer {
  viewer {
    ...User
  }
}
# The settings of the user.
query viewer_settings {
  viewer {
    settings {
      ...UserSettings
    }
  }
}
# Issues assigned to the user.
query viewer_assignedIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  viewer {
    assignedIssues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Issue
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Issues created by the user.
query viewer_createdIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  viewer {
    createdIssues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Issue
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Organization in which the user belongs to.
query viewer_organization {
  viewer {
    organization {
      ...Organization
    }
  }
}
# Users associated with the organization.
query viewer_organization_users(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  viewer {
    organization {
      users(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Teams associated with the organization.
query viewer_organization_teams(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  viewer {
    organization {
      teams(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Team
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Milestones associated with the organization.
query viewer_organization_milestones(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  viewer {
    organization {
      milestones(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Milestone
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integrations associated with the organization.
query viewer_organization_integrations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  viewer {
    organization {
      integrations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Integration
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query viewer_organization_subscription {
  viewer {
    organization {
      subscription {
        ...Subscription
      }
    }
  }
}
# Memberships associated with the user.
query viewer_teamMemberships(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  viewer {
    teamMemberships(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...TeamMembership
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}

# The user's organization.
query organization {
  organization {
    ...Organization
  }
}
# Users associated with the organization.
query organization_users(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organization {
    users(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...User
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Teams associated with the organization.
query organization_teams(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organization {
    teams(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Team
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Milestones associated with the organization.
query organization_milestones(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organization {
    milestones(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Milestone
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Integrations associated with the organization.
query organization_integrations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organization {
    integrations(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Integration
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# The organization's subscription to a paid plan.
query organization_subscription {
  organization {
    subscription {
      ...Subscription
    }
  }
}
# The creator of the subscription.
query organization_subscription_creator {
  organization {
    subscription {
      creator {
        ...User
      }
    }
  }
}
# The settings of the user.
query organization_subscription_creator_settings {
  organization {
    subscription {
      creator {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query organization_subscription_creator_assignedIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organization {
    subscription {
      creator {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query organization_subscription_creator_createdIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organization {
    subscription {
      creator {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query organization_subscription_creator_teamMemberships(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organization {
    subscription {
      creator {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}

# Does the organization exist.
query organizationExists($urlKey: String!) {
  organizationExists(urlKey: $urlKey) {
    ...OrganizationExistsPayload
  }
}

# Fetch data to catch up the client to the state of the world.
query syncBootstrap($databaseVersion: Int!, $sinceSyncId: Int!) {
  syncBootstrap(databaseVersion: $databaseVersion, sinceSyncId: $sinceSyncId) {
    ...SyncResponse
  }
}

# Fetches delta packets to catch up the user to the current state of the world.
query syncUpdates($sinceSyncId: Float!) {
  syncUpdates(sinceSyncId: $sinceSyncId) {
    ...SyncResponse
  }
}

# Fetches an archived model.
query archivedModelSync($identifier: String!, $modelClass: String!) {
  archivedModelSync(identifier: $identifier, modelClass: $modelClass) {
    ...ArchiveResponse
  }
}

# Fetches archived models.
query archivedModelsSync($modelClass: String!, $teamId: String!, $before: DateTime, $last: Int) {
  archivedModelsSync(modelClass: $modelClass, teamId: $teamId, before: $before, last: $last) {
    ...ArchiveResponse
  }
}

# Finds a user account by email or identifier. Super user required.
query adminUserAccountLookup($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    ...UserAccountAdminPrivileged
  }
}
query adminUserAccountLookup_users($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      ...UserAdminPrivileged
    }
  }
}
# The settings of the user.
query adminUserAccountLookup_users_settings($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      settings {
        ...UserSettings
      }
    }
  }
}
# The user to whom this notification was targeted for.
query adminUserAccountLookup_users_settings_user($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      settings {
        user {
          ...User
        }
      }
    }
  }
}
# Issues assigned to the user.
query adminUserAccountLookup_users_settings_user_assignedIssues(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      settings {
        user {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query adminUserAccountLookup_users_settings_user_createdIssues(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      settings {
        user {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query adminUserAccountLookup_users_settings_user_organization($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      settings {
        user {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query adminUserAccountLookup_users_settings_user_organization_users(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      settings {
        user {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query adminUserAccountLookup_users_settings_user_organization_teams(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      settings {
        user {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query adminUserAccountLookup_users_settings_user_organization_milestones(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      settings {
        user {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query adminUserAccountLookup_users_settings_user_organization_integrations(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      settings {
        user {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query adminUserAccountLookup_users_settings_user_organization_subscription($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      settings {
        user {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query adminUserAccountLookup_users_settings_user_teamMemberships(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      settings {
        user {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query adminUserAccountLookup_users_assignedIssues($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      assignedIssues {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query adminUserAccountLookup_users_createdIssues($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      createdIssues {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to. Super user required.
query adminUserAccountLookup_users_organization($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        ...OrganizationAdminPrivileged
      }
    }
  }
}
# Users associated with the organization.
query adminUserAccountLookup_users_organization_users($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        users {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query adminUserAccountLookup_users_organization_teams($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        teams {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query adminUserAccountLookup_users_organization_milestones($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        milestones {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query adminUserAccountLookup_users_organization_integrations($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        integrations {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan. Super user required.
query adminUserAccountLookup_users_organization_subscription($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          ...SubscriptionAdminPrivileged
        }
      }
    }
  }
}
# The creator of the subscription.
query adminUserAccountLookup_users_organization_subscription_creator($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query adminUserAccountLookup_users_organization_subscription_creator_settings($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query adminUserAccountLookup_users_organization_subscription_creator_assignedIssues(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query adminUserAccountLookup_users_organization_subscription_creator_createdIssues(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query adminUserAccountLookup_users_organization_subscription_creator_organization($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          creator {
            organization {
              ...Organization
            }
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query adminUserAccountLookup_users_organization_subscription_creator_organization_users(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          creator {
            organization {
              users(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...User
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query adminUserAccountLookup_users_organization_subscription_creator_organization_teams(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          creator {
            organization {
              teams(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Team
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query adminUserAccountLookup_users_organization_subscription_creator_organization_milestones(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          creator {
            organization {
              milestones(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Milestone
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query adminUserAccountLookup_users_organization_subscription_creator_organization_integrations(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          creator {
            organization {
              integrations(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Integration
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query adminUserAccountLookup_users_organization_subscription_creator_organization_subscription(
  $email: String
  $id: String
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          creator {
            organization {
              subscription {
                ...Subscription
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query adminUserAccountLookup_users_organization_subscription_creator_teamMemberships(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization that the subscription is associated with.
query adminUserAccountLookup_users_organization_subscription_organization($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query adminUserAccountLookup_users_organization_subscription_organization_users(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query adminUserAccountLookup_users_organization_subscription_organization_teams(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query adminUserAccountLookup_users_organization_subscription_organization_milestones(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query adminUserAccountLookup_users_organization_subscription_organization_integrations(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query adminUserAccountLookup_users_organization_subscription_organization_subscription($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query adminUserAccountLookup_users_organization_subscription_organization_subscription_creator(
  $email: String
  $id: String
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query adminUserAccountLookup_users_organization_subscription_organization_subscription_creator_settings(
  $email: String
  $id: String
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query adminUserAccountLookup_users_organization_subscription_organization_subscription_creator_assignedIssues(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query adminUserAccountLookup_users_organization_subscription_organization_subscription_creator_createdIssues(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query adminUserAccountLookup_users_organization_subscription_organization_subscription_creator_teamMemberships(
  $email: String
  $id: String
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      organization {
        subscription {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query adminUserAccountLookup_users_teamMemberships($email: String, $id: String) {
  adminUserAccountLookup(email: $email, id: $id) {
    users {
      teamMemberships {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}

# All users of the organization.
query users(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  users(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...User
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# All API keys for the user.
query apiKeys(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  apiKeys(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...ApiKey
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# Get information for an application.
query application($redirectUri: String, $clientId: String!) {
  application(redirectUri: $redirectUri, clientId: $clientId) {
    ...Application
  }
}

# Get all authorized applications for a user
query authorizedApplications {
  authorizedApplications {
    ...AuthorizedApplication
  }
}

# Fetch users belonging to this user account.
query availableUsers {
  availableUsers {
    ...AuthResolverResponse
  }
}
# Users belonging to this account.
query availableUsers_users {
  availableUsers {
    users {
      ...User
    }
  }
}
# The settings of the user.
query availableUsers_users_settings {
  availableUsers {
    users {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query availableUsers_users_assignedIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    users {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query availableUsers_users_createdIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    users {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query availableUsers_users_organization {
  availableUsers {
    users {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query availableUsers_users_organization_users(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    users {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query availableUsers_users_organization_teams(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    users {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query availableUsers_users_organization_milestones(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    users {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query availableUsers_users_organization_integrations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    users {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query availableUsers_users_organization_subscription {
  availableUsers {
    users {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query availableUsers_users_teamMemberships(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    users {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organizations this account has access to, but is not yet a member.
query availableUsers_availableOrganizations {
  availableUsers {
    availableOrganizations {
      ...Organization
    }
  }
}
# Users associated with the organization.
query availableUsers_availableOrganizations_users(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    availableOrganizations {
      users(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Teams associated with the organization.
query availableUsers_availableOrganizations_teams(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    availableOrganizations {
      teams(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Team
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Milestones associated with the organization.
query availableUsers_availableOrganizations_milestones(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    availableOrganizations {
      milestones(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Milestone
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integrations associated with the organization.
query availableUsers_availableOrganizations_integrations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    availableOrganizations {
      integrations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Integration
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query availableUsers_availableOrganizations_subscription {
  availableUsers {
    availableOrganizations {
      subscription {
        ...Subscription
      }
    }
  }
}
# The creator of the subscription.
query availableUsers_availableOrganizations_subscription_creator {
  availableUsers {
    availableOrganizations {
      subscription {
        creator {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query availableUsers_availableOrganizations_subscription_creator_settings {
  availableUsers {
    availableOrganizations {
      subscription {
        creator {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query availableUsers_availableOrganizations_subscription_creator_assignedIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    availableOrganizations {
      subscription {
        creator {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query availableUsers_availableOrganizations_subscription_creator_createdIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    availableOrganizations {
      subscription {
        creator {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query availableUsers_availableOrganizations_subscription_creator_teamMemberships(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  availableUsers {
    availableOrganizations {
      subscription {
        creator {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}

# Fetch SSO login URL for the email provided.
query ssoUrlFromEmail($isDesktop: Boolean, $email: String!) {
  ssoUrlFromEmail(isDesktop: $isDesktop, email: $email) {
    ...SsoUrlFromEmailResponse
  }
}

# Billing details for the customer.
query billingDetails {
  billingDetails {
    ...BillingDetailsPayload
  }
}
# List of invoices, if any.
query billingDetails_invoices {
  billingDetails {
    invoices {
      ...Invoice
    }
  }
}
# The payment method.
query billingDetails_paymentMethod {
  billingDetails {
    paymentMethod {
      ...Card
    }
  }
}

# Join collaborative document and get missing steps.
query collaborativeDocumentJoin($clientId: String!, $issueId: String!, $version: Int!) {
  collaborativeDocumentJoin(clientId: $clientId, issueId: $issueId, version: $version) {
    ...CollaborationDocumentUpdatePayload
  }
}
# Document steps the client has not seen yet and need to rebase it's local steps on.
query collaborativeDocumentJoin_steps($clientId: String!, $issueId: String!, $version: Int!) {
  collaborativeDocumentJoin(clientId: $clientId, issueId: $issueId, version: $version) {
    steps {
      ...StepsResponse
    }
  }
}

# A specific comment.
query comment($id: String!) {
  comment(id: $id) {
    ...Comment
  }
}
# The user who wrote the comment.
query comment_user($id: String!) {
  comment(id: $id) {
    user {
      ...User
    }
  }
}
# The settings of the user.
query comment_user_settings($id: String!) {
  comment(id: $id) {
    user {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query comment_user_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    user {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query comment_user_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    user {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query comment_user_organization($id: String!) {
  comment(id: $id) {
    user {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query comment_user_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    user {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query comment_user_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    user {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query comment_user_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    user {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query comment_user_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    user {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query comment_user_organization_subscription($id: String!) {
  comment(id: $id) {
    user {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query comment_user_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    user {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The issue that the comment is associated with.
query comment_issue($id: String!) {
  comment(id: $id) {
    issue {
      ...Issue
    }
  }
}
# The team that the issue is associated with.
query comment_issue_team($id: String!) {
  comment(id: $id) {
    issue {
      team {
        ...Team
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query comment_issue_team_draftWorkflowState($id: String!) {
  comment(id: $id) {
    issue {
      team {
        draftWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query comment_issue_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        draftWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query comment_issue_team_startWorkflowState($id: String!) {
  comment(id: $id) {
    issue {
      team {
        startWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query comment_issue_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        startWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query comment_issue_team_reviewWorkflowState($id: String!) {
  comment(id: $id) {
    issue {
      team {
        reviewWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query comment_issue_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        reviewWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query comment_issue_team_mergeWorkflowState($id: String!) {
  comment(id: $id) {
    issue {
      team {
        mergeWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query comment_issue_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        mergeWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query comment_issue_team_markedAsDuplicateWorkflowState($id: String!) {
  comment(id: $id) {
    issue {
      team {
        markedAsDuplicateWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query comment_issue_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        markedAsDuplicateWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query comment_issue_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query comment_issue_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        cycles(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Cycle
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query comment_issue_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        memberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query comment_issue_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query comment_issue_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        states(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...WorkflowState
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query comment_issue_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        templates(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Template
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query comment_issue_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        labels(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueLabel
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query comment_issue_team_organization($id: String!) {
  comment(id: $id) {
    issue {
      team {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query comment_issue_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query comment_issue_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query comment_issue_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query comment_issue_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query comment_issue_team_organization_subscription($id: String!) {
  comment(id: $id) {
    issue {
      team {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query comment_issue_team_organization_subscription_creator($id: String!) {
  comment(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query comment_issue_team_organization_subscription_creator_settings($id: String!) {
  comment(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query comment_issue_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query comment_issue_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query comment_issue_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query comment_issue_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      team {
        webhooks(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Webhook
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The cycle that the issue is associated with.
query comment_issue_cycle($id: String!) {
  comment(id: $id) {
    issue {
      cycle {
        ...Cycle
      }
    }
  }
}
# The team that the cycle is associated with.
query comment_issue_cycle_team($id: String!) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          ...Team
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query comment_issue_cycle_team_draftWorkflowState($id: String!) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          draftWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query comment_issue_cycle_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          draftWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query comment_issue_cycle_team_startWorkflowState($id: String!) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          startWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query comment_issue_cycle_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          startWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query comment_issue_cycle_team_reviewWorkflowState($id: String!) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          reviewWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query comment_issue_cycle_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          reviewWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query comment_issue_cycle_team_mergeWorkflowState($id: String!) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          mergeWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query comment_issue_cycle_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          mergeWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query comment_issue_cycle_team_markedAsDuplicateWorkflowState($id: String!) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          markedAsDuplicateWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query comment_issue_cycle_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          markedAsDuplicateWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query comment_issue_cycle_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query comment_issue_cycle_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          cycles(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Cycle
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query comment_issue_cycle_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          memberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query comment_issue_cycle_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query comment_issue_cycle_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          states(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...WorkflowState
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query comment_issue_cycle_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          templates(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Template
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query comment_issue_cycle_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          labels(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...IssueLabel
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query comment_issue_cycle_team_organization($id: String!) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query comment_issue_cycle_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query comment_issue_cycle_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query comment_issue_cycle_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query comment_issue_cycle_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query comment_issue_cycle_team_organization_subscription($id: String!) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query comment_issue_cycle_team_organization_subscription_creator($id: String!) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query comment_issue_cycle_team_organization_subscription_creator_settings($id: String!) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query comment_issue_cycle_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query comment_issue_cycle_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query comment_issue_cycle_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query comment_issue_cycle_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        team {
          webhooks(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Webhook
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the cycle.
query comment_issue_cycle_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues that weren't completed when the cycle was closed.
query comment_issue_cycle_uncompletedIssuesUponClose(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      cycle {
        uncompletedIssuesUponClose(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state that the issue is associated with.
query comment_issue_state($id: String!) {
  comment(id: $id) {
    issue {
      state {
        ...WorkflowState
      }
    }
  }
}
# The team to which this state belongs to.
query comment_issue_state_team($id: String!) {
  comment(id: $id) {
    issue {
      state {
        team {
          ...Team
        }
      }
    }
  }
}
# Issues associated with the team.
query comment_issue_state_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query comment_issue_state_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          cycles(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Cycle
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query comment_issue_state_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          memberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query comment_issue_state_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query comment_issue_state_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          states(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...WorkflowState
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query comment_issue_state_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          templates(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Template
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query comment_issue_state_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          labels(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...IssueLabel
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query comment_issue_state_team_organization($id: String!) {
  comment(id: $id) {
    issue {
      state {
        team {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query comment_issue_state_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query comment_issue_state_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query comment_issue_state_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query comment_issue_state_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query comment_issue_state_team_organization_subscription($id: String!) {
  comment(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query comment_issue_state_team_organization_subscription_creator($id: String!) {
  comment(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query comment_issue_state_team_organization_subscription_creator_settings($id: String!) {
  comment(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query comment_issue_state_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query comment_issue_state_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query comment_issue_state_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query comment_issue_state_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        team {
          webhooks(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Webhook
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query comment_issue_state_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      state {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The user to whom the issue is assigned to.
query comment_issue_assignee($id: String!) {
  comment(id: $id) {
    issue {
      assignee {
        ...User
      }
    }
  }
}
# The settings of the user.
query comment_issue_assignee_settings($id: String!) {
  comment(id: $id) {
    issue {
      assignee {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query comment_issue_assignee_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      assignee {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query comment_issue_assignee_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      assignee {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query comment_issue_assignee_organization($id: String!) {
  comment(id: $id) {
    issue {
      assignee {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query comment_issue_assignee_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      assignee {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query comment_issue_assignee_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      assignee {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query comment_issue_assignee_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      assignee {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query comment_issue_assignee_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      assignee {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query comment_issue_assignee_organization_subscription($id: String!) {
  comment(id: $id) {
    issue {
      assignee {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query comment_issue_assignee_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      assignee {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The project that the issue is associated with.
query comment_issue_project($id: String!) {
  comment(id: $id) {
    issue {
      project {
        ...Project
      }
    }
  }
}
# The user who created the project.
query comment_issue_project_creator($id: String!) {
  comment(id: $id) {
    issue {
      project {
        creator {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query comment_issue_project_creator_settings($id: String!) {
  comment(id: $id) {
    issue {
      project {
        creator {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query comment_issue_project_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        creator {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query comment_issue_project_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        creator {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query comment_issue_project_creator_organization($id: String!) {
  comment(id: $id) {
    issue {
      project {
        creator {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query comment_issue_project_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        creator {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query comment_issue_project_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        creator {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query comment_issue_project_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        creator {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query comment_issue_project_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        creator {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query comment_issue_project_creator_organization_subscription($id: String!) {
  comment(id: $id) {
    issue {
      project {
        creator {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query comment_issue_project_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        creator {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The project lead.
query comment_issue_project_lead($id: String!) {
  comment(id: $id) {
    issue {
      project {
        lead {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query comment_issue_project_lead_settings($id: String!) {
  comment(id: $id) {
    issue {
      project {
        lead {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query comment_issue_project_lead_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        lead {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query comment_issue_project_lead_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        lead {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query comment_issue_project_lead_organization($id: String!) {
  comment(id: $id) {
    issue {
      project {
        lead {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query comment_issue_project_lead_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        lead {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query comment_issue_project_lead_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        lead {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query comment_issue_project_lead_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        lead {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query comment_issue_project_lead_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        lead {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query comment_issue_project_lead_organization_subscription($id: String!) {
  comment(id: $id) {
    issue {
      project {
        lead {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query comment_issue_project_lead_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        lead {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The milestone that this project is associated with.
query comment_issue_project_milestone($id: String!) {
  comment(id: $id) {
    issue {
      project {
        milestone {
          ...Milestone
        }
      }
    }
  }
}
# The organization that the milestone belongs to.
query comment_issue_project_milestone_organization($id: String!) {
  comment(id: $id) {
    issue {
      project {
        milestone {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query comment_issue_project_milestone_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        milestone {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query comment_issue_project_milestone_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        milestone {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query comment_issue_project_milestone_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        milestone {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query comment_issue_project_milestone_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        milestone {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query comment_issue_project_milestone_organization_subscription($id: String!) {
  comment(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query comment_issue_project_milestone_organization_subscription_creator($id: String!) {
  comment(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query comment_issue_project_milestone_organization_subscription_creator_settings($id: String!) {
  comment(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query comment_issue_project_milestone_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query comment_issue_project_milestone_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query comment_issue_project_milestone_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Projects associated with the milestone.
query comment_issue_project_milestone_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        milestone {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with this project.
query comment_issue_project_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Users that are members of the project.
query comment_issue_project_members(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        members(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the project.
query comment_issue_project_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Links associated with the project.
query comment_issue_project_links(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      project {
        links(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...ProjectLink
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Users who are subscribed to the issue.
query comment_issue_subscribers(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      subscribers(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The user who created the issue.
query comment_issue_creator($id: String!) {
  comment(id: $id) {
    issue {
      creator {
        ...User
      }
    }
  }
}
# The settings of the user.
query comment_issue_creator_settings($id: String!) {
  comment(id: $id) {
    issue {
      creator {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query comment_issue_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      creator {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query comment_issue_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      creator {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query comment_issue_creator_organization($id: String!) {
  comment(id: $id) {
    issue {
      creator {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query comment_issue_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      creator {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query comment_issue_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      creator {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query comment_issue_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      creator {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query comment_issue_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      creator {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query comment_issue_creator_organization_subscription($id: String!) {
  comment(id: $id) {
    issue {
      creator {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query comment_issue_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      creator {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Children of the issue.
query comment_issue_children(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      children(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Comments associated with the issue.
query comment_issue_comments(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      comments(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Comment
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# History entries associated with the issue.
query comment_issue_history(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      history(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueHistory
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with this issue.
query comment_issue_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integration resources for this issue.
query comment_issue_integrationResources(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      integrationResources(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IntegrationResource
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Relations associated with this issue.
query comment_issue_relations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      relations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueRelation
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Inverse relations associated with this issue.
query comment_issue_inverseRelations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comment(id: $id) {
    issue {
      inverseRelations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueRelation
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}

query comments(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comments(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...Comment
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific custom view.
query customView($id: String!) {
  customView(id: $id) {
    ...CustomView
  }
}
# The organization of the custom view.
query customView_organization($id: String!) {
  customView(id: $id) {
    organization {
      ...Organization
    }
  }
}
# Users associated with the organization.
query customView_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    organization {
      users(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Teams associated with the organization.
query customView_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    organization {
      teams(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Team
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Milestones associated with the organization.
query customView_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    organization {
      milestones(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Milestone
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integrations associated with the organization.
query customView_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    organization {
      integrations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Integration
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query customView_organization_subscription($id: String!) {
  customView(id: $id) {
    organization {
      subscription {
        ...Subscription
      }
    }
  }
}
# The creator of the subscription.
query customView_organization_subscription_creator($id: String!) {
  customView(id: $id) {
    organization {
      subscription {
        creator {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query customView_organization_subscription_creator_settings($id: String!) {
  customView(id: $id) {
    organization {
      subscription {
        creator {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query customView_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    organization {
      subscription {
        creator {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query customView_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    organization {
      subscription {
        creator {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query customView_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    organization {
      subscription {
        creator {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The team associated with the custom view.
query customView_team($id: String!) {
  customView(id: $id) {
    team {
      ...Team
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query customView_team_draftWorkflowState($id: String!) {
  customView(id: $id) {
    team {
      draftWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query customView_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      draftWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query customView_team_startWorkflowState($id: String!) {
  customView(id: $id) {
    team {
      startWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query customView_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      startWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query customView_team_reviewWorkflowState($id: String!) {
  customView(id: $id) {
    team {
      reviewWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query customView_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      reviewWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query customView_team_mergeWorkflowState($id: String!) {
  customView(id: $id) {
    team {
      mergeWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query customView_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      mergeWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query customView_team_markedAsDuplicateWorkflowState($id: String!) {
  customView(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query customView_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query customView_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Cycles associated with the team.
query customView_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      cycles(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Cycle
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Memberships associated with the team.
query customView_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      memberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Projects associated with the team.
query customView_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      projects(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Project
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query customView_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      states(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...WorkflowState
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Templates associated with the team.
query customView_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      templates(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Template
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with the team.
query customView_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization that the team is associated with.
query customView_team_organization($id: String!) {
  customView(id: $id) {
    team {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query customView_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query customView_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query customView_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query customView_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query customView_team_organization_subscription($id: String!) {
  customView(id: $id) {
    team {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# The creator of the subscription.
query customView_team_organization_subscription_creator($id: String!) {
  customView(id: $id) {
    team {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query customView_team_organization_subscription_creator_settings($id: String!) {
  customView(id: $id) {
    team {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query customView_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query customView_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query customView_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query customView_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    team {
      webhooks(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Webhook
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The user who created the custom view.
query customView_creator($id: String!) {
  customView(id: $id) {
    creator {
      ...User
    }
  }
}
# The settings of the user.
query customView_creator_settings($id: String!) {
  customView(id: $id) {
    creator {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query customView_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    creator {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query customView_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    creator {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query customView_creator_organization($id: String!) {
  customView(id: $id) {
    creator {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query customView_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    creator {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query customView_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    creator {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query customView_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    creator {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query customView_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    creator {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query customView_creator_organization_subscription($id: String!) {
  customView(id: $id) {
    creator {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query customView_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customView(id: $id) {
    creator {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}

query customViews(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customViews(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...CustomView
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific cycle.
query cycle($id: String!) {
  cycle(id: $id) {
    ...Cycle
  }
}
# The team that the cycle is associated with.
query cycle_team($id: String!) {
  cycle(id: $id) {
    team {
      ...Team
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query cycle_team_draftWorkflowState($id: String!) {
  cycle(id: $id) {
    team {
      draftWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query cycle_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      draftWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query cycle_team_startWorkflowState($id: String!) {
  cycle(id: $id) {
    team {
      startWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query cycle_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      startWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query cycle_team_reviewWorkflowState($id: String!) {
  cycle(id: $id) {
    team {
      reviewWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query cycle_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      reviewWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query cycle_team_mergeWorkflowState($id: String!) {
  cycle(id: $id) {
    team {
      mergeWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query cycle_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      mergeWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query cycle_team_markedAsDuplicateWorkflowState($id: String!) {
  cycle(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query cycle_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query cycle_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Cycles associated with the team.
query cycle_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      cycles(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Cycle
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Memberships associated with the team.
query cycle_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      memberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Projects associated with the team.
query cycle_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      projects(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Project
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query cycle_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      states(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...WorkflowState
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Templates associated with the team.
query cycle_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      templates(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Template
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with the team.
query cycle_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization that the team is associated with.
query cycle_team_organization($id: String!) {
  cycle(id: $id) {
    team {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query cycle_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query cycle_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query cycle_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query cycle_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query cycle_team_organization_subscription($id: String!) {
  cycle(id: $id) {
    team {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# The creator of the subscription.
query cycle_team_organization_subscription_creator($id: String!) {
  cycle(id: $id) {
    team {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query cycle_team_organization_subscription_creator_settings($id: String!) {
  cycle(id: $id) {
    team {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query cycle_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query cycle_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query cycle_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query cycle_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    team {
      webhooks(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Webhook
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues associated with the cycle.
query cycle_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    issues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Issue
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Issues that weren't completed when the cycle was closed.
query cycle_uncompletedIssuesUponClose(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycle(id: $id) {
    uncompletedIssuesUponClose(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Issue
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}

# All cycles.
query cycles(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycles(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...Cycle
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# A specific emoji.
query emoji($id: String!) {
  emoji(id: $id) {
    ...Emoji
  }
}
# The user who created the emoji.
query emoji_creator($id: String!) {
  emoji(id: $id) {
    creator {
      ...User
    }
  }
}
# The settings of the user.
query emoji_creator_settings($id: String!) {
  emoji(id: $id) {
    creator {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query emoji_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    creator {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query emoji_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    creator {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query emoji_creator_organization($id: String!) {
  emoji(id: $id) {
    creator {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query emoji_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    creator {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query emoji_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    creator {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query emoji_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    creator {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query emoji_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    creator {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query emoji_creator_organization_subscription($id: String!) {
  emoji(id: $id) {
    creator {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query emoji_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    creator {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization that the emoji belongs to.
query emoji_organization($id: String!) {
  emoji(id: $id) {
    organization {
      ...Organization
    }
  }
}
# Users associated with the organization.
query emoji_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    organization {
      users(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Teams associated with the organization.
query emoji_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    organization {
      teams(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Team
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Milestones associated with the organization.
query emoji_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    organization {
      milestones(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Milestone
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integrations associated with the organization.
query emoji_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    organization {
      integrations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Integration
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query emoji_organization_subscription($id: String!) {
  emoji(id: $id) {
    organization {
      subscription {
        ...Subscription
      }
    }
  }
}
# The creator of the subscription.
query emoji_organization_subscription_creator($id: String!) {
  emoji(id: $id) {
    organization {
      subscription {
        creator {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query emoji_organization_subscription_creator_settings($id: String!) {
  emoji(id: $id) {
    organization {
      subscription {
        creator {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query emoji_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    organization {
      subscription {
        creator {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query emoji_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    organization {
      subscription {
        creator {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query emoji_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emoji(id: $id) {
    organization {
      subscription {
        creator {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}

query emojis(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emojis(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...Emoji
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific favorite.
query favorite($id: String!) {
  favorite(id: $id) {
    ...Favorite
  }
}
# The owner of the favorite.
query favorite_user($id: String!) {
  favorite(id: $id) {
    user {
      ...User
    }
  }
}
# The settings of the user.
query favorite_user_settings($id: String!) {
  favorite(id: $id) {
    user {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query favorite_user_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    user {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_user_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    user {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query favorite_user_organization($id: String!) {
  favorite(id: $id) {
    user {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query favorite_user_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    user {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_user_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    user {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_user_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    user {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_user_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    user {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_user_organization_subscription($id: String!) {
  favorite(id: $id) {
    user {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_user_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    user {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Favorited issue.
query favorite_issue($id: String!) {
  favorite(id: $id) {
    issue {
      ...Issue
    }
  }
}
# The team that the issue is associated with.
query favorite_issue_team($id: String!) {
  favorite(id: $id) {
    issue {
      team {
        ...Team
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query favorite_issue_team_draftWorkflowState($id: String!) {
  favorite(id: $id) {
    issue {
      team {
        draftWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_issue_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        draftWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query favorite_issue_team_startWorkflowState($id: String!) {
  favorite(id: $id) {
    issue {
      team {
        startWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_issue_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        startWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query favorite_issue_team_reviewWorkflowState($id: String!) {
  favorite(id: $id) {
    issue {
      team {
        reviewWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_issue_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        reviewWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query favorite_issue_team_mergeWorkflowState($id: String!) {
  favorite(id: $id) {
    issue {
      team {
        mergeWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_issue_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        mergeWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query favorite_issue_team_markedAsDuplicateWorkflowState($id: String!) {
  favorite(id: $id) {
    issue {
      team {
        markedAsDuplicateWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_issue_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        markedAsDuplicateWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query favorite_issue_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query favorite_issue_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        cycles(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Cycle
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query favorite_issue_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        memberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query favorite_issue_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query favorite_issue_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        states(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...WorkflowState
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query favorite_issue_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        templates(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Template
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query favorite_issue_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        labels(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueLabel
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query favorite_issue_team_organization($id: String!) {
  favorite(id: $id) {
    issue {
      team {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_issue_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_issue_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_issue_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_issue_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_issue_team_organization_subscription($id: String!) {
  favorite(id: $id) {
    issue {
      team {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query favorite_issue_team_organization_subscription_creator($id: String!) {
  favorite(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query favorite_issue_team_organization_subscription_creator_settings($id: String!) {
  favorite(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_issue_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_issue_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_issue_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query favorite_issue_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      team {
        webhooks(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Webhook
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The cycle that the issue is associated with.
query favorite_issue_cycle($id: String!) {
  favorite(id: $id) {
    issue {
      cycle {
        ...Cycle
      }
    }
  }
}
# The team that the cycle is associated with.
query favorite_issue_cycle_team($id: String!) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          ...Team
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query favorite_issue_cycle_team_draftWorkflowState($id: String!) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          draftWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_issue_cycle_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          draftWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query favorite_issue_cycle_team_startWorkflowState($id: String!) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          startWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_issue_cycle_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          startWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query favorite_issue_cycle_team_reviewWorkflowState($id: String!) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          reviewWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_issue_cycle_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          reviewWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query favorite_issue_cycle_team_mergeWorkflowState($id: String!) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          mergeWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_issue_cycle_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          mergeWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query favorite_issue_cycle_team_markedAsDuplicateWorkflowState($id: String!) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          markedAsDuplicateWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_issue_cycle_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          markedAsDuplicateWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query favorite_issue_cycle_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query favorite_issue_cycle_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          cycles(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Cycle
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query favorite_issue_cycle_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          memberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query favorite_issue_cycle_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query favorite_issue_cycle_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          states(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...WorkflowState
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query favorite_issue_cycle_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          templates(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Template
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query favorite_issue_cycle_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          labels(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...IssueLabel
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query favorite_issue_cycle_team_organization($id: String!) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_issue_cycle_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_issue_cycle_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_issue_cycle_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_issue_cycle_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_issue_cycle_team_organization_subscription($id: String!) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query favorite_issue_cycle_team_organization_subscription_creator($id: String!) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query favorite_issue_cycle_team_organization_subscription_creator_settings($id: String!) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_issue_cycle_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_issue_cycle_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_issue_cycle_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query favorite_issue_cycle_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        team {
          webhooks(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Webhook
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the cycle.
query favorite_issue_cycle_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues that weren't completed when the cycle was closed.
query favorite_issue_cycle_uncompletedIssuesUponClose(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      cycle {
        uncompletedIssuesUponClose(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state that the issue is associated with.
query favorite_issue_state($id: String!) {
  favorite(id: $id) {
    issue {
      state {
        ...WorkflowState
      }
    }
  }
}
# The team to which this state belongs to.
query favorite_issue_state_team($id: String!) {
  favorite(id: $id) {
    issue {
      state {
        team {
          ...Team
        }
      }
    }
  }
}
# Issues associated with the team.
query favorite_issue_state_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query favorite_issue_state_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          cycles(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Cycle
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query favorite_issue_state_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          memberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query favorite_issue_state_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query favorite_issue_state_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          states(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...WorkflowState
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query favorite_issue_state_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          templates(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Template
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query favorite_issue_state_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          labels(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...IssueLabel
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query favorite_issue_state_team_organization($id: String!) {
  favorite(id: $id) {
    issue {
      state {
        team {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_issue_state_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_issue_state_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_issue_state_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_issue_state_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_issue_state_team_organization_subscription($id: String!) {
  favorite(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query favorite_issue_state_team_organization_subscription_creator($id: String!) {
  favorite(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query favorite_issue_state_team_organization_subscription_creator_settings($id: String!) {
  favorite(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_issue_state_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_issue_state_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_issue_state_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query favorite_issue_state_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        team {
          webhooks(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Webhook
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_issue_state_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      state {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The user to whom the issue is assigned to.
query favorite_issue_assignee($id: String!) {
  favorite(id: $id) {
    issue {
      assignee {
        ...User
      }
    }
  }
}
# The settings of the user.
query favorite_issue_assignee_settings($id: String!) {
  favorite(id: $id) {
    issue {
      assignee {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_issue_assignee_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      assignee {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_issue_assignee_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      assignee {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query favorite_issue_assignee_organization($id: String!) {
  favorite(id: $id) {
    issue {
      assignee {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_issue_assignee_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      assignee {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_issue_assignee_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      assignee {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_issue_assignee_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      assignee {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_issue_assignee_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      assignee {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_issue_assignee_organization_subscription($id: String!) {
  favorite(id: $id) {
    issue {
      assignee {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_issue_assignee_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      assignee {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The project that the issue is associated with.
query favorite_issue_project($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        ...Project
      }
    }
  }
}
# The user who created the project.
query favorite_issue_project_creator($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        creator {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query favorite_issue_project_creator_settings($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        creator {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_issue_project_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        creator {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_issue_project_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        creator {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query favorite_issue_project_creator_organization($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        creator {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_issue_project_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        creator {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_issue_project_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        creator {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_issue_project_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        creator {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_issue_project_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        creator {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_issue_project_creator_organization_subscription($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        creator {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_issue_project_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        creator {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The project lead.
query favorite_issue_project_lead($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        lead {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query favorite_issue_project_lead_settings($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        lead {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_issue_project_lead_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        lead {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_issue_project_lead_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        lead {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query favorite_issue_project_lead_organization($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        lead {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_issue_project_lead_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        lead {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_issue_project_lead_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        lead {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_issue_project_lead_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        lead {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_issue_project_lead_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        lead {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_issue_project_lead_organization_subscription($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        lead {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_issue_project_lead_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        lead {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The milestone that this project is associated with.
query favorite_issue_project_milestone($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        milestone {
          ...Milestone
        }
      }
    }
  }
}
# The organization that the milestone belongs to.
query favorite_issue_project_milestone_organization($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        milestone {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_issue_project_milestone_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        milestone {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_issue_project_milestone_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        milestone {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_issue_project_milestone_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        milestone {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_issue_project_milestone_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        milestone {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_issue_project_milestone_organization_subscription($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query favorite_issue_project_milestone_organization_subscription_creator($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query favorite_issue_project_milestone_organization_subscription_creator_settings($id: String!) {
  favorite(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_issue_project_milestone_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_issue_project_milestone_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_issue_project_milestone_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Projects associated with the milestone.
query favorite_issue_project_milestone_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        milestone {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with this project.
query favorite_issue_project_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Users that are members of the project.
query favorite_issue_project_members(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        members(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the project.
query favorite_issue_project_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Links associated with the project.
query favorite_issue_project_links(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      project {
        links(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...ProjectLink
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Users who are subscribed to the issue.
query favorite_issue_subscribers(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      subscribers(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The user who created the issue.
query favorite_issue_creator($id: String!) {
  favorite(id: $id) {
    issue {
      creator {
        ...User
      }
    }
  }
}
# The settings of the user.
query favorite_issue_creator_settings($id: String!) {
  favorite(id: $id) {
    issue {
      creator {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_issue_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      creator {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_issue_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      creator {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query favorite_issue_creator_organization($id: String!) {
  favorite(id: $id) {
    issue {
      creator {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_issue_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      creator {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_issue_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      creator {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_issue_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      creator {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_issue_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      creator {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_issue_creator_organization_subscription($id: String!) {
  favorite(id: $id) {
    issue {
      creator {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_issue_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      creator {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Children of the issue.
query favorite_issue_children(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      children(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Comments associated with the issue.
query favorite_issue_comments(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      comments(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Comment
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# History entries associated with the issue.
query favorite_issue_history(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      history(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueHistory
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with this issue.
query favorite_issue_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integration resources for this issue.
query favorite_issue_integrationResources(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      integrationResources(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IntegrationResource
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Relations associated with this issue.
query favorite_issue_relations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      relations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueRelation
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Inverse relations associated with this issue.
query favorite_issue_inverseRelations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    issue {
      inverseRelations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueRelation
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Favorited project.
query favorite_project($id: String!) {
  favorite(id: $id) {
    project {
      ...Project
    }
  }
}
# The user who created the project.
query favorite_project_creator($id: String!) {
  favorite(id: $id) {
    project {
      creator {
        ...User
      }
    }
  }
}
# The settings of the user.
query favorite_project_creator_settings($id: String!) {
  favorite(id: $id) {
    project {
      creator {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_project_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      creator {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_project_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      creator {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query favorite_project_creator_organization($id: String!) {
  favorite(id: $id) {
    project {
      creator {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_project_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      creator {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_project_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      creator {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_project_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      creator {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_project_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      creator {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_project_creator_organization_subscription($id: String!) {
  favorite(id: $id) {
    project {
      creator {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_project_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      creator {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The project lead.
query favorite_project_lead($id: String!) {
  favorite(id: $id) {
    project {
      lead {
        ...User
      }
    }
  }
}
# The settings of the user.
query favorite_project_lead_settings($id: String!) {
  favorite(id: $id) {
    project {
      lead {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_project_lead_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      lead {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_project_lead_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      lead {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query favorite_project_lead_organization($id: String!) {
  favorite(id: $id) {
    project {
      lead {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_project_lead_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      lead {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_project_lead_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      lead {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_project_lead_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      lead {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_project_lead_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      lead {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_project_lead_organization_subscription($id: String!) {
  favorite(id: $id) {
    project {
      lead {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_project_lead_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      lead {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The milestone that this project is associated with.
query favorite_project_milestone($id: String!) {
  favorite(id: $id) {
    project {
      milestone {
        ...Milestone
      }
    }
  }
}
# The organization that the milestone belongs to.
query favorite_project_milestone_organization($id: String!) {
  favorite(id: $id) {
    project {
      milestone {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_project_milestone_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      milestone {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_project_milestone_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      milestone {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_project_milestone_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      milestone {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_project_milestone_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      milestone {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_project_milestone_organization_subscription($id: String!) {
  favorite(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query favorite_project_milestone_organization_subscription_creator($id: String!) {
  favorite(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query favorite_project_milestone_organization_subscription_creator_settings($id: String!) {
  favorite(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_project_milestone_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_project_milestone_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_project_milestone_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Projects associated with the milestone.
query favorite_project_milestone_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      milestone {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with this project.
query favorite_project_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      teams(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Team
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Users that are members of the project.
query favorite_project_members(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      members(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues associated with the project.
query favorite_project_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Links associated with the project.
query favorite_project_links(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    project {
      links(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...ProjectLink
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Favorited project team.
query favorite_projectTeam($id: String!) {
  favorite(id: $id) {
    projectTeam {
      ...Project
    }
  }
}
# The user who created the project.
query favorite_projectTeam_creator($id: String!) {
  favorite(id: $id) {
    projectTeam {
      creator {
        ...User
      }
    }
  }
}
# The settings of the user.
query favorite_projectTeam_creator_settings($id: String!) {
  favorite(id: $id) {
    projectTeam {
      creator {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_projectTeam_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      creator {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_projectTeam_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      creator {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query favorite_projectTeam_creator_organization($id: String!) {
  favorite(id: $id) {
    projectTeam {
      creator {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_projectTeam_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      creator {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_projectTeam_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      creator {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_projectTeam_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      creator {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_projectTeam_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      creator {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_projectTeam_creator_organization_subscription($id: String!) {
  favorite(id: $id) {
    projectTeam {
      creator {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_projectTeam_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      creator {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The project lead.
query favorite_projectTeam_lead($id: String!) {
  favorite(id: $id) {
    projectTeam {
      lead {
        ...User
      }
    }
  }
}
# The settings of the user.
query favorite_projectTeam_lead_settings($id: String!) {
  favorite(id: $id) {
    projectTeam {
      lead {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_projectTeam_lead_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      lead {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_projectTeam_lead_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      lead {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query favorite_projectTeam_lead_organization($id: String!) {
  favorite(id: $id) {
    projectTeam {
      lead {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_projectTeam_lead_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      lead {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_projectTeam_lead_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      lead {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_projectTeam_lead_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      lead {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_projectTeam_lead_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      lead {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_projectTeam_lead_organization_subscription($id: String!) {
  favorite(id: $id) {
    projectTeam {
      lead {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_projectTeam_lead_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      lead {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The milestone that this project is associated with.
query favorite_projectTeam_milestone($id: String!) {
  favorite(id: $id) {
    projectTeam {
      milestone {
        ...Milestone
      }
    }
  }
}
# The organization that the milestone belongs to.
query favorite_projectTeam_milestone_organization($id: String!) {
  favorite(id: $id) {
    projectTeam {
      milestone {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_projectTeam_milestone_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      milestone {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_projectTeam_milestone_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      milestone {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_projectTeam_milestone_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      milestone {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_projectTeam_milestone_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      milestone {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_projectTeam_milestone_organization_subscription($id: String!) {
  favorite(id: $id) {
    projectTeam {
      milestone {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query favorite_projectTeam_milestone_organization_subscription_creator($id: String!) {
  favorite(id: $id) {
    projectTeam {
      milestone {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query favorite_projectTeam_milestone_organization_subscription_creator_settings($id: String!) {
  favorite(id: $id) {
    projectTeam {
      milestone {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_projectTeam_milestone_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      milestone {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_projectTeam_milestone_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      milestone {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_projectTeam_milestone_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      milestone {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Projects associated with the milestone.
query favorite_projectTeam_milestone_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      milestone {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with this project.
query favorite_projectTeam_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      teams(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Team
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Users that are members of the project.
query favorite_projectTeam_members(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      members(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues associated with the project.
query favorite_projectTeam_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Links associated with the project.
query favorite_projectTeam_links(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    projectTeam {
      links(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...ProjectLink
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Favorited cycle.
query favorite_cycle($id: String!) {
  favorite(id: $id) {
    cycle {
      ...Cycle
    }
  }
}
# The team that the cycle is associated with.
query favorite_cycle_team($id: String!) {
  favorite(id: $id) {
    cycle {
      team {
        ...Team
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query favorite_cycle_team_draftWorkflowState($id: String!) {
  favorite(id: $id) {
    cycle {
      team {
        draftWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_cycle_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        draftWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query favorite_cycle_team_startWorkflowState($id: String!) {
  favorite(id: $id) {
    cycle {
      team {
        startWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_cycle_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        startWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query favorite_cycle_team_reviewWorkflowState($id: String!) {
  favorite(id: $id) {
    cycle {
      team {
        reviewWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_cycle_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        reviewWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query favorite_cycle_team_mergeWorkflowState($id: String!) {
  favorite(id: $id) {
    cycle {
      team {
        mergeWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_cycle_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        mergeWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query favorite_cycle_team_markedAsDuplicateWorkflowState($id: String!) {
  favorite(id: $id) {
    cycle {
      team {
        markedAsDuplicateWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_cycle_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        markedAsDuplicateWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query favorite_cycle_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query favorite_cycle_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        cycles(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Cycle
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query favorite_cycle_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        memberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query favorite_cycle_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query favorite_cycle_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        states(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...WorkflowState
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query favorite_cycle_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        templates(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Template
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query favorite_cycle_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        labels(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueLabel
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query favorite_cycle_team_organization($id: String!) {
  favorite(id: $id) {
    cycle {
      team {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_cycle_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_cycle_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_cycle_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_cycle_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_cycle_team_organization_subscription($id: String!) {
  favorite(id: $id) {
    cycle {
      team {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query favorite_cycle_team_organization_subscription_creator($id: String!) {
  favorite(id: $id) {
    cycle {
      team {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query favorite_cycle_team_organization_subscription_creator_settings($id: String!) {
  favorite(id: $id) {
    cycle {
      team {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_cycle_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_cycle_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_cycle_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query favorite_cycle_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      team {
        webhooks(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Webhook
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the cycle.
query favorite_cycle_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues that weren't completed when the cycle was closed.
query favorite_cycle_uncompletedIssuesUponClose(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    cycle {
      uncompletedIssuesUponClose(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Favorited issue label.
query favorite_label($id: String!) {
  favorite(id: $id) {
    label {
      ...IssueLabel
    }
  }
}
# The team to which the label belongs to.
query favorite_label_team($id: String!) {
  favorite(id: $id) {
    label {
      team {
        ...Team
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query favorite_label_team_draftWorkflowState($id: String!) {
  favorite(id: $id) {
    label {
      team {
        draftWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_label_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        draftWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query favorite_label_team_startWorkflowState($id: String!) {
  favorite(id: $id) {
    label {
      team {
        startWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_label_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        startWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query favorite_label_team_reviewWorkflowState($id: String!) {
  favorite(id: $id) {
    label {
      team {
        reviewWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_label_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        reviewWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query favorite_label_team_mergeWorkflowState($id: String!) {
  favorite(id: $id) {
    label {
      team {
        mergeWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_label_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        mergeWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query favorite_label_team_markedAsDuplicateWorkflowState($id: String!) {
  favorite(id: $id) {
    label {
      team {
        markedAsDuplicateWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query favorite_label_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        markedAsDuplicateWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query favorite_label_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query favorite_label_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        cycles(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Cycle
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query favorite_label_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        memberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query favorite_label_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query favorite_label_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        states(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...WorkflowState
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query favorite_label_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        templates(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Template
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query favorite_label_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        labels(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueLabel
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query favorite_label_team_organization($id: String!) {
  favorite(id: $id) {
    label {
      team {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_label_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_label_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_label_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_label_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_label_team_organization_subscription($id: String!) {
  favorite(id: $id) {
    label {
      team {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query favorite_label_team_organization_subscription_creator($id: String!) {
  favorite(id: $id) {
    label {
      team {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query favorite_label_team_organization_subscription_creator_settings($id: String!) {
  favorite(id: $id) {
    label {
      team {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_label_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_label_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_label_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query favorite_label_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      team {
        webhooks(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Webhook
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The user who created the label.
query favorite_label_creator($id: String!) {
  favorite(id: $id) {
    label {
      creator {
        ...User
      }
    }
  }
}
# The settings of the user.
query favorite_label_creator_settings($id: String!) {
  favorite(id: $id) {
    label {
      creator {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query favorite_label_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      creator {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query favorite_label_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      creator {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query favorite_label_creator_organization($id: String!) {
  favorite(id: $id) {
    label {
      creator {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query favorite_label_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      creator {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query favorite_label_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      creator {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query favorite_label_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      creator {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query favorite_label_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      creator {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query favorite_label_creator_organization_subscription($id: String!) {
  favorite(id: $id) {
    label {
      creator {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query favorite_label_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      creator {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the label.
query favorite_label_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorite(id: $id) {
    label {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}

# The user's favorites.
query favorites(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorites(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...Favorite
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# Fetch Figma screenshot and other information with file and node identifiers.
query figmaEmbedInfo($nodeId: String, $fileId: String!) {
  figmaEmbedInfo(nodeId: $nodeId, fileId: $fileId) {
    ...FigmaEmbedPayload
  }
}
# Figma embed information.
query figmaEmbedInfo_figmaEmbed($nodeId: String, $fileId: String!) {
  figmaEmbedInfo(nodeId: $nodeId, fileId: $fileId) {
    figmaEmbed {
      ...FigmaEmbed
    }
  }
}

# One specific integration.
query integration($id: String!) {
  integration(id: $id) {
    ...Integration
  }
}
# Settings related to the integration.
query integration_settings($id: String!) {
  integration(id: $id) {
    settings {
      slackPost {
        ...SlackPostSettings
      }
      slackProjectPost {
        ...SlackPostSettings
      }
      googleSheets {
        ...GoogleSheetsSettings
      }
      sentry {
        ...SentrySettings
      }
    }
  }
}
query integration_settings_slackPost($id: String!) {
  integration(id: $id) {
    settings {
      slackPost {
        ...SlackPostSettings
      }
    }
  }
}
query integration_settings_slackProjectPost($id: String!) {
  integration(id: $id) {
    settings {
      slackProjectPost {
        ...SlackPostSettings
      }
    }
  }
}
query integration_settings_googleSheets($id: String!) {
  integration(id: $id) {
    settings {
      googleSheets {
        ...GoogleSheetsSettings
      }
    }
  }
}
query integration_settings_sentry($id: String!) {
  integration(id: $id) {
    settings {
      sentry {
        ...SentrySettings
      }
    }
  }
}
# The organization that the integration is associated with.
query integration_organization($id: String!) {
  integration(id: $id) {
    organization {
      ...Organization
    }
  }
}
# Users associated with the organization.
query integration_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    organization {
      users(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Teams associated with the organization.
query integration_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    organization {
      teams(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Team
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integration_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    organization {
      milestones(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Milestone
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integration_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    organization {
      integrations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Integration
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integration_organization_subscription($id: String!) {
  integration(id: $id) {
    organization {
      subscription {
        ...Subscription
      }
    }
  }
}
# The creator of the subscription.
query integration_organization_subscription_creator($id: String!) {
  integration(id: $id) {
    organization {
      subscription {
        creator {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query integration_organization_subscription_creator_settings($id: String!) {
  integration(id: $id) {
    organization {
      subscription {
        creator {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query integration_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    organization {
      subscription {
        creator {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query integration_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    organization {
      subscription {
        creator {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query integration_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    organization {
      subscription {
        creator {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The team that the integration is associated with.
query integration_team($id: String!) {
  integration(id: $id) {
    team {
      ...Team
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query integration_team_draftWorkflowState($id: String!) {
  integration(id: $id) {
    team {
      draftWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query integration_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      draftWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query integration_team_startWorkflowState($id: String!) {
  integration(id: $id) {
    team {
      startWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query integration_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      startWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query integration_team_reviewWorkflowState($id: String!) {
  integration(id: $id) {
    team {
      reviewWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query integration_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      reviewWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query integration_team_mergeWorkflowState($id: String!) {
  integration(id: $id) {
    team {
      mergeWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query integration_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      mergeWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query integration_team_markedAsDuplicateWorkflowState($id: String!) {
  integration(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query integration_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query integration_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Cycles associated with the team.
query integration_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      cycles(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Cycle
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Memberships associated with the team.
query integration_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      memberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Projects associated with the team.
query integration_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      projects(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Project
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query integration_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      states(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...WorkflowState
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Templates associated with the team.
query integration_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      templates(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Template
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with the team.
query integration_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization that the team is associated with.
query integration_team_organization($id: String!) {
  integration(id: $id) {
    team {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query integration_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query integration_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integration_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integration_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integration_team_organization_subscription($id: String!) {
  integration(id: $id) {
    team {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# The creator of the subscription.
query integration_team_organization_subscription_creator($id: String!) {
  integration(id: $id) {
    team {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query integration_team_organization_subscription_creator_settings($id: String!) {
  integration(id: $id) {
    team {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query integration_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query integration_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query integration_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query integration_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    team {
      webhooks(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Webhook
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The user that added the integration.
query integration_creator($id: String!) {
  integration(id: $id) {
    creator {
      ...User
    }
  }
}
# The settings of the user.
query integration_creator_settings($id: String!) {
  integration(id: $id) {
    creator {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query integration_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    creator {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query integration_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    creator {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query integration_creator_organization($id: String!) {
  integration(id: $id) {
    creator {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query integration_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    creator {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query integration_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    creator {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integration_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    creator {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integration_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    creator {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integration_creator_organization_subscription($id: String!) {
  integration(id: $id) {
    creator {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query integration_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integration(id: $id) {
    creator {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}

# All integrations.
query integrations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrations(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...Integration
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific integration resource. (e.g. linked GitHub pull requests for an issue)
query integrationResource($id: String!) {
  integrationResource(id: $id) {
    ...IntegrationResource
  }
}
# Detailed information about the external resource.
query integrationResource_data($id: String!) {
  integrationResource(id: $id) {
    data {
      # The payload for an IntegrationResource of type 'githubPullRequest'
      githubPullRequest {
        ...PullRequestPayload
      }
      # The payload for an IntegrationResource of type 'gitlabMergeRequest'
      gitlabMergeRequest {
        ...PullRequestPayload
      }
      # The payload for an IntegrationResource of type 'githubCommit'
      githubCommit {
        ...CommitPayload
      }
      # The payload for an IntegrationResource of type 'sentryIssue'
      sentryIssue {
        ...SentryIssuePayload
      }
    }
  }
}
# The payload for an IntegrationResource of type 'githubPullRequest'
query integrationResource_data_githubPullRequest($id: String!) {
  integrationResource(id: $id) {
    data {
      githubPullRequest {
        ...PullRequestPayload
      }
    }
  }
}
# The payload for an IntegrationResource of type 'gitlabMergeRequest'
query integrationResource_data_gitlabMergeRequest($id: String!) {
  integrationResource(id: $id) {
    data {
      gitlabMergeRequest {
        ...PullRequestPayload
      }
    }
  }
}
# The payload for an IntegrationResource of type 'githubCommit'
query integrationResource_data_githubCommit($id: String!) {
  integrationResource(id: $id) {
    data {
      githubCommit {
        ...CommitPayload
      }
    }
  }
}
# The payload for an IntegrationResource of type 'sentryIssue'
query integrationResource_data_sentryIssue($id: String!) {
  integrationResource(id: $id) {
    data {
      sentryIssue {
        ...SentryIssuePayload
      }
    }
  }
}
# The integration that the resource is associated with.
query integrationResource_integration($id: String!) {
  integrationResource(id: $id) {
    integration {
      ...Integration
    }
  }
}
# Settings related to the integration.
query integrationResource_integration_settings($id: String!) {
  integrationResource(id: $id) {
    integration {
      settings {
        slackPost {
          ...SlackPostSettings
        }
        slackProjectPost {
          ...SlackPostSettings
        }
        googleSheets {
          ...GoogleSheetsSettings
        }
        sentry {
          ...SentrySettings
        }
      }
    }
  }
}
query integrationResource_integration_settings_slackPost($id: String!) {
  integrationResource(id: $id) {
    integration {
      settings {
        slackPost {
          ...SlackPostSettings
        }
      }
    }
  }
}
query integrationResource_integration_settings_slackProjectPost($id: String!) {
  integrationResource(id: $id) {
    integration {
      settings {
        slackProjectPost {
          ...SlackPostSettings
        }
      }
    }
  }
}
query integrationResource_integration_settings_googleSheets($id: String!) {
  integrationResource(id: $id) {
    integration {
      settings {
        googleSheets {
          ...GoogleSheetsSettings
        }
      }
    }
  }
}
query integrationResource_integration_settings_sentry($id: String!) {
  integrationResource(id: $id) {
    integration {
      settings {
        sentry {
          ...SentrySettings
        }
      }
    }
  }
}
# The organization that the integration is associated with.
query integrationResource_integration_organization($id: String!) {
  integrationResource(id: $id) {
    integration {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query integrationResource_integration_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query integrationResource_integration_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integrationResource_integration_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integrationResource_integration_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integrationResource_integration_organization_subscription($id: String!) {
  integrationResource(id: $id) {
    integration {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# The creator of the subscription.
query integrationResource_integration_organization_subscription_creator($id: String!) {
  integrationResource(id: $id) {
    integration {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query integrationResource_integration_organization_subscription_creator_settings($id: String!) {
  integrationResource(id: $id) {
    integration {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query integrationResource_integration_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query integrationResource_integration_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query integrationResource_integration_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The team that the integration is associated with.
query integrationResource_integration_team($id: String!) {
  integrationResource(id: $id) {
    integration {
      team {
        ...Team
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query integrationResource_integration_team_draftWorkflowState($id: String!) {
  integrationResource(id: $id) {
    integration {
      team {
        draftWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_integration_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        draftWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query integrationResource_integration_team_startWorkflowState($id: String!) {
  integrationResource(id: $id) {
    integration {
      team {
        startWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_integration_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        startWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query integrationResource_integration_team_reviewWorkflowState($id: String!) {
  integrationResource(id: $id) {
    integration {
      team {
        reviewWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_integration_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        reviewWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query integrationResource_integration_team_mergeWorkflowState($id: String!) {
  integrationResource(id: $id) {
    integration {
      team {
        mergeWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_integration_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        mergeWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query integrationResource_integration_team_markedAsDuplicateWorkflowState($id: String!) {
  integrationResource(id: $id) {
    integration {
      team {
        markedAsDuplicateWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_integration_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        markedAsDuplicateWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query integrationResource_integration_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query integrationResource_integration_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        cycles(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Cycle
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query integrationResource_integration_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        memberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query integrationResource_integration_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query integrationResource_integration_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        states(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...WorkflowState
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query integrationResource_integration_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        templates(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Template
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query integrationResource_integration_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        labels(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueLabel
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query integrationResource_integration_team_organization($id: String!) {
  integrationResource(id: $id) {
    integration {
      team {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query integrationResource_integration_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query integrationResource_integration_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integrationResource_integration_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integrationResource_integration_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integrationResource_integration_team_organization_subscription($id: String!) {
  integrationResource(id: $id) {
    integration {
      team {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query integrationResource_integration_team_organization_subscription_creator($id: String!) {
  integrationResource(id: $id) {
    integration {
      team {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query integrationResource_integration_team_organization_subscription_creator_settings($id: String!) {
  integrationResource(id: $id) {
    integration {
      team {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query integrationResource_integration_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query integrationResource_integration_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query integrationResource_integration_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query integrationResource_integration_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      team {
        webhooks(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Webhook
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The user that added the integration.
query integrationResource_integration_creator($id: String!) {
  integrationResource(id: $id) {
    integration {
      creator {
        ...User
      }
    }
  }
}
# The settings of the user.
query integrationResource_integration_creator_settings($id: String!) {
  integrationResource(id: $id) {
    integration {
      creator {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query integrationResource_integration_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      creator {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query integrationResource_integration_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      creator {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query integrationResource_integration_creator_organization($id: String!) {
  integrationResource(id: $id) {
    integration {
      creator {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query integrationResource_integration_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      creator {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query integrationResource_integration_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      creator {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integrationResource_integration_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      creator {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integrationResource_integration_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      creator {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integrationResource_integration_creator_organization_subscription($id: String!) {
  integrationResource(id: $id) {
    integration {
      creator {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query integrationResource_integration_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    integration {
      creator {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The issue that the resource is associated with.
query integrationResource_issue($id: String!) {
  integrationResource(id: $id) {
    issue {
      ...Issue
    }
  }
}
# The team that the issue is associated with.
query integrationResource_issue_team($id: String!) {
  integrationResource(id: $id) {
    issue {
      team {
        ...Team
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query integrationResource_issue_team_draftWorkflowState($id: String!) {
  integrationResource(id: $id) {
    issue {
      team {
        draftWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_issue_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        draftWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query integrationResource_issue_team_startWorkflowState($id: String!) {
  integrationResource(id: $id) {
    issue {
      team {
        startWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_issue_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        startWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query integrationResource_issue_team_reviewWorkflowState($id: String!) {
  integrationResource(id: $id) {
    issue {
      team {
        reviewWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_issue_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        reviewWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query integrationResource_issue_team_mergeWorkflowState($id: String!) {
  integrationResource(id: $id) {
    issue {
      team {
        mergeWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_issue_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        mergeWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query integrationResource_issue_team_markedAsDuplicateWorkflowState($id: String!) {
  integrationResource(id: $id) {
    issue {
      team {
        markedAsDuplicateWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_issue_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        markedAsDuplicateWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query integrationResource_issue_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query integrationResource_issue_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        cycles(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Cycle
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query integrationResource_issue_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        memberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query integrationResource_issue_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query integrationResource_issue_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        states(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...WorkflowState
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query integrationResource_issue_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        templates(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Template
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query integrationResource_issue_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        labels(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueLabel
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query integrationResource_issue_team_organization($id: String!) {
  integrationResource(id: $id) {
    issue {
      team {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query integrationResource_issue_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query integrationResource_issue_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integrationResource_issue_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integrationResource_issue_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integrationResource_issue_team_organization_subscription($id: String!) {
  integrationResource(id: $id) {
    issue {
      team {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query integrationResource_issue_team_organization_subscription_creator($id: String!) {
  integrationResource(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query integrationResource_issue_team_organization_subscription_creator_settings($id: String!) {
  integrationResource(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query integrationResource_issue_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query integrationResource_issue_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query integrationResource_issue_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query integrationResource_issue_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      team {
        webhooks(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Webhook
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The cycle that the issue is associated with.
query integrationResource_issue_cycle($id: String!) {
  integrationResource(id: $id) {
    issue {
      cycle {
        ...Cycle
      }
    }
  }
}
# The team that the cycle is associated with.
query integrationResource_issue_cycle_team($id: String!) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          ...Team
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query integrationResource_issue_cycle_team_draftWorkflowState($id: String!) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          draftWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_issue_cycle_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          draftWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query integrationResource_issue_cycle_team_startWorkflowState($id: String!) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          startWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_issue_cycle_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          startWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query integrationResource_issue_cycle_team_reviewWorkflowState($id: String!) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          reviewWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_issue_cycle_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          reviewWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query integrationResource_issue_cycle_team_mergeWorkflowState($id: String!) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          mergeWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_issue_cycle_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          mergeWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query integrationResource_issue_cycle_team_markedAsDuplicateWorkflowState($id: String!) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          markedAsDuplicateWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_issue_cycle_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          markedAsDuplicateWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query integrationResource_issue_cycle_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query integrationResource_issue_cycle_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          cycles(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Cycle
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query integrationResource_issue_cycle_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          memberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query integrationResource_issue_cycle_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query integrationResource_issue_cycle_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          states(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...WorkflowState
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query integrationResource_issue_cycle_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          templates(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Template
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query integrationResource_issue_cycle_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          labels(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...IssueLabel
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query integrationResource_issue_cycle_team_organization($id: String!) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query integrationResource_issue_cycle_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query integrationResource_issue_cycle_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integrationResource_issue_cycle_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integrationResource_issue_cycle_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integrationResource_issue_cycle_team_organization_subscription($id: String!) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query integrationResource_issue_cycle_team_organization_subscription_creator($id: String!) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query integrationResource_issue_cycle_team_organization_subscription_creator_settings($id: String!) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query integrationResource_issue_cycle_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query integrationResource_issue_cycle_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query integrationResource_issue_cycle_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query integrationResource_issue_cycle_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        team {
          webhooks(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Webhook
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the cycle.
query integrationResource_issue_cycle_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues that weren't completed when the cycle was closed.
query integrationResource_issue_cycle_uncompletedIssuesUponClose(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      cycle {
        uncompletedIssuesUponClose(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state that the issue is associated with.
query integrationResource_issue_state($id: String!) {
  integrationResource(id: $id) {
    issue {
      state {
        ...WorkflowState
      }
    }
  }
}
# The team to which this state belongs to.
query integrationResource_issue_state_team($id: String!) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          ...Team
        }
      }
    }
  }
}
# Issues associated with the team.
query integrationResource_issue_state_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query integrationResource_issue_state_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          cycles(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Cycle
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query integrationResource_issue_state_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          memberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query integrationResource_issue_state_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query integrationResource_issue_state_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          states(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...WorkflowState
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query integrationResource_issue_state_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          templates(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Template
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query integrationResource_issue_state_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          labels(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...IssueLabel
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query integrationResource_issue_state_team_organization($id: String!) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query integrationResource_issue_state_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query integrationResource_issue_state_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integrationResource_issue_state_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integrationResource_issue_state_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integrationResource_issue_state_team_organization_subscription($id: String!) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query integrationResource_issue_state_team_organization_subscription_creator($id: String!) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query integrationResource_issue_state_team_organization_subscription_creator_settings($id: String!) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query integrationResource_issue_state_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query integrationResource_issue_state_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query integrationResource_issue_state_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query integrationResource_issue_state_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        team {
          webhooks(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Webhook
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query integrationResource_issue_state_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      state {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The user to whom the issue is assigned to.
query integrationResource_issue_assignee($id: String!) {
  integrationResource(id: $id) {
    issue {
      assignee {
        ...User
      }
    }
  }
}
# The settings of the user.
query integrationResource_issue_assignee_settings($id: String!) {
  integrationResource(id: $id) {
    issue {
      assignee {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query integrationResource_issue_assignee_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      assignee {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query integrationResource_issue_assignee_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      assignee {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query integrationResource_issue_assignee_organization($id: String!) {
  integrationResource(id: $id) {
    issue {
      assignee {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query integrationResource_issue_assignee_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      assignee {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query integrationResource_issue_assignee_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      assignee {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integrationResource_issue_assignee_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      assignee {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integrationResource_issue_assignee_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      assignee {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integrationResource_issue_assignee_organization_subscription($id: String!) {
  integrationResource(id: $id) {
    issue {
      assignee {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query integrationResource_issue_assignee_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      assignee {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The project that the issue is associated with.
query integrationResource_issue_project($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        ...Project
      }
    }
  }
}
# The user who created the project.
query integrationResource_issue_project_creator($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        creator {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query integrationResource_issue_project_creator_settings($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        creator {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query integrationResource_issue_project_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        creator {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query integrationResource_issue_project_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        creator {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query integrationResource_issue_project_creator_organization($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        creator {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query integrationResource_issue_project_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        creator {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query integrationResource_issue_project_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        creator {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integrationResource_issue_project_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        creator {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integrationResource_issue_project_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        creator {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integrationResource_issue_project_creator_organization_subscription($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        creator {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query integrationResource_issue_project_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        creator {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The project lead.
query integrationResource_issue_project_lead($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        lead {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query integrationResource_issue_project_lead_settings($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        lead {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query integrationResource_issue_project_lead_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        lead {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query integrationResource_issue_project_lead_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        lead {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query integrationResource_issue_project_lead_organization($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        lead {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query integrationResource_issue_project_lead_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        lead {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query integrationResource_issue_project_lead_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        lead {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integrationResource_issue_project_lead_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        lead {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integrationResource_issue_project_lead_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        lead {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integrationResource_issue_project_lead_organization_subscription($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        lead {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query integrationResource_issue_project_lead_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        lead {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The milestone that this project is associated with.
query integrationResource_issue_project_milestone($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        milestone {
          ...Milestone
        }
      }
    }
  }
}
# The organization that the milestone belongs to.
query integrationResource_issue_project_milestone_organization($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        milestone {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query integrationResource_issue_project_milestone_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        milestone {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query integrationResource_issue_project_milestone_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        milestone {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integrationResource_issue_project_milestone_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        milestone {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integrationResource_issue_project_milestone_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        milestone {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integrationResource_issue_project_milestone_organization_subscription($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query integrationResource_issue_project_milestone_organization_subscription_creator($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query integrationResource_issue_project_milestone_organization_subscription_creator_settings($id: String!) {
  integrationResource(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query integrationResource_issue_project_milestone_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query integrationResource_issue_project_milestone_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query integrationResource_issue_project_milestone_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Projects associated with the milestone.
query integrationResource_issue_project_milestone_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        milestone {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with this project.
query integrationResource_issue_project_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Users that are members of the project.
query integrationResource_issue_project_members(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        members(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the project.
query integrationResource_issue_project_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Links associated with the project.
query integrationResource_issue_project_links(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      project {
        links(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...ProjectLink
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Users who are subscribed to the issue.
query integrationResource_issue_subscribers(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      subscribers(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The user who created the issue.
query integrationResource_issue_creator($id: String!) {
  integrationResource(id: $id) {
    issue {
      creator {
        ...User
      }
    }
  }
}
# The settings of the user.
query integrationResource_issue_creator_settings($id: String!) {
  integrationResource(id: $id) {
    issue {
      creator {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query integrationResource_issue_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      creator {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query integrationResource_issue_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      creator {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query integrationResource_issue_creator_organization($id: String!) {
  integrationResource(id: $id) {
    issue {
      creator {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query integrationResource_issue_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      creator {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query integrationResource_issue_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      creator {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query integrationResource_issue_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      creator {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query integrationResource_issue_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      creator {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query integrationResource_issue_creator_organization_subscription($id: String!) {
  integrationResource(id: $id) {
    issue {
      creator {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query integrationResource_issue_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      creator {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Children of the issue.
query integrationResource_issue_children(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      children(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Comments associated with the issue.
query integrationResource_issue_comments(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      comments(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Comment
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# History entries associated with the issue.
query integrationResource_issue_history(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      history(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueHistory
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with this issue.
query integrationResource_issue_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integration resources for this issue.
query integrationResource_issue_integrationResources(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      integrationResources(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IntegrationResource
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Relations associated with this issue.
query integrationResource_issue_relations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      relations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueRelation
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Inverse relations associated with this issue.
query integrationResource_issue_inverseRelations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResource(id: $id) {
    issue {
      inverseRelations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueRelation
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Pull request information for GitHub pull requests and GitLab merge requests.
query integrationResource_pullRequest($id: String!) {
  integrationResource(id: $id) {
    pullRequest {
      ...PullRequestPayload
    }
  }
}

# All integrations resources (e.g. linked GitHub pull requests for issues).
query integrationResources(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResources(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...IntegrationResource
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# Retrieves information for the public invite page.
query inviteInfo($teamHash: String, $userHash: String!) {
  inviteInfo(teamHash: $teamHash, userHash: $userHash) {
    ...InvitePagePayload
  }
}
# Invite data.
query inviteInfo_inviteData($teamHash: String, $userHash: String!) {
  inviteInfo(teamHash: $teamHash, userHash: $userHash) {
    inviteData {
      ...InviteData
    }
  }
}

# One specific label.
query issueLabel($id: String!) {
  issueLabel(id: $id) {
    ...IssueLabel
  }
}
# The team to which the label belongs to.
query issueLabel_team($id: String!) {
  issueLabel(id: $id) {
    team {
      ...Team
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query issueLabel_team_draftWorkflowState($id: String!) {
  issueLabel(id: $id) {
    team {
      draftWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query issueLabel_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      draftWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query issueLabel_team_startWorkflowState($id: String!) {
  issueLabel(id: $id) {
    team {
      startWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query issueLabel_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      startWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query issueLabel_team_reviewWorkflowState($id: String!) {
  issueLabel(id: $id) {
    team {
      reviewWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query issueLabel_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      reviewWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query issueLabel_team_mergeWorkflowState($id: String!) {
  issueLabel(id: $id) {
    team {
      mergeWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query issueLabel_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      mergeWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query issueLabel_team_markedAsDuplicateWorkflowState($id: String!) {
  issueLabel(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query issueLabel_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query issueLabel_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Cycles associated with the team.
query issueLabel_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      cycles(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Cycle
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Memberships associated with the team.
query issueLabel_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      memberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Projects associated with the team.
query issueLabel_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      projects(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Project
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query issueLabel_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      states(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...WorkflowState
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Templates associated with the team.
query issueLabel_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      templates(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Template
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with the team.
query issueLabel_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization that the team is associated with.
query issueLabel_team_organization($id: String!) {
  issueLabel(id: $id) {
    team {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query issueLabel_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueLabel_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueLabel_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueLabel_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueLabel_team_organization_subscription($id: String!) {
  issueLabel(id: $id) {
    team {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# The creator of the subscription.
query issueLabel_team_organization_subscription_creator($id: String!) {
  issueLabel(id: $id) {
    team {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query issueLabel_team_organization_subscription_creator_settings($id: String!) {
  issueLabel(id: $id) {
    team {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueLabel_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueLabel_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueLabel_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query issueLabel_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    team {
      webhooks(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Webhook
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The user who created the label.
query issueLabel_creator($id: String!) {
  issueLabel(id: $id) {
    creator {
      ...User
    }
  }
}
# The settings of the user.
query issueLabel_creator_settings($id: String!) {
  issueLabel(id: $id) {
    creator {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query issueLabel_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    creator {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query issueLabel_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    creator {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query issueLabel_creator_organization($id: String!) {
  issueLabel(id: $id) {
    creator {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query issueLabel_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    creator {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueLabel_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    creator {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueLabel_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    creator {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueLabel_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    creator {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueLabel_creator_organization_subscription($id: String!) {
  issueLabel(id: $id) {
    creator {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueLabel_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    creator {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues associated with the label.
query issueLabel_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabel(id: $id) {
    issues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Issue
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}

# All labels.
query issueLabels(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabels(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...IssueLabel
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific issue relation.
query issueRelation($id: String!) {
  issueRelation(id: $id) {
    ...IssueRelation
  }
}
# The issue whose relationship is being described.
query issueRelation_issue($id: String!) {
  issueRelation(id: $id) {
    issue {
      ...Issue
    }
  }
}
# The team that the issue is associated with.
query issueRelation_issue_team($id: String!) {
  issueRelation(id: $id) {
    issue {
      team {
        ...Team
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query issueRelation_issue_team_draftWorkflowState($id: String!) {
  issueRelation(id: $id) {
    issue {
      team {
        draftWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_issue_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        draftWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query issueRelation_issue_team_startWorkflowState($id: String!) {
  issueRelation(id: $id) {
    issue {
      team {
        startWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_issue_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        startWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query issueRelation_issue_team_reviewWorkflowState($id: String!) {
  issueRelation(id: $id) {
    issue {
      team {
        reviewWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_issue_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        reviewWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query issueRelation_issue_team_mergeWorkflowState($id: String!) {
  issueRelation(id: $id) {
    issue {
      team {
        mergeWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_issue_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        mergeWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query issueRelation_issue_team_markedAsDuplicateWorkflowState($id: String!) {
  issueRelation(id: $id) {
    issue {
      team {
        markedAsDuplicateWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_issue_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        markedAsDuplicateWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query issueRelation_issue_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query issueRelation_issue_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        cycles(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Cycle
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query issueRelation_issue_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        memberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query issueRelation_issue_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query issueRelation_issue_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        states(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...WorkflowState
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query issueRelation_issue_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        templates(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Template
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query issueRelation_issue_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        labels(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueLabel
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query issueRelation_issue_team_organization($id: String!) {
  issueRelation(id: $id) {
    issue {
      team {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_issue_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_issue_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_issue_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_issue_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_issue_team_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    issue {
      team {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query issueRelation_issue_team_organization_subscription_creator($id: String!) {
  issueRelation(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query issueRelation_issue_team_organization_subscription_creator_settings($id: String!) {
  issueRelation(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_issue_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_issue_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_issue_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query issueRelation_issue_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      team {
        webhooks(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Webhook
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The cycle that the issue is associated with.
query issueRelation_issue_cycle($id: String!) {
  issueRelation(id: $id) {
    issue {
      cycle {
        ...Cycle
      }
    }
  }
}
# The team that the cycle is associated with.
query issueRelation_issue_cycle_team($id: String!) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          ...Team
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query issueRelation_issue_cycle_team_draftWorkflowState($id: String!) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          draftWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_issue_cycle_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          draftWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query issueRelation_issue_cycle_team_startWorkflowState($id: String!) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          startWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_issue_cycle_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          startWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query issueRelation_issue_cycle_team_reviewWorkflowState($id: String!) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          reviewWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_issue_cycle_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          reviewWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query issueRelation_issue_cycle_team_mergeWorkflowState($id: String!) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          mergeWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_issue_cycle_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          mergeWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query issueRelation_issue_cycle_team_markedAsDuplicateWorkflowState($id: String!) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          markedAsDuplicateWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_issue_cycle_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          markedAsDuplicateWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query issueRelation_issue_cycle_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query issueRelation_issue_cycle_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          cycles(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Cycle
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query issueRelation_issue_cycle_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          memberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query issueRelation_issue_cycle_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query issueRelation_issue_cycle_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          states(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...WorkflowState
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query issueRelation_issue_cycle_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          templates(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Template
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query issueRelation_issue_cycle_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          labels(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...IssueLabel
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query issueRelation_issue_cycle_team_organization($id: String!) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_issue_cycle_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_issue_cycle_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_issue_cycle_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_issue_cycle_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_issue_cycle_team_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query issueRelation_issue_cycle_team_organization_subscription_creator($id: String!) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query issueRelation_issue_cycle_team_organization_subscription_creator_settings($id: String!) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_issue_cycle_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_issue_cycle_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_issue_cycle_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query issueRelation_issue_cycle_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        team {
          webhooks(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Webhook
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the cycle.
query issueRelation_issue_cycle_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues that weren't completed when the cycle was closed.
query issueRelation_issue_cycle_uncompletedIssuesUponClose(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      cycle {
        uncompletedIssuesUponClose(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state that the issue is associated with.
query issueRelation_issue_state($id: String!) {
  issueRelation(id: $id) {
    issue {
      state {
        ...WorkflowState
      }
    }
  }
}
# The team to which this state belongs to.
query issueRelation_issue_state_team($id: String!) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          ...Team
        }
      }
    }
  }
}
# Issues associated with the team.
query issueRelation_issue_state_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query issueRelation_issue_state_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          cycles(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Cycle
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query issueRelation_issue_state_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          memberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query issueRelation_issue_state_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query issueRelation_issue_state_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          states(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...WorkflowState
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query issueRelation_issue_state_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          templates(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Template
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query issueRelation_issue_state_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          labels(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...IssueLabel
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query issueRelation_issue_state_team_organization($id: String!) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_issue_state_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_issue_state_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_issue_state_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_issue_state_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_issue_state_team_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query issueRelation_issue_state_team_organization_subscription_creator($id: String!) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query issueRelation_issue_state_team_organization_subscription_creator_settings($id: String!) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_issue_state_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_issue_state_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_issue_state_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query issueRelation_issue_state_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        team {
          webhooks(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Webhook
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_issue_state_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      state {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The user to whom the issue is assigned to.
query issueRelation_issue_assignee($id: String!) {
  issueRelation(id: $id) {
    issue {
      assignee {
        ...User
      }
    }
  }
}
# The settings of the user.
query issueRelation_issue_assignee_settings($id: String!) {
  issueRelation(id: $id) {
    issue {
      assignee {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_issue_assignee_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      assignee {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_issue_assignee_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      assignee {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query issueRelation_issue_assignee_organization($id: String!) {
  issueRelation(id: $id) {
    issue {
      assignee {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_issue_assignee_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      assignee {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_issue_assignee_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      assignee {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_issue_assignee_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      assignee {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_issue_assignee_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      assignee {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_issue_assignee_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    issue {
      assignee {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_issue_assignee_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      assignee {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The project that the issue is associated with.
query issueRelation_issue_project($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        ...Project
      }
    }
  }
}
# The user who created the project.
query issueRelation_issue_project_creator($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        creator {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query issueRelation_issue_project_creator_settings($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        creator {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_issue_project_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        creator {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_issue_project_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        creator {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query issueRelation_issue_project_creator_organization($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        creator {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_issue_project_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        creator {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_issue_project_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        creator {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_issue_project_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        creator {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_issue_project_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        creator {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_issue_project_creator_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        creator {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_issue_project_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        creator {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The project lead.
query issueRelation_issue_project_lead($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        lead {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query issueRelation_issue_project_lead_settings($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        lead {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_issue_project_lead_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        lead {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_issue_project_lead_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        lead {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query issueRelation_issue_project_lead_organization($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        lead {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_issue_project_lead_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        lead {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_issue_project_lead_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        lead {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_issue_project_lead_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        lead {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_issue_project_lead_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        lead {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_issue_project_lead_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        lead {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_issue_project_lead_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        lead {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The milestone that this project is associated with.
query issueRelation_issue_project_milestone($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        milestone {
          ...Milestone
        }
      }
    }
  }
}
# The organization that the milestone belongs to.
query issueRelation_issue_project_milestone_organization($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        milestone {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_issue_project_milestone_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        milestone {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_issue_project_milestone_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        milestone {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_issue_project_milestone_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        milestone {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_issue_project_milestone_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        milestone {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_issue_project_milestone_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query issueRelation_issue_project_milestone_organization_subscription_creator($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query issueRelation_issue_project_milestone_organization_subscription_creator_settings($id: String!) {
  issueRelation(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_issue_project_milestone_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_issue_project_milestone_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_issue_project_milestone_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Projects associated with the milestone.
query issueRelation_issue_project_milestone_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        milestone {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with this project.
query issueRelation_issue_project_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Users that are members of the project.
query issueRelation_issue_project_members(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        members(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the project.
query issueRelation_issue_project_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Links associated with the project.
query issueRelation_issue_project_links(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      project {
        links(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...ProjectLink
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Users who are subscribed to the issue.
query issueRelation_issue_subscribers(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      subscribers(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The user who created the issue.
query issueRelation_issue_creator($id: String!) {
  issueRelation(id: $id) {
    issue {
      creator {
        ...User
      }
    }
  }
}
# The settings of the user.
query issueRelation_issue_creator_settings($id: String!) {
  issueRelation(id: $id) {
    issue {
      creator {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_issue_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      creator {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_issue_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      creator {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query issueRelation_issue_creator_organization($id: String!) {
  issueRelation(id: $id) {
    issue {
      creator {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_issue_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      creator {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_issue_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      creator {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_issue_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      creator {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_issue_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      creator {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_issue_creator_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    issue {
      creator {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_issue_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      creator {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Children of the issue.
query issueRelation_issue_children(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      children(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Comments associated with the issue.
query issueRelation_issue_comments(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      comments(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Comment
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# History entries associated with the issue.
query issueRelation_issue_history(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      history(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueHistory
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with this issue.
query issueRelation_issue_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integration resources for this issue.
query issueRelation_issue_integrationResources(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      integrationResources(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IntegrationResource
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Relations associated with this issue.
query issueRelation_issue_relations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      relations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueRelation
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Inverse relations associated with this issue.
query issueRelation_issue_inverseRelations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    issue {
      inverseRelations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueRelation
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The related issue.
query issueRelation_relatedIssue($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      ...Issue
    }
  }
}
# The team that the issue is associated with.
query issueRelation_relatedIssue_team($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        ...Team
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query issueRelation_relatedIssue_team_draftWorkflowState($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        draftWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_relatedIssue_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        draftWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query issueRelation_relatedIssue_team_startWorkflowState($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        startWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_relatedIssue_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        startWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query issueRelation_relatedIssue_team_reviewWorkflowState($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        reviewWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_relatedIssue_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        reviewWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query issueRelation_relatedIssue_team_mergeWorkflowState($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        mergeWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_relatedIssue_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        mergeWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query issueRelation_relatedIssue_team_markedAsDuplicateWorkflowState($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        markedAsDuplicateWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_relatedIssue_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        markedAsDuplicateWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query issueRelation_relatedIssue_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query issueRelation_relatedIssue_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        cycles(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Cycle
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query issueRelation_relatedIssue_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        memberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query issueRelation_relatedIssue_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query issueRelation_relatedIssue_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        states(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...WorkflowState
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query issueRelation_relatedIssue_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        templates(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Template
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query issueRelation_relatedIssue_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        labels(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueLabel
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query issueRelation_relatedIssue_team_organization($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_relatedIssue_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_relatedIssue_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_relatedIssue_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_relatedIssue_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_relatedIssue_team_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query issueRelation_relatedIssue_team_organization_subscription_creator($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query issueRelation_relatedIssue_team_organization_subscription_creator_settings($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_relatedIssue_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_relatedIssue_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_relatedIssue_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query issueRelation_relatedIssue_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      team {
        webhooks(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Webhook
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The cycle that the issue is associated with.
query issueRelation_relatedIssue_cycle($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        ...Cycle
      }
    }
  }
}
# The team that the cycle is associated with.
query issueRelation_relatedIssue_cycle_team($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          ...Team
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query issueRelation_relatedIssue_cycle_team_draftWorkflowState($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          draftWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_relatedIssue_cycle_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          draftWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query issueRelation_relatedIssue_cycle_team_startWorkflowState($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          startWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_relatedIssue_cycle_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          startWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query issueRelation_relatedIssue_cycle_team_reviewWorkflowState($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          reviewWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_relatedIssue_cycle_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          reviewWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query issueRelation_relatedIssue_cycle_team_mergeWorkflowState($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          mergeWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_relatedIssue_cycle_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          mergeWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query issueRelation_relatedIssue_cycle_team_markedAsDuplicateWorkflowState($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          markedAsDuplicateWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_relatedIssue_cycle_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          markedAsDuplicateWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query issueRelation_relatedIssue_cycle_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query issueRelation_relatedIssue_cycle_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          cycles(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Cycle
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query issueRelation_relatedIssue_cycle_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          memberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query issueRelation_relatedIssue_cycle_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query issueRelation_relatedIssue_cycle_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          states(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...WorkflowState
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query issueRelation_relatedIssue_cycle_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          templates(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Template
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query issueRelation_relatedIssue_cycle_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          labels(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...IssueLabel
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query issueRelation_relatedIssue_cycle_team_organization($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_relatedIssue_cycle_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_relatedIssue_cycle_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_relatedIssue_cycle_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_relatedIssue_cycle_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_relatedIssue_cycle_team_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query issueRelation_relatedIssue_cycle_team_organization_subscription_creator($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query issueRelation_relatedIssue_cycle_team_organization_subscription_creator_settings($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_relatedIssue_cycle_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_relatedIssue_cycle_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_relatedIssue_cycle_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query issueRelation_relatedIssue_cycle_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        team {
          webhooks(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Webhook
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the cycle.
query issueRelation_relatedIssue_cycle_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues that weren't completed when the cycle was closed.
query issueRelation_relatedIssue_cycle_uncompletedIssuesUponClose(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      cycle {
        uncompletedIssuesUponClose(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state that the issue is associated with.
query issueRelation_relatedIssue_state($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        ...WorkflowState
      }
    }
  }
}
# The team to which this state belongs to.
query issueRelation_relatedIssue_state_team($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          ...Team
        }
      }
    }
  }
}
# Issues associated with the team.
query issueRelation_relatedIssue_state_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query issueRelation_relatedIssue_state_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          cycles(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Cycle
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query issueRelation_relatedIssue_state_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          memberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query issueRelation_relatedIssue_state_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query issueRelation_relatedIssue_state_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          states(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...WorkflowState
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query issueRelation_relatedIssue_state_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          templates(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Template
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query issueRelation_relatedIssue_state_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          labels(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...IssueLabel
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query issueRelation_relatedIssue_state_team_organization($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_relatedIssue_state_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_relatedIssue_state_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_relatedIssue_state_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_relatedIssue_state_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_relatedIssue_state_team_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query issueRelation_relatedIssue_state_team_organization_subscription_creator($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query issueRelation_relatedIssue_state_team_organization_subscription_creator_settings($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_relatedIssue_state_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_relatedIssue_state_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_relatedIssue_state_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query issueRelation_relatedIssue_state_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        team {
          webhooks(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Webhook
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query issueRelation_relatedIssue_state_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      state {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The user to whom the issue is assigned to.
query issueRelation_relatedIssue_assignee($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      assignee {
        ...User
      }
    }
  }
}
# The settings of the user.
query issueRelation_relatedIssue_assignee_settings($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      assignee {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_relatedIssue_assignee_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      assignee {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_relatedIssue_assignee_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      assignee {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query issueRelation_relatedIssue_assignee_organization($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      assignee {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_relatedIssue_assignee_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      assignee {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_relatedIssue_assignee_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      assignee {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_relatedIssue_assignee_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      assignee {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_relatedIssue_assignee_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      assignee {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_relatedIssue_assignee_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      assignee {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_relatedIssue_assignee_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      assignee {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The project that the issue is associated with.
query issueRelation_relatedIssue_project($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        ...Project
      }
    }
  }
}
# The user who created the project.
query issueRelation_relatedIssue_project_creator($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        creator {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query issueRelation_relatedIssue_project_creator_settings($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        creator {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_relatedIssue_project_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        creator {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_relatedIssue_project_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        creator {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query issueRelation_relatedIssue_project_creator_organization($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        creator {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_relatedIssue_project_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        creator {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_relatedIssue_project_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        creator {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_relatedIssue_project_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        creator {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_relatedIssue_project_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        creator {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_relatedIssue_project_creator_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        creator {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_relatedIssue_project_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        creator {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The project lead.
query issueRelation_relatedIssue_project_lead($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        lead {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query issueRelation_relatedIssue_project_lead_settings($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        lead {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_relatedIssue_project_lead_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        lead {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_relatedIssue_project_lead_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        lead {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query issueRelation_relatedIssue_project_lead_organization($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        lead {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_relatedIssue_project_lead_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        lead {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_relatedIssue_project_lead_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        lead {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_relatedIssue_project_lead_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        lead {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_relatedIssue_project_lead_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        lead {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_relatedIssue_project_lead_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        lead {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_relatedIssue_project_lead_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        lead {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The milestone that this project is associated with.
query issueRelation_relatedIssue_project_milestone($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        milestone {
          ...Milestone
        }
      }
    }
  }
}
# The organization that the milestone belongs to.
query issueRelation_relatedIssue_project_milestone_organization($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        milestone {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_relatedIssue_project_milestone_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        milestone {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_relatedIssue_project_milestone_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        milestone {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_relatedIssue_project_milestone_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        milestone {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_relatedIssue_project_milestone_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        milestone {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_relatedIssue_project_milestone_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        milestone {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query issueRelation_relatedIssue_project_milestone_organization_subscription_creator($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query issueRelation_relatedIssue_project_milestone_organization_subscription_creator_settings($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_relatedIssue_project_milestone_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_relatedIssue_project_milestone_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_relatedIssue_project_milestone_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        milestone {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Projects associated with the milestone.
query issueRelation_relatedIssue_project_milestone_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        milestone {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with this project.
query issueRelation_relatedIssue_project_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Users that are members of the project.
query issueRelation_relatedIssue_project_members(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        members(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the project.
query issueRelation_relatedIssue_project_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Links associated with the project.
query issueRelation_relatedIssue_project_links(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      project {
        links(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...ProjectLink
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Users who are subscribed to the issue.
query issueRelation_relatedIssue_subscribers(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      subscribers(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The user who created the issue.
query issueRelation_relatedIssue_creator($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      creator {
        ...User
      }
    }
  }
}
# The settings of the user.
query issueRelation_relatedIssue_creator_settings($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      creator {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query issueRelation_relatedIssue_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      creator {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issueRelation_relatedIssue_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      creator {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query issueRelation_relatedIssue_creator_organization($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      creator {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query issueRelation_relatedIssue_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      creator {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issueRelation_relatedIssue_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      creator {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issueRelation_relatedIssue_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      creator {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issueRelation_relatedIssue_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      creator {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issueRelation_relatedIssue_creator_organization_subscription($id: String!) {
  issueRelation(id: $id) {
    relatedIssue {
      creator {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issueRelation_relatedIssue_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      creator {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Children of the issue.
query issueRelation_relatedIssue_children(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      children(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Comments associated with the issue.
query issueRelation_relatedIssue_comments(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      comments(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Comment
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# History entries associated with the issue.
query issueRelation_relatedIssue_history(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      history(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueHistory
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with this issue.
query issueRelation_relatedIssue_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integration resources for this issue.
query issueRelation_relatedIssue_integrationResources(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      integrationResources(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IntegrationResource
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Relations associated with this issue.
query issueRelation_relatedIssue_relations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      relations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueRelation
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Inverse relations associated with this issue.
query issueRelation_relatedIssue_inverseRelations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelation(id: $id) {
    relatedIssue {
      inverseRelations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueRelation
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}

query issueRelations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelations(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...IssueRelation
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific issue.
query issue($id: String!) {
  issue(id: $id) {
    ...Issue
  }
}
# The team that the issue is associated with.
query issue_team($id: String!) {
  issue(id: $id) {
    team {
      ...Team
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query issue_team_draftWorkflowState($id: String!) {
  issue(id: $id) {
    team {
      draftWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query issue_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      draftWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query issue_team_startWorkflowState($id: String!) {
  issue(id: $id) {
    team {
      startWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query issue_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      startWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query issue_team_reviewWorkflowState($id: String!) {
  issue(id: $id) {
    team {
      reviewWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query issue_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      reviewWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query issue_team_mergeWorkflowState($id: String!) {
  issue(id: $id) {
    team {
      mergeWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query issue_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      mergeWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query issue_team_markedAsDuplicateWorkflowState($id: String!) {
  issue(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query issue_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query issue_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Cycles associated with the team.
query issue_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      cycles(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Cycle
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Memberships associated with the team.
query issue_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      memberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Projects associated with the team.
query issue_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      projects(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Project
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query issue_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      states(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...WorkflowState
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Templates associated with the team.
query issue_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      templates(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Template
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with the team.
query issue_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization that the team is associated with.
query issue_team_organization($id: String!) {
  issue(id: $id) {
    team {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query issue_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issue_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issue_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issue_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issue_team_organization_subscription($id: String!) {
  issue(id: $id) {
    team {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# The creator of the subscription.
query issue_team_organization_subscription_creator($id: String!) {
  issue(id: $id) {
    team {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query issue_team_organization_subscription_creator_settings($id: String!) {
  issue(id: $id) {
    team {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issue_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issue_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issue_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query issue_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    team {
      webhooks(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Webhook
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The cycle that the issue is associated with.
query issue_cycle($id: String!) {
  issue(id: $id) {
    cycle {
      ...Cycle
    }
  }
}
# The team that the cycle is associated with.
query issue_cycle_team($id: String!) {
  issue(id: $id) {
    cycle {
      team {
        ...Team
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query issue_cycle_team_draftWorkflowState($id: String!) {
  issue(id: $id) {
    cycle {
      team {
        draftWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issue_cycle_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        draftWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query issue_cycle_team_startWorkflowState($id: String!) {
  issue(id: $id) {
    cycle {
      team {
        startWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issue_cycle_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        startWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query issue_cycle_team_reviewWorkflowState($id: String!) {
  issue(id: $id) {
    cycle {
      team {
        reviewWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issue_cycle_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        reviewWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query issue_cycle_team_mergeWorkflowState($id: String!) {
  issue(id: $id) {
    cycle {
      team {
        mergeWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issue_cycle_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        mergeWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query issue_cycle_team_markedAsDuplicateWorkflowState($id: String!) {
  issue(id: $id) {
    cycle {
      team {
        markedAsDuplicateWorkflowState {
          ...WorkflowState
        }
      }
    }
  }
}
# Issues belonging in this state.
query issue_cycle_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        markedAsDuplicateWorkflowState {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query issue_cycle_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query issue_cycle_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        cycles(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Cycle
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query issue_cycle_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        memberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query issue_cycle_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query issue_cycle_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        states(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...WorkflowState
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query issue_cycle_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        templates(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Template
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query issue_cycle_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        labels(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueLabel
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query issue_cycle_team_organization($id: String!) {
  issue(id: $id) {
    cycle {
      team {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query issue_cycle_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issue_cycle_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issue_cycle_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issue_cycle_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issue_cycle_team_organization_subscription($id: String!) {
  issue(id: $id) {
    cycle {
      team {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query issue_cycle_team_organization_subscription_creator($id: String!) {
  issue(id: $id) {
    cycle {
      team {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query issue_cycle_team_organization_subscription_creator_settings($id: String!) {
  issue(id: $id) {
    cycle {
      team {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issue_cycle_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issue_cycle_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issue_cycle_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query issue_cycle_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      team {
        webhooks(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Webhook
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the cycle.
query issue_cycle_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues that weren't completed when the cycle was closed.
query issue_cycle_uncompletedIssuesUponClose(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    cycle {
      uncompletedIssuesUponClose(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The workflow state that the issue is associated with.
query issue_state($id: String!) {
  issue(id: $id) {
    state {
      ...WorkflowState
    }
  }
}
# The team to which this state belongs to.
query issue_state_team($id: String!) {
  issue(id: $id) {
    state {
      team {
        ...Team
      }
    }
  }
}
# Issues associated with the team.
query issue_state_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query issue_state_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        cycles(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Cycle
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query issue_state_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        memberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query issue_state_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query issue_state_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        states(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...WorkflowState
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query issue_state_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        templates(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Template
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query issue_state_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        labels(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueLabel
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query issue_state_team_organization($id: String!) {
  issue(id: $id) {
    state {
      team {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query issue_state_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issue_state_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issue_state_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issue_state_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issue_state_team_organization_subscription($id: String!) {
  issue(id: $id) {
    state {
      team {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query issue_state_team_organization_subscription_creator($id: String!) {
  issue(id: $id) {
    state {
      team {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query issue_state_team_organization_subscription_creator_settings($id: String!) {
  issue(id: $id) {
    state {
      team {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issue_state_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issue_state_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issue_state_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query issue_state_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      team {
        webhooks(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Webhook
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query issue_state_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    state {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The user to whom the issue is assigned to.
query issue_assignee($id: String!) {
  issue(id: $id) {
    assignee {
      ...User
    }
  }
}
# The settings of the user.
query issue_assignee_settings($id: String!) {
  issue(id: $id) {
    assignee {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query issue_assignee_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    assignee {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query issue_assignee_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    assignee {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query issue_assignee_organization($id: String!) {
  issue(id: $id) {
    assignee {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query issue_assignee_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    assignee {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issue_assignee_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    assignee {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issue_assignee_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    assignee {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issue_assignee_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    assignee {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issue_assignee_organization_subscription($id: String!) {
  issue(id: $id) {
    assignee {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query issue_assignee_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    assignee {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The project that the issue is associated with.
query issue_project($id: String!) {
  issue(id: $id) {
    project {
      ...Project
    }
  }
}
# The user who created the project.
query issue_project_creator($id: String!) {
  issue(id: $id) {
    project {
      creator {
        ...User
      }
    }
  }
}
# The settings of the user.
query issue_project_creator_settings($id: String!) {
  issue(id: $id) {
    project {
      creator {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query issue_project_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      creator {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issue_project_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      creator {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query issue_project_creator_organization($id: String!) {
  issue(id: $id) {
    project {
      creator {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query issue_project_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      creator {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issue_project_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      creator {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issue_project_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      creator {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issue_project_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      creator {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issue_project_creator_organization_subscription($id: String!) {
  issue(id: $id) {
    project {
      creator {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issue_project_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      creator {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The project lead.
query issue_project_lead($id: String!) {
  issue(id: $id) {
    project {
      lead {
        ...User
      }
    }
  }
}
# The settings of the user.
query issue_project_lead_settings($id: String!) {
  issue(id: $id) {
    project {
      lead {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query issue_project_lead_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      lead {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issue_project_lead_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      lead {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query issue_project_lead_organization($id: String!) {
  issue(id: $id) {
    project {
      lead {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query issue_project_lead_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      lead {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issue_project_lead_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      lead {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issue_project_lead_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      lead {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issue_project_lead_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      lead {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issue_project_lead_organization_subscription($id: String!) {
  issue(id: $id) {
    project {
      lead {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issue_project_lead_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      lead {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The milestone that this project is associated with.
query issue_project_milestone($id: String!) {
  issue(id: $id) {
    project {
      milestone {
        ...Milestone
      }
    }
  }
}
# The organization that the milestone belongs to.
query issue_project_milestone_organization($id: String!) {
  issue(id: $id) {
    project {
      milestone {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query issue_project_milestone_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      milestone {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issue_project_milestone_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      milestone {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issue_project_milestone_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      milestone {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issue_project_milestone_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      milestone {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issue_project_milestone_organization_subscription($id: String!) {
  issue(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query issue_project_milestone_organization_subscription_creator($id: String!) {
  issue(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query issue_project_milestone_organization_subscription_creator_settings($id: String!) {
  issue(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query issue_project_milestone_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query issue_project_milestone_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query issue_project_milestone_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Projects associated with the milestone.
query issue_project_milestone_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      milestone {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with this project.
query issue_project_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      teams(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Team
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Users that are members of the project.
query issue_project_members(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      members(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues associated with the project.
query issue_project_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Links associated with the project.
query issue_project_links(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    project {
      links(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...ProjectLink
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Users who are subscribed to the issue.
query issue_subscribers(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    subscribers(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...User
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# The user who created the issue.
query issue_creator($id: String!) {
  issue(id: $id) {
    creator {
      ...User
    }
  }
}
# The settings of the user.
query issue_creator_settings($id: String!) {
  issue(id: $id) {
    creator {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query issue_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    creator {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query issue_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    creator {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query issue_creator_organization($id: String!) {
  issue(id: $id) {
    creator {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query issue_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    creator {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query issue_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    creator {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query issue_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    creator {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query issue_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    creator {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query issue_creator_organization_subscription($id: String!) {
  issue(id: $id) {
    creator {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query issue_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    creator {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Children of the issue.
query issue_children(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    children(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Issue
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Comments associated with the issue.
query issue_comments(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    comments(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Comment
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# History entries associated with the issue.
query issue_history(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    history(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...IssueHistory
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Labels associated with this issue.
query issue_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    labels(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...IssueLabel
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Integration resources for this issue.
query issue_integrationResources(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    integrationResources(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...IntegrationResource
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Relations associated with this issue.
query issue_relations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    relations(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...IssueRelation
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Inverse relations associated with this issue.
query issue_inverseRelations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    inverseRelations(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...IssueRelation
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}

# [ALPHA] Search issues. This query is experimental and is subject to change without notice.
query issueSearch(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
  $query: String!
) {
  issueSearch(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
    query: $query
  ) {
    nodes {
      ...Issue
    }
    pageInfo {
      ...PageInfo
    }
  }
}

query issues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issues(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...Issue
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific milestone.
query milestone($id: String!) {
  milestone(id: $id) {
    ...Milestone
  }
}
# The organization that the milestone belongs to.
query milestone_organization($id: String!) {
  milestone(id: $id) {
    organization {
      ...Organization
    }
  }
}
# Users associated with the organization.
query milestone_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  milestone(id: $id) {
    organization {
      users(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Teams associated with the organization.
query milestone_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  milestone(id: $id) {
    organization {
      teams(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Team
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Milestones associated with the organization.
query milestone_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  milestone(id: $id) {
    organization {
      milestones(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Milestone
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integrations associated with the organization.
query milestone_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  milestone(id: $id) {
    organization {
      integrations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Integration
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query milestone_organization_subscription($id: String!) {
  milestone(id: $id) {
    organization {
      subscription {
        ...Subscription
      }
    }
  }
}
# The creator of the subscription.
query milestone_organization_subscription_creator($id: String!) {
  milestone(id: $id) {
    organization {
      subscription {
        creator {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query milestone_organization_subscription_creator_settings($id: String!) {
  milestone(id: $id) {
    organization {
      subscription {
        creator {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query milestone_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  milestone(id: $id) {
    organization {
      subscription {
        creator {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query milestone_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  milestone(id: $id) {
    organization {
      subscription {
        creator {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query milestone_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  milestone(id: $id) {
    organization {
      subscription {
        creator {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Projects associated with the milestone.
query milestone_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  milestone(id: $id) {
    projects(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Project
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}

# All milestones.
query milestones(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  milestones(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...Milestone
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# The user's settings.
query notification {
  notification {
    ...UserSettings
  }
}
# The user to whom this notification was targeted for.
query notification_user {
  notification {
    user {
      ...User
    }
  }
}
# Issues assigned to the user.
query notification_user_assignedIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  notification {
    user {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query notification_user_createdIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  notification {
    user {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query notification_user_organization {
  notification {
    user {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query notification_user_organization_users(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  notification {
    user {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query notification_user_organization_teams(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  notification {
    user {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query notification_user_organization_milestones(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  notification {
    user {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query notification_user_organization_integrations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  notification {
    user {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query notification_user_organization_subscription {
  notification {
    user {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query notification_user_teamMemberships(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  notification {
    user {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}

# All notifications.
query notifications(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  notifications(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...Notification
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# The user's notification subscriptions.
query notificationSubscription(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  notificationSubscription(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...NotificationSubscription
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific organization invite.
query organizationInvite($id: String!) {
  organizationInvite(id: $id) {
    ...IssueLabel
  }
}
# The team to which the label belongs to.
query organizationInvite_team($id: String!) {
  organizationInvite(id: $id) {
    team {
      ...Team
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query organizationInvite_team_draftWorkflowState($id: String!) {
  organizationInvite(id: $id) {
    team {
      draftWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query organizationInvite_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      draftWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query organizationInvite_team_startWorkflowState($id: String!) {
  organizationInvite(id: $id) {
    team {
      startWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query organizationInvite_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      startWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query organizationInvite_team_reviewWorkflowState($id: String!) {
  organizationInvite(id: $id) {
    team {
      reviewWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query organizationInvite_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      reviewWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query organizationInvite_team_mergeWorkflowState($id: String!) {
  organizationInvite(id: $id) {
    team {
      mergeWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query organizationInvite_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      mergeWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query organizationInvite_team_markedAsDuplicateWorkflowState($id: String!) {
  organizationInvite(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query organizationInvite_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query organizationInvite_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Cycles associated with the team.
query organizationInvite_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      cycles(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Cycle
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Memberships associated with the team.
query organizationInvite_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      memberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Projects associated with the team.
query organizationInvite_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      projects(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Project
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query organizationInvite_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      states(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...WorkflowState
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Templates associated with the team.
query organizationInvite_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      templates(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Template
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with the team.
query organizationInvite_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization that the team is associated with.
query organizationInvite_team_organization($id: String!) {
  organizationInvite(id: $id) {
    team {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query organizationInvite_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query organizationInvite_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query organizationInvite_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query organizationInvite_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query organizationInvite_team_organization_subscription($id: String!) {
  organizationInvite(id: $id) {
    team {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# The creator of the subscription.
query organizationInvite_team_organization_subscription_creator($id: String!) {
  organizationInvite(id: $id) {
    team {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query organizationInvite_team_organization_subscription_creator_settings($id: String!) {
  organizationInvite(id: $id) {
    team {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query organizationInvite_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query organizationInvite_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query organizationInvite_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query organizationInvite_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    team {
      webhooks(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Webhook
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The user who created the label.
query organizationInvite_creator($id: String!) {
  organizationInvite(id: $id) {
    creator {
      ...User
    }
  }
}
# The settings of the user.
query organizationInvite_creator_settings($id: String!) {
  organizationInvite(id: $id) {
    creator {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query organizationInvite_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    creator {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query organizationInvite_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    creator {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query organizationInvite_creator_organization($id: String!) {
  organizationInvite(id: $id) {
    creator {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query organizationInvite_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    creator {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query organizationInvite_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    creator {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query organizationInvite_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    creator {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query organizationInvite_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    creator {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query organizationInvite_creator_organization_subscription($id: String!) {
  organizationInvite(id: $id) {
    creator {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query organizationInvite_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    creator {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues associated with the label.
query organizationInvite_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvite(id: $id) {
    issues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Issue
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}

# All invites for the organization.
query organizationInvites(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvites(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...OrganizationInvite
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific project link.
query projectLink($id: String!) {
  projectLink(id: $id) {
    ...ProjectLink
  }
}
# The user who created the link.
query projectLink_creator($id: String!) {
  projectLink(id: $id) {
    creator {
      ...User
    }
  }
}
# The settings of the user.
query projectLink_creator_settings($id: String!) {
  projectLink(id: $id) {
    creator {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query projectLink_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    creator {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query projectLink_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    creator {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query projectLink_creator_organization($id: String!) {
  projectLink(id: $id) {
    creator {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query projectLink_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    creator {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query projectLink_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    creator {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query projectLink_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    creator {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query projectLink_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    creator {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query projectLink_creator_organization_subscription($id: String!) {
  projectLink(id: $id) {
    creator {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query projectLink_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    creator {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The project that the link is associated with.
query projectLink_project($id: String!) {
  projectLink(id: $id) {
    project {
      ...Project
    }
  }
}
# The user who created the project.
query projectLink_project_creator($id: String!) {
  projectLink(id: $id) {
    project {
      creator {
        ...User
      }
    }
  }
}
# The settings of the user.
query projectLink_project_creator_settings($id: String!) {
  projectLink(id: $id) {
    project {
      creator {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query projectLink_project_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      creator {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query projectLink_project_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      creator {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query projectLink_project_creator_organization($id: String!) {
  projectLink(id: $id) {
    project {
      creator {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query projectLink_project_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      creator {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query projectLink_project_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      creator {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query projectLink_project_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      creator {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query projectLink_project_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      creator {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query projectLink_project_creator_organization_subscription($id: String!) {
  projectLink(id: $id) {
    project {
      creator {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query projectLink_project_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      creator {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The project lead.
query projectLink_project_lead($id: String!) {
  projectLink(id: $id) {
    project {
      lead {
        ...User
      }
    }
  }
}
# The settings of the user.
query projectLink_project_lead_settings($id: String!) {
  projectLink(id: $id) {
    project {
      lead {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query projectLink_project_lead_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      lead {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query projectLink_project_lead_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      lead {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query projectLink_project_lead_organization($id: String!) {
  projectLink(id: $id) {
    project {
      lead {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query projectLink_project_lead_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      lead {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query projectLink_project_lead_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      lead {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query projectLink_project_lead_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      lead {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query projectLink_project_lead_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      lead {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query projectLink_project_lead_organization_subscription($id: String!) {
  projectLink(id: $id) {
    project {
      lead {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query projectLink_project_lead_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      lead {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The milestone that this project is associated with.
query projectLink_project_milestone($id: String!) {
  projectLink(id: $id) {
    project {
      milestone {
        ...Milestone
      }
    }
  }
}
# The organization that the milestone belongs to.
query projectLink_project_milestone_organization($id: String!) {
  projectLink(id: $id) {
    project {
      milestone {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query projectLink_project_milestone_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      milestone {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query projectLink_project_milestone_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      milestone {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query projectLink_project_milestone_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      milestone {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query projectLink_project_milestone_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      milestone {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query projectLink_project_milestone_organization_subscription($id: String!) {
  projectLink(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query projectLink_project_milestone_organization_subscription_creator($id: String!) {
  projectLink(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              ...User
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query projectLink_project_milestone_organization_subscription_creator_settings($id: String!) {
  projectLink(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              settings {
                ...UserSettings
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query projectLink_project_milestone_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              assignedIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query projectLink_project_milestone_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              createdIssues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query projectLink_project_milestone_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      milestone {
        organization {
          subscription {
            creator {
              teamMemberships(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...TeamMembership
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Projects associated with the milestone.
query projectLink_project_milestone_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      milestone {
        projects(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Project
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with this project.
query projectLink_project_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      teams(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Team
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Users that are members of the project.
query projectLink_project_members(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      members(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues associated with the project.
query projectLink_project_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Links associated with the project.
query projectLink_project_links(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projectLink(id: $id) {
    project {
      links(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...ProjectLink
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}

# All links for the project.
query ProjectLinks(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  ProjectLinks(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...ProjectLink
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific project.
query project($id: String!) {
  project(id: $id) {
    ...Project
  }
}
# The user who created the project.
query project_creator($id: String!) {
  project(id: $id) {
    creator {
      ...User
    }
  }
}
# The settings of the user.
query project_creator_settings($id: String!) {
  project(id: $id) {
    creator {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query project_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    creator {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query project_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    creator {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query project_creator_organization($id: String!) {
  project(id: $id) {
    creator {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query project_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    creator {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query project_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    creator {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query project_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    creator {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query project_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    creator {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query project_creator_organization_subscription($id: String!) {
  project(id: $id) {
    creator {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query project_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    creator {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The project lead.
query project_lead($id: String!) {
  project(id: $id) {
    lead {
      ...User
    }
  }
}
# The settings of the user.
query project_lead_settings($id: String!) {
  project(id: $id) {
    lead {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query project_lead_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    lead {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query project_lead_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    lead {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query project_lead_organization($id: String!) {
  project(id: $id) {
    lead {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query project_lead_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    lead {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query project_lead_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    lead {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query project_lead_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    lead {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query project_lead_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    lead {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query project_lead_organization_subscription($id: String!) {
  project(id: $id) {
    lead {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query project_lead_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    lead {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The milestone that this project is associated with.
query project_milestone($id: String!) {
  project(id: $id) {
    milestone {
      ...Milestone
    }
  }
}
# The organization that the milestone belongs to.
query project_milestone_organization($id: String!) {
  project(id: $id) {
    milestone {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query project_milestone_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    milestone {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query project_milestone_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    milestone {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query project_milestone_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    milestone {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query project_milestone_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    milestone {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query project_milestone_organization_subscription($id: String!) {
  project(id: $id) {
    milestone {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# The creator of the subscription.
query project_milestone_organization_subscription_creator($id: String!) {
  project(id: $id) {
    milestone {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query project_milestone_organization_subscription_creator_settings($id: String!) {
  project(id: $id) {
    milestone {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query project_milestone_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    milestone {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query project_milestone_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    milestone {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query project_milestone_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    milestone {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Projects associated with the milestone.
query project_milestone_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    milestone {
      projects(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Project
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Teams associated with this project.
query project_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    teams(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Team
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Users that are members of the project.
query project_members(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    members(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...User
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Issues associated with the project.
query project_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    issues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Issue
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Links associated with the project.
query project_links(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  project(id: $id) {
    links(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...ProjectLink
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}

# All projects.
query projects(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projects(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...Project
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# Sends a test push message.
query pushSubscriptionTest {
  pushSubscriptionTest {
    ...PushSubscriptionPayload
  }
}

# A specific reaction.
query reaction($id: String!) {
  reaction(id: $id) {
    ...Reaction
  }
}
# The user who reacted.
query reaction_user($id: String!) {
  reaction(id: $id) {
    user {
      ...User
    }
  }
}
# The settings of the user.
query reaction_user_settings($id: String!) {
  reaction(id: $id) {
    user {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query reaction_user_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    user {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query reaction_user_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    user {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query reaction_user_organization($id: String!) {
  reaction(id: $id) {
    user {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query reaction_user_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    user {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query reaction_user_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    user {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query reaction_user_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    user {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query reaction_user_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    user {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query reaction_user_organization_subscription($id: String!) {
  reaction(id: $id) {
    user {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query reaction_user_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    user {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The comment that the reaction is associated with.
query reaction_comment($id: String!) {
  reaction(id: $id) {
    comment {
      ...Comment
    }
  }
}
# The user who wrote the comment.
query reaction_comment_user($id: String!) {
  reaction(id: $id) {
    comment {
      user {
        ...User
      }
    }
  }
}
# The settings of the user.
query reaction_comment_user_settings($id: String!) {
  reaction(id: $id) {
    comment {
      user {
        settings {
          ...UserSettings
        }
      }
    }
  }
}
# Issues assigned to the user.
query reaction_comment_user_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      user {
        assignedIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues created by the user.
query reaction_comment_user_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      user {
        createdIssues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query reaction_comment_user_organization($id: String!) {
  reaction(id: $id) {
    comment {
      user {
        organization {
          ...Organization
        }
      }
    }
  }
}
# Users associated with the organization.
query reaction_comment_user_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      user {
        organization {
          users(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query reaction_comment_user_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      user {
        organization {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query reaction_comment_user_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      user {
        organization {
          milestones(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Milestone
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query reaction_comment_user_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      user {
        organization {
          integrations(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Integration
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query reaction_comment_user_organization_subscription($id: String!) {
  reaction(id: $id) {
    comment {
      user {
        organization {
          subscription {
            ...Subscription
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query reaction_comment_user_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      user {
        teamMemberships(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...TeamMembership
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The issue that the comment is associated with.
query reaction_comment_issue($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        ...Issue
      }
    }
  }
}
# The team that the issue is associated with.
query reaction_comment_issue_team($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          ...Team
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query reaction_comment_issue_team_draftWorkflowState($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          draftWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query reaction_comment_issue_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          draftWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query reaction_comment_issue_team_startWorkflowState($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          startWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query reaction_comment_issue_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          startWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query reaction_comment_issue_team_reviewWorkflowState($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          reviewWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query reaction_comment_issue_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          reviewWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query reaction_comment_issue_team_mergeWorkflowState($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          mergeWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query reaction_comment_issue_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          mergeWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query reaction_comment_issue_team_markedAsDuplicateWorkflowState($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          markedAsDuplicateWorkflowState {
            ...WorkflowState
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query reaction_comment_issue_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          markedAsDuplicateWorkflowState {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query reaction_comment_issue_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query reaction_comment_issue_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          cycles(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Cycle
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query reaction_comment_issue_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          memberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query reaction_comment_issue_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          projects(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Project
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query reaction_comment_issue_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          states(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...WorkflowState
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query reaction_comment_issue_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          templates(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Template
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query reaction_comment_issue_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          labels(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...IssueLabel
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query reaction_comment_issue_team_organization($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query reaction_comment_issue_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query reaction_comment_issue_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query reaction_comment_issue_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query reaction_comment_issue_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query reaction_comment_issue_team_organization_subscription($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query reaction_comment_issue_team_organization_subscription_creator($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          organization {
            subscription {
              creator {
                ...User
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query reaction_comment_issue_team_organization_subscription_creator_settings($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          organization {
            subscription {
              creator {
                settings {
                  ...UserSettings
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query reaction_comment_issue_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          organization {
            subscription {
              creator {
                assignedIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query reaction_comment_issue_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          organization {
            subscription {
              creator {
                createdIssues(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...Issue
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query reaction_comment_issue_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          organization {
            subscription {
              creator {
                teamMemberships(
                  before: $before
                  after: $after
                  first: $first
                  last: $last
                  includeArchived: $includeArchived
                  orderBy: $orderBy
                ) {
                  nodes {
                    ...TeamMembership
                  }
                  pageInfo {
                    ...PageInfo
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query reaction_comment_issue_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        team {
          webhooks(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Webhook
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The cycle that the issue is associated with.
query reaction_comment_issue_cycle($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          ...Cycle
        }
      }
    }
  }
}
# The team that the cycle is associated with.
query reaction_comment_issue_cycle_team($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            ...Team
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query reaction_comment_issue_cycle_team_draftWorkflowState($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            draftWorkflowState {
              ...WorkflowState
            }
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query reaction_comment_issue_cycle_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            draftWorkflowState {
              issues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query reaction_comment_issue_cycle_team_startWorkflowState($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            startWorkflowState {
              ...WorkflowState
            }
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query reaction_comment_issue_cycle_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            startWorkflowState {
              issues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query reaction_comment_issue_cycle_team_reviewWorkflowState($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            reviewWorkflowState {
              ...WorkflowState
            }
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query reaction_comment_issue_cycle_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            reviewWorkflowState {
              issues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query reaction_comment_issue_cycle_team_mergeWorkflowState($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            mergeWorkflowState {
              ...WorkflowState
            }
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query reaction_comment_issue_cycle_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            mergeWorkflowState {
              issues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query reaction_comment_issue_cycle_team_markedAsDuplicateWorkflowState($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            markedAsDuplicateWorkflowState {
              ...WorkflowState
            }
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query reaction_comment_issue_cycle_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            markedAsDuplicateWorkflowState {
              issues(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Issue
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query reaction_comment_issue_cycle_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query reaction_comment_issue_cycle_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            cycles(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Cycle
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query reaction_comment_issue_cycle_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            memberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query reaction_comment_issue_cycle_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            projects(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Project
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query reaction_comment_issue_cycle_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            states(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...WorkflowState
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query reaction_comment_issue_cycle_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            templates(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Template
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query reaction_comment_issue_cycle_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            labels(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...IssueLabel
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query reaction_comment_issue_cycle_team_organization($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            organization {
              ...Organization
            }
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query reaction_comment_issue_cycle_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            organization {
              users(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...User
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query reaction_comment_issue_cycle_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            organization {
              teams(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Team
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query reaction_comment_issue_cycle_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            organization {
              milestones(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Milestone
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query reaction_comment_issue_cycle_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            organization {
              integrations(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Integration
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query reaction_comment_issue_cycle_team_organization_subscription($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            organization {
              subscription {
                ...Subscription
              }
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query reaction_comment_issue_cycle_team_organization_subscription_creator($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            organization {
              subscription {
                creator {
                  ...User
                }
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query reaction_comment_issue_cycle_team_organization_subscription_creator_settings($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            organization {
              subscription {
                creator {
                  settings {
                    ...UserSettings
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query reaction_comment_issue_cycle_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            organization {
              subscription {
                creator {
                  assignedIssues(
                    before: $before
                    after: $after
                    first: $first
                    last: $last
                    includeArchived: $includeArchived
                    orderBy: $orderBy
                  ) {
                    nodes {
                      ...Issue
                    }
                    pageInfo {
                      ...PageInfo
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query reaction_comment_issue_cycle_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            organization {
              subscription {
                creator {
                  createdIssues(
                    before: $before
                    after: $after
                    first: $first
                    last: $last
                    includeArchived: $includeArchived
                    orderBy: $orderBy
                  ) {
                    nodes {
                      ...Issue
                    }
                    pageInfo {
                      ...PageInfo
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query reaction_comment_issue_cycle_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            organization {
              subscription {
                creator {
                  teamMemberships(
                    before: $before
                    after: $after
                    first: $first
                    last: $last
                    includeArchived: $includeArchived
                    orderBy: $orderBy
                  ) {
                    nodes {
                      ...TeamMembership
                    }
                    pageInfo {
                      ...PageInfo
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query reaction_comment_issue_cycle_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          team {
            webhooks(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Webhook
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues associated with the cycle.
query reaction_comment_issue_cycle_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues that weren't completed when the cycle was closed.
query reaction_comment_issue_cycle_uncompletedIssuesUponClose(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        cycle {
          uncompletedIssuesUponClose(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The workflow state that the issue is associated with.
query reaction_comment_issue_state($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          ...WorkflowState
        }
      }
    }
  }
}
# The team to which this state belongs to.
query reaction_comment_issue_state_team($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            ...Team
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query reaction_comment_issue_state_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            issues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Cycles associated with the team.
query reaction_comment_issue_state_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            cycles(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Cycle
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the team.
query reaction_comment_issue_state_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            memberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Projects associated with the team.
query reaction_comment_issue_state_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            projects(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Project
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query reaction_comment_issue_state_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            states(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...WorkflowState
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Templates associated with the team.
query reaction_comment_issue_state_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            templates(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Template
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Labels associated with the team.
query reaction_comment_issue_state_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            labels(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...IssueLabel
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization that the team is associated with.
query reaction_comment_issue_state_team_organization($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            organization {
              ...Organization
            }
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query reaction_comment_issue_state_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            organization {
              users(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...User
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query reaction_comment_issue_state_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            organization {
              teams(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Team
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query reaction_comment_issue_state_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            organization {
              milestones(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Milestone
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query reaction_comment_issue_state_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            organization {
              integrations(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Integration
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query reaction_comment_issue_state_team_organization_subscription($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            organization {
              subscription {
                ...Subscription
              }
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query reaction_comment_issue_state_team_organization_subscription_creator($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            organization {
              subscription {
                creator {
                  ...User
                }
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query reaction_comment_issue_state_team_organization_subscription_creator_settings($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            organization {
              subscription {
                creator {
                  settings {
                    ...UserSettings
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query reaction_comment_issue_state_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            organization {
              subscription {
                creator {
                  assignedIssues(
                    before: $before
                    after: $after
                    first: $first
                    last: $last
                    includeArchived: $includeArchived
                    orderBy: $orderBy
                  ) {
                    nodes {
                      ...Issue
                    }
                    pageInfo {
                      ...PageInfo
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query reaction_comment_issue_state_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            organization {
              subscription {
                creator {
                  createdIssues(
                    before: $before
                    after: $after
                    first: $first
                    last: $last
                    includeArchived: $includeArchived
                    orderBy: $orderBy
                  ) {
                    nodes {
                      ...Issue
                    }
                    pageInfo {
                      ...PageInfo
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query reaction_comment_issue_state_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            organization {
              subscription {
                creator {
                  teamMemberships(
                    before: $before
                    after: $after
                    first: $first
                    last: $last
                    includeArchived: $includeArchived
                    orderBy: $orderBy
                  ) {
                    nodes {
                      ...TeamMembership
                    }
                    pageInfo {
                      ...PageInfo
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query reaction_comment_issue_state_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          team {
            webhooks(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Webhook
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues belonging in this state.
query reaction_comment_issue_state_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        state {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The user to whom the issue is assigned to.
query reaction_comment_issue_assignee($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        assignee {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query reaction_comment_issue_assignee_settings($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        assignee {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query reaction_comment_issue_assignee_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        assignee {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query reaction_comment_issue_assignee_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        assignee {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query reaction_comment_issue_assignee_organization($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        assignee {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query reaction_comment_issue_assignee_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        assignee {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query reaction_comment_issue_assignee_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        assignee {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query reaction_comment_issue_assignee_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        assignee {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query reaction_comment_issue_assignee_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        assignee {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query reaction_comment_issue_assignee_organization_subscription($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        assignee {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query reaction_comment_issue_assignee_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        assignee {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# The project that the issue is associated with.
query reaction_comment_issue_project($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          ...Project
        }
      }
    }
  }
}
# The user who created the project.
query reaction_comment_issue_project_creator($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query reaction_comment_issue_project_creator_settings($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query reaction_comment_issue_project_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query reaction_comment_issue_project_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query reaction_comment_issue_project_creator_organization($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          creator {
            organization {
              ...Organization
            }
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query reaction_comment_issue_project_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          creator {
            organization {
              users(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...User
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query reaction_comment_issue_project_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          creator {
            organization {
              teams(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Team
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query reaction_comment_issue_project_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          creator {
            organization {
              milestones(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Milestone
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query reaction_comment_issue_project_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          creator {
            organization {
              integrations(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Integration
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query reaction_comment_issue_project_creator_organization_subscription($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          creator {
            organization {
              subscription {
                ...Subscription
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query reaction_comment_issue_project_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The project lead.
query reaction_comment_issue_project_lead($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          lead {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query reaction_comment_issue_project_lead_settings($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          lead {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query reaction_comment_issue_project_lead_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          lead {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query reaction_comment_issue_project_lead_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          lead {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query reaction_comment_issue_project_lead_organization($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          lead {
            organization {
              ...Organization
            }
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query reaction_comment_issue_project_lead_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          lead {
            organization {
              users(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...User
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query reaction_comment_issue_project_lead_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          lead {
            organization {
              teams(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Team
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query reaction_comment_issue_project_lead_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          lead {
            organization {
              milestones(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Milestone
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query reaction_comment_issue_project_lead_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          lead {
            organization {
              integrations(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Integration
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query reaction_comment_issue_project_lead_organization_subscription($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          lead {
            organization {
              subscription {
                ...Subscription
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query reaction_comment_issue_project_lead_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          lead {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The milestone that this project is associated with.
query reaction_comment_issue_project_milestone($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          milestone {
            ...Milestone
          }
        }
      }
    }
  }
}
# The organization that the milestone belongs to.
query reaction_comment_issue_project_milestone_organization($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          milestone {
            organization {
              ...Organization
            }
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query reaction_comment_issue_project_milestone_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          milestone {
            organization {
              users(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...User
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query reaction_comment_issue_project_milestone_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          milestone {
            organization {
              teams(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Team
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query reaction_comment_issue_project_milestone_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          milestone {
            organization {
              milestones(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Milestone
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query reaction_comment_issue_project_milestone_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          milestone {
            organization {
              integrations(
                before: $before
                after: $after
                first: $first
                last: $last
                includeArchived: $includeArchived
                orderBy: $orderBy
              ) {
                nodes {
                  ...Integration
                }
                pageInfo {
                  ...PageInfo
                }
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query reaction_comment_issue_project_milestone_organization_subscription($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          milestone {
            organization {
              subscription {
                ...Subscription
              }
            }
          }
        }
      }
    }
  }
}
# The creator of the subscription.
query reaction_comment_issue_project_milestone_organization_subscription_creator($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          milestone {
            organization {
              subscription {
                creator {
                  ...User
                }
              }
            }
          }
        }
      }
    }
  }
}
# The settings of the user.
query reaction_comment_issue_project_milestone_organization_subscription_creator_settings($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          milestone {
            organization {
              subscription {
                creator {
                  settings {
                    ...UserSettings
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query reaction_comment_issue_project_milestone_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          milestone {
            organization {
              subscription {
                creator {
                  assignedIssues(
                    before: $before
                    after: $after
                    first: $first
                    last: $last
                    includeArchived: $includeArchived
                    orderBy: $orderBy
                  ) {
                    nodes {
                      ...Issue
                    }
                    pageInfo {
                      ...PageInfo
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query reaction_comment_issue_project_milestone_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          milestone {
            organization {
              subscription {
                creator {
                  createdIssues(
                    before: $before
                    after: $after
                    first: $first
                    last: $last
                    includeArchived: $includeArchived
                    orderBy: $orderBy
                  ) {
                    nodes {
                      ...Issue
                    }
                    pageInfo {
                      ...PageInfo
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query reaction_comment_issue_project_milestone_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          milestone {
            organization {
              subscription {
                creator {
                  teamMemberships(
                    before: $before
                    after: $after
                    first: $first
                    last: $last
                    includeArchived: $includeArchived
                    orderBy: $orderBy
                  ) {
                    nodes {
                      ...TeamMembership
                    }
                    pageInfo {
                      ...PageInfo
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
# Projects associated with the milestone.
query reaction_comment_issue_project_milestone_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          milestone {
            projects(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Project
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with this project.
query reaction_comment_issue_project_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          teams(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Team
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Users that are members of the project.
query reaction_comment_issue_project_members(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          members(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...User
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues associated with the project.
query reaction_comment_issue_project_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          issues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Links associated with the project.
query reaction_comment_issue_project_links(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        project {
          links(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...ProjectLink
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Users who are subscribed to the issue.
query reaction_comment_issue_subscribers(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        subscribers(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The user who created the issue.
query reaction_comment_issue_creator($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        creator {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query reaction_comment_issue_creator_settings($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        creator {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query reaction_comment_issue_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        creator {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query reaction_comment_issue_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        creator {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query reaction_comment_issue_creator_organization($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        creator {
          organization {
            ...Organization
          }
        }
      }
    }
  }
}
# Users associated with the organization.
query reaction_comment_issue_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        creator {
          organization {
            users(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...User
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query reaction_comment_issue_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        creator {
          organization {
            teams(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Team
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query reaction_comment_issue_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        creator {
          organization {
            milestones(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Milestone
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query reaction_comment_issue_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        creator {
          organization {
            integrations(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Integration
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query reaction_comment_issue_creator_organization_subscription($id: String!) {
  reaction(id: $id) {
    comment {
      issue {
        creator {
          organization {
            subscription {
              ...Subscription
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query reaction_comment_issue_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        creator {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Children of the issue.
query reaction_comment_issue_children(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        children(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Comments associated with the issue.
query reaction_comment_issue_comments(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        comments(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Comment
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# History entries associated with the issue.
query reaction_comment_issue_history(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        history(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueHistory
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Labels associated with this issue.
query reaction_comment_issue_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        labels(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueLabel
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integration resources for this issue.
query reaction_comment_issue_integrationResources(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        integrationResources(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IntegrationResource
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Relations associated with this issue.
query reaction_comment_issue_relations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        relations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueRelation
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Inverse relations associated with this issue.
query reaction_comment_issue_inverseRelations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reaction(id: $id) {
    comment {
      issue {
        inverseRelations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...IssueRelation
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}

query reactions(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reactions(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...Reaction
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# The organization's subscription.
query subscription {
  subscription {
    ...Subscription
  }
}
# The creator of the subscription.
query subscription_creator {
  subscription {
    creator {
      ...User
    }
  }
}
# The settings of the user.
query subscription_creator_settings {
  subscription {
    creator {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query subscription_creator_assignedIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  subscription {
    creator {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query subscription_creator_createdIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  subscription {
    creator {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query subscription_creator_organization {
  subscription {
    creator {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query subscription_creator_organization_users(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  subscription {
    creator {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query subscription_creator_organization_teams(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  subscription {
    creator {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query subscription_creator_organization_milestones(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  subscription {
    creator {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query subscription_creator_organization_integrations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  subscription {
    creator {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query subscription_creator_teamMemberships(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  subscription {
    creator {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization that the subscription is associated with.
query subscription_organization {
  subscription {
    organization {
      ...Organization
    }
  }
}
# Users associated with the organization.
query subscription_organization_users(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  subscription {
    organization {
      users(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Teams associated with the organization.
query subscription_organization_teams(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  subscription {
    organization {
      teams(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Team
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Milestones associated with the organization.
query subscription_organization_milestones(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  subscription {
    organization {
      milestones(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Milestone
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integrations associated with the organization.
query subscription_organization_integrations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  subscription {
    organization {
      integrations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Integration
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}

# One specific team membership.
query teamMembership($id: String!) {
  teamMembership(id: $id) {
    ...TeamMembership
  }
}
# The user that the membership is associated with.
query teamMembership_user($id: String!) {
  teamMembership(id: $id) {
    user {
      ...User
    }
  }
}
# The settings of the user.
query teamMembership_user_settings($id: String!) {
  teamMembership(id: $id) {
    user {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query teamMembership_user_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    user {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query teamMembership_user_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    user {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query teamMembership_user_organization($id: String!) {
  teamMembership(id: $id) {
    user {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query teamMembership_user_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    user {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query teamMembership_user_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    user {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query teamMembership_user_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    user {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query teamMembership_user_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    user {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query teamMembership_user_organization_subscription($id: String!) {
  teamMembership(id: $id) {
    user {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query teamMembership_user_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    user {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The team that the membership is associated with.
query teamMembership_team($id: String!) {
  teamMembership(id: $id) {
    team {
      ...Team
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query teamMembership_team_draftWorkflowState($id: String!) {
  teamMembership(id: $id) {
    team {
      draftWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query teamMembership_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      draftWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query teamMembership_team_startWorkflowState($id: String!) {
  teamMembership(id: $id) {
    team {
      startWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query teamMembership_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      startWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query teamMembership_team_reviewWorkflowState($id: String!) {
  teamMembership(id: $id) {
    team {
      reviewWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query teamMembership_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      reviewWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query teamMembership_team_mergeWorkflowState($id: String!) {
  teamMembership(id: $id) {
    team {
      mergeWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query teamMembership_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      mergeWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query teamMembership_team_markedAsDuplicateWorkflowState($id: String!) {
  teamMembership(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query teamMembership_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query teamMembership_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Cycles associated with the team.
query teamMembership_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      cycles(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Cycle
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Memberships associated with the team.
query teamMembership_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      memberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Projects associated with the team.
query teamMembership_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      projects(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Project
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query teamMembership_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      states(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...WorkflowState
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Templates associated with the team.
query teamMembership_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      templates(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Template
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with the team.
query teamMembership_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization that the team is associated with.
query teamMembership_team_organization($id: String!) {
  teamMembership(id: $id) {
    team {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query teamMembership_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query teamMembership_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query teamMembership_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query teamMembership_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query teamMembership_team_organization_subscription($id: String!) {
  teamMembership(id: $id) {
    team {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# The creator of the subscription.
query teamMembership_team_organization_subscription_creator($id: String!) {
  teamMembership(id: $id) {
    team {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query teamMembership_team_organization_subscription_creator_settings($id: String!) {
  teamMembership(id: $id) {
    team {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query teamMembership_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query teamMembership_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query teamMembership_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query teamMembership_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMembership(id: $id) {
    team {
      webhooks(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Webhook
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}

# All team memberships.
query teamMemberships(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMemberships(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...TeamMembership
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific team.
query team($id: String!) {
  team(id: $id) {
    ...Team
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query team_draftWorkflowState($id: String!) {
  team(id: $id) {
    draftWorkflowState {
      ...WorkflowState
    }
  }
}
# Issues belonging in this state.
query team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    draftWorkflowState {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query team_startWorkflowState($id: String!) {
  team(id: $id) {
    startWorkflowState {
      ...WorkflowState
    }
  }
}
# Issues belonging in this state.
query team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    startWorkflowState {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query team_reviewWorkflowState($id: String!) {
  team(id: $id) {
    reviewWorkflowState {
      ...WorkflowState
    }
  }
}
# Issues belonging in this state.
query team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    reviewWorkflowState {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query team_mergeWorkflowState($id: String!) {
  team(id: $id) {
    mergeWorkflowState {
      ...WorkflowState
    }
  }
}
# Issues belonging in this state.
query team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    mergeWorkflowState {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query team_markedAsDuplicateWorkflowState($id: String!) {
  team(id: $id) {
    markedAsDuplicateWorkflowState {
      ...WorkflowState
    }
  }
}
# Issues belonging in this state.
query team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    markedAsDuplicateWorkflowState {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues associated with the team.
query team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    issues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Issue
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Cycles associated with the team.
query team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    cycles(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Cycle
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Memberships associated with the team.
query team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    memberships(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...TeamMembership
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Projects associated with the team.
query team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    projects(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Project
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# The states that define the workflow associated with the team.
query team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    states(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...WorkflowState
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Templates associated with the team.
query team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    templates(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Template
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# Labels associated with the team.
query team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    labels(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...IssueLabel
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}
# The organization that the team is associated with.
query team_organization($id: String!) {
  team(id: $id) {
    organization {
      ...Organization
    }
  }
}
# Users associated with the organization.
query team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    organization {
      users(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...User
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Teams associated with the organization.
query team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    organization {
      teams(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Team
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Milestones associated with the organization.
query team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    organization {
      milestones(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Milestone
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Integrations associated with the organization.
query team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    organization {
      integrations(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Integration
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query team_organization_subscription($id: String!) {
  team(id: $id) {
    organization {
      subscription {
        ...Subscription
      }
    }
  }
}
# The creator of the subscription.
query team_organization_subscription_creator($id: String!) {
  team(id: $id) {
    organization {
      subscription {
        creator {
          ...User
        }
      }
    }
  }
}
# The settings of the user.
query team_organization_subscription_creator_settings($id: String!) {
  team(id: $id) {
    organization {
      subscription {
        creator {
          settings {
            ...UserSettings
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    organization {
      subscription {
        creator {
          assignedIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    organization {
      subscription {
        creator {
          createdIssues(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...Issue
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    organization {
      subscription {
        creator {
          teamMemberships(
            before: $before
            after: $after
            first: $first
            last: $last
            includeArchived: $includeArchived
            orderBy: $orderBy
          ) {
            nodes {
              ...TeamMembership
            }
            pageInfo {
              ...PageInfo
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    webhooks(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Webhook
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}

# All teams.
query teams(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teams(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...Team
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# All templates from all users.
query templates {
  templates {
    ...Template
  }
}
# The team that the template is associated with.
query templates_team {
  templates {
    team {
      ...Team
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query templates_team_draftWorkflowState {
  templates {
    team {
      draftWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query templates_team_draftWorkflowState_issues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      draftWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query templates_team_startWorkflowState {
  templates {
    team {
      startWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query templates_team_startWorkflowState_issues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      startWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query templates_team_reviewWorkflowState {
  templates {
    team {
      reviewWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query templates_team_reviewWorkflowState_issues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      reviewWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query templates_team_mergeWorkflowState {
  templates {
    team {
      mergeWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query templates_team_mergeWorkflowState_issues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      mergeWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query templates_team_markedAsDuplicateWorkflowState {
  templates {
    team {
      markedAsDuplicateWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query templates_team_markedAsDuplicateWorkflowState_issues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      markedAsDuplicateWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query templates_team_issues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Cycles associated with the team.
query templates_team_cycles(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      cycles(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Cycle
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Memberships associated with the team.
query templates_team_memberships(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      memberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Projects associated with the team.
query templates_team_projects(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      projects(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Project
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query templates_team_states(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      states(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...WorkflowState
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Templates associated with the team.
query templates_team_templates(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      templates(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Template
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with the team.
query templates_team_labels(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization that the team is associated with.
query templates_team_organization {
  templates {
    team {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query templates_team_organization_users(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query templates_team_organization_teams(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query templates_team_organization_milestones(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query templates_team_organization_integrations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query templates_team_organization_subscription {
  templates {
    team {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# The creator of the subscription.
query templates_team_organization_subscription_creator {
  templates {
    team {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query templates_team_organization_subscription_creator_settings {
  templates {
    team {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query templates_team_organization_subscription_creator_assignedIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query templates_team_organization_subscription_creator_createdIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query templates_team_organization_subscription_creator_teamMemberships(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query templates_team_webhooks(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    team {
      webhooks(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Webhook
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The user who created the template.
query templates_creator {
  templates {
    creator {
      ...User
    }
  }
}
# The settings of the user.
query templates_creator_settings {
  templates {
    creator {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query templates_creator_assignedIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    creator {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query templates_creator_createdIssues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    creator {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query templates_creator_organization {
  templates {
    creator {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query templates_creator_organization_users(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    creator {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query templates_creator_organization_teams(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    creator {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query templates_creator_organization_milestones(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    creator {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query templates_creator_organization_integrations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    creator {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query templates_creator_organization_subscription {
  templates {
    creator {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query templates_creator_teamMemberships(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  templates {
    creator {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}

# A specific template.
query template($id: String!) {
  template(id: $id) {
    ...Template
  }
}
# The team that the template is associated with.
query template_team($id: String!) {
  template(id: $id) {
    team {
      ...Team
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query template_team_draftWorkflowState($id: String!) {
  template(id: $id) {
    team {
      draftWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query template_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      draftWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query template_team_startWorkflowState($id: String!) {
  template(id: $id) {
    team {
      startWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query template_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      startWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query template_team_reviewWorkflowState($id: String!) {
  template(id: $id) {
    team {
      reviewWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query template_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      reviewWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query template_team_mergeWorkflowState($id: String!) {
  template(id: $id) {
    team {
      mergeWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query template_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      mergeWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query template_team_markedAsDuplicateWorkflowState($id: String!) {
  template(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query template_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query template_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Cycles associated with the team.
query template_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      cycles(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Cycle
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Memberships associated with the team.
query template_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      memberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Projects associated with the team.
query template_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      projects(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Project
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query template_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      states(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...WorkflowState
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Templates associated with the team.
query template_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      templates(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Template
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with the team.
query template_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization that the team is associated with.
query template_team_organization($id: String!) {
  template(id: $id) {
    team {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query template_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query template_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query template_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query template_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query template_team_organization_subscription($id: String!) {
  template(id: $id) {
    team {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# The creator of the subscription.
query template_team_organization_subscription_creator($id: String!) {
  template(id: $id) {
    team {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query template_team_organization_subscription_creator_settings($id: String!) {
  template(id: $id) {
    team {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query template_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query template_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query template_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query template_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    team {
      webhooks(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Webhook
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The user who created the template.
query template_creator($id: String!) {
  template(id: $id) {
    creator {
      ...User
    }
  }
}
# The settings of the user.
query template_creator_settings($id: String!) {
  template(id: $id) {
    creator {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query template_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    creator {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query template_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    creator {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query template_creator_organization($id: String!) {
  template(id: $id) {
    creator {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query template_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    creator {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query template_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    creator {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query template_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    creator {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query template_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    creator {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query template_creator_organization_subscription($id: String!) {
  template(id: $id) {
    creator {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query template_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  template(id: $id) {
    creator {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}

# All view preferences.
query viewPreferences(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  viewPreferences(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...ViewPreferences
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# A specific webhook.
query webhook($id: String!) {
  webhook(id: $id) {
    ...Webhook
  }
}
# The team that the webhook is associated with.
query webhook_team($id: String!) {
  webhook(id: $id) {
    team {
      ...Team
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened as draft.
query webhook_team_draftWorkflowState($id: String!) {
  webhook(id: $id) {
    team {
      draftWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query webhook_team_draftWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      draftWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been opened.
query webhook_team_startWorkflowState($id: String!) {
  webhook(id: $id) {
    team {
      startWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query webhook_team_startWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      startWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a review has been requested for the PR.
query webhook_team_reviewWorkflowState($id: String!) {
  webhook(id: $id) {
    team {
      reviewWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query webhook_team_reviewWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      reviewWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when a PR has been merged.
query webhook_team_mergeWorkflowState($id: String!) {
  webhook(id: $id) {
    team {
      mergeWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query webhook_team_mergeWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      mergeWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.
query webhook_team_markedAsDuplicateWorkflowState($id: String!) {
  webhook(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        ...WorkflowState
      }
    }
  }
}
# Issues belonging in this state.
query webhook_team_markedAsDuplicateWorkflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      markedAsDuplicateWorkflowState {
        issues(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Issue
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Issues associated with the team.
query webhook_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Cycles associated with the team.
query webhook_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      cycles(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Cycle
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Memberships associated with the team.
query webhook_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      memberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Projects associated with the team.
query webhook_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      projects(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Project
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query webhook_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      states(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...WorkflowState
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Templates associated with the team.
query webhook_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      templates(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Template
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with the team.
query webhook_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization that the team is associated with.
query webhook_team_organization($id: String!) {
  webhook(id: $id) {
    team {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query webhook_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query webhook_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query webhook_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query webhook_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query webhook_team_organization_subscription($id: String!) {
  webhook(id: $id) {
    team {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# The creator of the subscription.
query webhook_team_organization_subscription_creator($id: String!) {
  webhook(id: $id) {
    team {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query webhook_team_organization_subscription_creator_settings($id: String!) {
  webhook(id: $id) {
    team {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query webhook_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query webhook_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query webhook_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query webhook_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    team {
      webhooks(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Webhook
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The user who created the webhook.
query webhook_creator($id: String!) {
  webhook(id: $id) {
    creator {
      ...User
    }
  }
}
# The settings of the user.
query webhook_creator_settings($id: String!) {
  webhook(id: $id) {
    creator {
      settings {
        ...UserSettings
      }
    }
  }
}
# Issues assigned to the user.
query webhook_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    creator {
      assignedIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues created by the user.
query webhook_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    creator {
      createdIssues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Organization in which the user belongs to.
query webhook_creator_organization($id: String!) {
  webhook(id: $id) {
    creator {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query webhook_creator_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    creator {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query webhook_creator_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    creator {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query webhook_creator_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    creator {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query webhook_creator_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    creator {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query webhook_creator_organization_subscription($id: String!) {
  webhook(id: $id) {
    creator {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# Memberships associated with the user.
query webhook_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhook(id: $id) {
    creator {
      teamMemberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}

# All webhooks.
query webhooks(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhooks(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...Webhook
    }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific state.
query workflowState($id: String!) {
  workflowState(id: $id) {
    ...WorkflowState
  }
}
# The team to which this state belongs to.
query workflowState_team($id: String!) {
  workflowState(id: $id) {
    team {
      ...Team
    }
  }
}
# Issues associated with the team.
query workflowState_team_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      issues(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Issue
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Cycles associated with the team.
query workflowState_team_cycles(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      cycles(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Cycle
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Memberships associated with the team.
query workflowState_team_memberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      memberships(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...TeamMembership
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Projects associated with the team.
query workflowState_team_projects(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      projects(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Project
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The states that define the workflow associated with the team.
query workflowState_team_states(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      states(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...WorkflowState
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Templates associated with the team.
query workflowState_team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      templates(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Template
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Labels associated with the team.
query workflowState_team_labels(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      labels(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...IssueLabel
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# The organization that the team is associated with.
query workflowState_team_organization($id: String!) {
  workflowState(id: $id) {
    team {
      organization {
        ...Organization
      }
    }
  }
}
# Users associated with the organization.
query workflowState_team_organization_users(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      organization {
        users(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...User
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Teams associated with the organization.
query workflowState_team_organization_teams(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      organization {
        teams(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Team
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Milestones associated with the organization.
query workflowState_team_organization_milestones(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      organization {
        milestones(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Milestone
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# Integrations associated with the organization.
query workflowState_team_organization_integrations(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      organization {
        integrations(
          before: $before
          after: $after
          first: $first
          last: $last
          includeArchived: $includeArchived
          orderBy: $orderBy
        ) {
          nodes {
            ...Integration
          }
          pageInfo {
            ...PageInfo
          }
        }
      }
    }
  }
}
# The organization's subscription to a paid plan.
query workflowState_team_organization_subscription($id: String!) {
  workflowState(id: $id) {
    team {
      organization {
        subscription {
          ...Subscription
        }
      }
    }
  }
}
# The creator of the subscription.
query workflowState_team_organization_subscription_creator($id: String!) {
  workflowState(id: $id) {
    team {
      organization {
        subscription {
          creator {
            ...User
          }
        }
      }
    }
  }
}
# The settings of the user.
query workflowState_team_organization_subscription_creator_settings($id: String!) {
  workflowState(id: $id) {
    team {
      organization {
        subscription {
          creator {
            settings {
              ...UserSettings
            }
          }
        }
      }
    }
  }
}
# Issues assigned to the user.
query workflowState_team_organization_subscription_creator_assignedIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      organization {
        subscription {
          creator {
            assignedIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Issues created by the user.
query workflowState_team_organization_subscription_creator_createdIssues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      organization {
        subscription {
          creator {
            createdIssues(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...Issue
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Memberships associated with the user.
query workflowState_team_organization_subscription_creator_teamMemberships(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      organization {
        subscription {
          creator {
            teamMemberships(
              before: $before
              after: $after
              first: $first
              last: $last
              includeArchived: $includeArchived
              orderBy: $orderBy
            ) {
              nodes {
                ...TeamMembership
              }
              pageInfo {
                ...PageInfo
              }
            }
          }
        }
      }
    }
  }
}
# Webhooks associated with the team.
query workflowState_team_webhooks(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    team {
      webhooks(
        before: $before
        after: $after
        first: $first
        last: $last
        includeArchived: $includeArchived
        orderBy: $orderBy
      ) {
        nodes {
          ...Webhook
        }
        pageInfo {
          ...PageInfo
        }
      }
    }
  }
}
# Issues belonging in this state.
query workflowState_issues(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowState(id: $id) {
    issues(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      nodes {
        ...Issue
      }
      pageInfo {
        ...PageInfo
      }
    }
  }
}

# All states.
query workflowStates(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowStates(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    nodes {
      ...WorkflowState
    }
    pageInfo {
      ...PageInfo
    }
  }
}
# Updates a user. Only available to organization admins and the user themselves.
mutation userUpdate($input: UpdateUserInput!, $id: String!) {
  userUpdate(input: $input, id: $id) {
    ...UserPayload
  }
}

# Makes user an admin. Can only be called by an admin.
mutation userPromoteAdmin($id: String!) {
  userPromoteAdmin(id: $id) {
    ...UserAdminPayload
  }
}

# Makes user a regular user. Can only be called by an admin.
mutation userDemoteAdmin($id: String!) {
  userDemoteAdmin(id: $id) {
    ...UserAdminPayload
  }
}

# Suspends a user. Can only be called by an admin.
mutation userSuspend($id: String!) {
  userSuspend(id: $id) {
    ...UserAdminPayload
  }
}

# Un-suspends a user. Can only be called by an admin.
mutation userUnsuspend($id: String!) {
  userUnsuspend(id: $id) {
    ...UserAdminPayload
  }
}

# Updates the user's organization.
mutation organizationUpdate($input: UpdateOrganizationInput!) {
  organizationUpdate(input: $input) {
    ...OrganizationPayload
  }
}

# Get an organization's delete confirmation token. Administrator privileges required.
mutation organizationDeleteChallenge {
  organizationDeleteChallenge {
    ...OrganizationDeletePayload
  }
}

# Delete's an organization. Administrator privileges required.
mutation organizationDelete($input: DeleteOrganizationInput!) {
  organizationDelete(input: $input) {
    ...OrganizationDeletePayload
  }
}

# Deletes an integration. Superuser privileges required.
mutation adminDeleteIntegration($id: String!) {
  adminDeleteIntegration(id: $id) {
    ...AdminIntegrationPayload
  }
}

# Disable organization access. Superuser privileges required.
mutation organizationToggleAccess($id: String!) {
  organizationToggleAccess(id: $id) {
    ...OrganizationAccessPayload
  }
}

# Change email domain for all users and accounts in the organization.
mutation organizationChangeEmailDomain($toDomain: String!, $fromDomain: String!, $id: String!) {
  organizationChangeEmailDomain(toDomain: $toDomain, fromDomain: $fromDomain, id: $id) {
    ...OrganizationAccessPayload
  }
}

# Toggle SAML authentication on or off for an organization. Superuser privileges required.
mutation organizationToggleSamlEnabled($id: String!) {
  organizationToggleSamlEnabled(id: $id) {
    ...OrganizationSamlConfigurePayload
  }
}

# Configure SAML authentication for an organization. Superuser privileges required.
mutation organizationConfigureSaml($samlConfiguration: SamlConfigurationInput!, $id: String!) {
  organizationConfigureSaml(samlConfiguration: $samlConfiguration, id: $id) {
    ...OrganizationSamlConfigurePayload
  }
}

# Executes admin command.
mutation adminCommand($input: AdminCommandInput!) {
  adminCommand(input: $input) {
    ...AdminCommandPayload
  }
}

# Sends out emails in bulk to our users.
mutation adminBulkEmail($randomDelay: Int, $emails: [String!]!, $markdownContent: String!, $subject: String!) {
  adminBulkEmail(randomDelay: $randomDelay, emails: $emails, markdownContent: $markdownContent, subject: $subject) {
    ...AdminCommandPayload
  }
}

# Creates a stripe customer for an organization.
mutation adminCreateStripeCustomer($organizationId: String!) {
  adminCreateStripeCustomer(organizationId: $organizationId) {
    ...AdminCommandPayload
  }
}

# Schedules a task. Currently only anonymous tasks without any parameters can be scheduled.
mutation adminScheduleAnonymousTask($taskName: String!) {
  adminScheduleAnonymousTask(taskName: $taskName) {
    ...AdminCommandPayload
  }
}

# Changes the email address for the user account and all of its users.
mutation adminUserAccountChangeEmail($newEmail: String!, $id: String!) {
  adminUserAccountChangeEmail(newEmail: $newEmail, id: $id) {
    ...UserAccountAdminPrivileged
  }
}

# [Deprecated] Creates a new event.
mutation eventCreate($input: EventCreateInput!) {
  eventCreate(input: $input) {
    ...EventPayload
  }
}

# Creates a new API key.
mutation apiKeyCreate($input: ApiKeyCreateInput!) {
  apiKeyCreate(input: $input) {
    ...ApiKeyPayload
  }
}

# Deletes an API key.
mutation apiKeyDelete($id: String!) {
  apiKeyDelete(id: $id) {
    ...ArchivePayload
  }
}

# Finds or creates a new user account by email and sends an email with token.
mutation emailUserAccountAuthChallenge($input: EmailUserAccountAuthChallengeInput!) {
  emailUserAccountAuthChallenge(input: $input) {
    ...EmailUserAccountAuthChallengeResponse
  }
}

# Authenticates a user account via email and authentication token.
mutation emailTokenUserAccountAuth($input: TokenUserAccountAuthInput!) {
  emailTokenUserAccountAuth(input: $input) {
    ...AuthResolverResponse
  }
}

# Authenticates a user account via email and authentication token for SAML.
mutation samlTokenUserAccountAuth($input: TokenUserAccountAuthInput!) {
  samlTokenUserAccountAuth(input: $input) {
    ...AuthResolverResponse
  }
}

# Authenticate user account through Google OAuth. This is the 2nd step of OAuth flow.
mutation googleUserAccountAuth($input: GoogleUserAccountAuthInput!) {
  googleUserAccountAuth(input: $input) {
    ...AuthResolverResponse
  }
}

# Creates an organization from onboarding.
mutation createOrganizationFromOnboarding($survey: OnboardingCustomerSurvey, $input: CreateOrganizationInput!) {
  createOrganizationFromOnboarding(survey: $survey, input: $input) {
    ...CreateOrJoinOrganizationResponse
  }
}

# Join an organization from onboarding.
mutation joinOrganizationFromOnboarding($input: JoinOrganizationInput!) {
  joinOrganizationFromOnboarding(input: $input) {
    ...CreateOrJoinOrganizationResponse
  }
}

# Leave an organization.
mutation leaveOrganization($organizationId: String!) {
  leaveOrganization(organizationId: $organizationId) {
    ...CreateOrJoinOrganizationResponse
  }
}

# Updates the billing email address for the customer.
mutation billingEmailUpdate($input: BillingEmailUpdateInput!) {
  billingEmailUpdate(input: $input) {
    ...BillingEmailPayload
  }
}

# Update collaborative document with client steps.
mutation collaborativeDocumentUpdate($input: CollaborationDocumentUpdateInput!) {
  collaborativeDocumentUpdate(input: $input) {
    ...CollaborationDocumentUpdatePayload
  }
}

# Creates a new comment.
mutation commentCreate($input: CommentCreateInput!) {
  commentCreate(input: $input) {
    ...CommentPayload
  }
}

# Updates a comment.
mutation commentUpdate($input: CommentUpdateInput!, $id: String!) {
  commentUpdate(input: $input, id: $id) {
    ...CommentPayload
  }
}

# Deletes a comment.
mutation commentDelete($id: String!) {
  commentDelete(id: $id) {
    ...ArchivePayload
  }
}

# Saves user message.
mutation contactCreate($input: ContactCreateInput!) {
  contactCreate(input: $input) {
    ...ContactPayload
  }
}

# Creates a new custom view.
mutation customViewCreate($input: CustomViewCreateInput!) {
  customViewCreate(input: $input) {
    ...CustomViewPayload
  }
}

# Updates a custom view.
mutation customViewUpdate($input: CustomViewUpdateInput!, $id: String!) {
  customViewUpdate(input: $input, id: $id) {
    ...CustomViewPayload
  }
}

# Deletes a custom view.
mutation customViewDelete($id: String!) {
  customViewDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new cycle.
mutation cycleCreate($input: CycleCreateInput!) {
  cycleCreate(input: $input) {
    ...CyclePayload
  }
}

# Updates a cycle.
mutation cycleUpdate($input: CycleUpdateInput!, $id: String!) {
  cycleUpdate(input: $input, id: $id) {
    ...CyclePayload
  }
}

# Archives a cycle.
mutation cycleArchive($id: String!) {
  cycleArchive(id: $id) {
    ...ArchivePayload
  }
}

# Always fails with internal error. Used to debug logging.
mutation debugFailWithInternalError {
  debugFailWithInternalError {
    ...DebugPayload
  }
}

# Always logs an error to Sentry as warning. Used to debug logging.
mutation debugFailWithWarning {
  debugFailWithWarning {
    ...DebugPayload
  }
}

# Create the SAML test organization in development.
mutation debugCreateSAMLOrg {
  debugCreateSAMLOrg {
    ...DebugPayload
  }
}

# Unsubscribes the user from one type of emails.
mutation emailUnsubscribe($input: EmailUnsubscribeInput!) {
  emailUnsubscribe(input: $input) {
    ...EmailUnsubscribePayload
  }
}

# Creates a custom emoji.
mutation emojiCreate($input: EmojiCreateInput!) {
  emojiCreate(input: $input) {
    ...EmojiPayload
  }
}

# Deletes an emoji.
mutation emojiDelete($id: String!) {
  emojiDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new favorite (project, cycle etc).
mutation favoriteCreate($input: FavoriteCreateInput!) {
  favoriteCreate(input: $input) {
    ...FavoritePayload
  }
}

# Updates a favorite.
mutation favoriteUpdate($input: FavoriteUpdateInput!, $id: String!) {
  favoriteUpdate(input: $input, id: $id) {
    ...FavoritePayload
  }
}

# Deletes a favorite reference.
mutation favoriteDelete($id: String!) {
  favoriteDelete(id: $id) {
    ...ArchivePayload
  }
}

# Saves user feedback.
mutation feedbackCreate($input: FeedbackCreateInput!) {
  feedbackCreate(input: $input) {
    ...FeedbackPayload
  }
}

# XHR request payload to upload an images, video and other attachments directly to Linear's cloud storage.
mutation fileUpload($metaData: JSON, $size: Int!, $contentType: String!, $filename: String!) {
  fileUpload(metaData: $metaData, size: $size, contentType: $contentType, filename: $filename) {
    ...UploadPayload
  }
}

# Upload an image from an URL to Linear.
mutation imageUploadFromUrl($url: String!) {
  imageUploadFromUrl(url: $url) {
    ...ImageUploadFromUrlPayload
  }
}

# Connects the organization with the GitHub App.
mutation integrationGithubConnect($installationId: String!) {
  integrationGithubConnect(installationId: $installationId) {
    ...IntegrationPayload
  }
}

# Connects the organization with a GitLab Access Token.
mutation integrationGitlabConnect($gitlabUrl: String!, $accessToken: String!) {
  integrationGitlabConnect(gitlabUrl: $gitlabUrl, accessToken: $accessToken) {
    ...IntegrationPayload
  }
}

# Integrates the organization with Slack.
mutation integrationSlack($shouldUseV2Auth: Boolean, $redirectUri: String!, $code: String!) {
  integrationSlack(shouldUseV2Auth: $shouldUseV2Auth, redirectUri: $redirectUri, code: $code) {
    ...IntegrationPayload
  }
}

# Integrates your personal notifications with Slack.
mutation integrationSlackPersonal($redirectUri: String!, $code: String!) {
  integrationSlackPersonal(redirectUri: $redirectUri, code: $code) {
    ...IntegrationPayload
  }
}

# Slack webhook integration.
mutation integrationSlackPost($shouldUseV2Auth: Boolean, $redirectUri: String!, $teamId: String!, $code: String!) {
  integrationSlackPost(shouldUseV2Auth: $shouldUseV2Auth, redirectUri: $redirectUri, teamId: $teamId, code: $code) {
    ...IntegrationPayload
  }
}

# Slack integration for project notifications.
mutation integrationSlackProjectPost($redirectUri: String!, $projectId: String!, $code: String!) {
  integrationSlackProjectPost(redirectUri: $redirectUri, projectId: $projectId, code: $code) {
    ...IntegrationPayload
  }
}

# Imports custom emojis from your Slack workspace.
mutation integrationSlackImportEmojis($redirectUri: String!, $code: String!) {
  integrationSlackImportEmojis(redirectUri: $redirectUri, code: $code) {
    ...IntegrationPayload
  }
}

# Integrates the organization with Figma.
mutation integrationFigma($redirectUri: String!, $code: String!) {
  integrationFigma(redirectUri: $redirectUri, code: $code) {
    ...IntegrationPayload
  }
}

# Integrates the organization with Google Sheets.
mutation integrationGoogleSheets($code: String!) {
  integrationGoogleSheets(code: $code) {
    ...IntegrationPayload
  }
}

# Manually update Google Sheets data.
mutation refreshGoogleSheetsData($id: String!) {
  refreshGoogleSheetsData(id: $id) {
    ...IntegrationPayload
  }
}

# Integrates the organization with Sentry.
mutation integrationSentryConnect($organizationSlug: String!, $code: String!, $installationId: String!) {
  integrationSentryConnect(organizationSlug: $organizationSlug, code: $code, installationId: $installationId) {
    ...IntegrationPayload
  }
}

# Deletes an integration.
mutation integrationDelete($id: String!) {
  integrationDelete(id: $id) {
    ...ArchivePayload
  }
}

# Archives an integration resource.
mutation integrationResourceArchive($id: String!) {
  integrationResourceArchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new label.
mutation issueLabelCreate($input: IssueLabelCreateInput!) {
  issueLabelCreate(input: $input) {
    ...IssueLabelPayload
  }
}

# Updates an label.
mutation issueLabelUpdate($input: IssueLabelUpdateInput!, $id: String!) {
  issueLabelUpdate(input: $input, id: $id) {
    ...IssueLabelPayload
  }
}

# Archives an issue label.
mutation issueLabelArchive($id: String!) {
  issueLabelArchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new issue relation.
mutation issueRelationCreate($input: IssueRelationCreateInput!) {
  issueRelationCreate(input: $input) {
    ...IssueRelationPayload
  }
}

# Updates an issue relation.
mutation issueRelationUpdate($input: IssueRelationUpdateInput!, $id: String!) {
  issueRelationUpdate(input: $input, id: $id) {
    ...IssueRelationPayload
  }
}

# Deletes an issue relation.
mutation issueRelationDelete($id: String!) {
  issueRelationDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new issue.
mutation issueCreate($input: IssueCreateInput!) {
  issueCreate(input: $input) {
    ...IssuePayload
  }
}

# Updates an issue.
mutation issueUpdate($input: IssueUpdateInput!, $id: String!) {
  issueUpdate(input: $input, id: $id) {
    ...IssuePayload
  }
}

# Archives an issue.
mutation issueArchive($id: String!) {
  issueArchive(id: $id) {
    ...ArchivePayload
  }
}

# Unarchives an issue.
mutation issueUnarchive($id: String!) {
  issueUnarchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new milestone.
mutation milestoneCreate($input: MilestoneCreateInput!) {
  milestoneCreate(input: $input) {
    ...MilestonePayload
  }
}

# Updates a milestone.
mutation milestoneUpdate($input: MilestoneUpdateInput!, $id: String!) {
  milestoneUpdate(input: $input, id: $id) {
    ...MilestonePayload
  }
}

# Deletes a milestone.
mutation milestoneDelete($id: String!) {
  milestoneDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a notification.
mutation notificationCreate($input: NotificationUpdateInput!, $id: String!) {
  notificationCreate(input: $input, id: $id) {
    ...NotificationPayload
  }
}

# Updates a notification.
mutation notificationUpdate($input: NotificationUpdateInput!, $id: String!) {
  notificationUpdate(input: $input, id: $id) {
    ...NotificationPayload
  }
}

# [Deprecated] Deletes a notification.
mutation notificationDelete($id: String!) {
  notificationDelete(id: $id) {
    ...ArchivePayload
  }
}

# Archives a notification.
mutation notificationArchive($id: String!) {
  notificationArchive(id: $id) {
    ...ArchivePayload
  }
}

# Unarchives a notification.
mutation notificationUnarchive($id: String!) {
  notificationUnarchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new notification subscription for a team or a project.
mutation notificationSubscriptionCreate($input: NotificationSubscriptionCreateInput!) {
  notificationSubscriptionCreate(input: $input) {
    ...NotificationSubscriptionPayload
  }
}

# Deletes a notification subscription reference.
mutation notificationSubscriptionDelete($id: String!) {
  notificationSubscriptionDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new OAuth client.
mutation oauthClientCreate($input: OauthClientCreateInput!) {
  oauthClientCreate(input: $input) {
    ...OauthClientPayload
  }
}

# Updates an OAuth client.
mutation oauthClientUpdate($input: OauthClientUpdateInput!, $id: String!) {
  oauthClientUpdate(input: $input, id: $id) {
    ...OauthClientPayload
  }
}

# Archives an OAuth client.
mutation oauthClientArchive($id: String!) {
  oauthClientArchive(id: $id) {
    ...ArchivePayload
  }
}

# Updates an OAuth client.
mutation oauthClientRotateSecret($id: String!) {
  oauthClientRotateSecret(id: $id) {
    ...RotateSecretPayload
  }
}

# Revokes an OAuth token.
mutation oauthTokenRevoke($scope: [String!]!, $appId: String!) {
  oauthTokenRevoke(scope: $scope, appId: $appId) {
    ...OauthTokenRevokePayload
  }
}

# Verifies a domain to be added to an organization.
mutation organizationDomainVerify($input: OrganizationDomainVerificationInput!) {
  organizationDomainVerify(input: $input) {
    ...OrganizationDomainPayload
  }
}

# Adds a domain to be allowed for an organization.
mutation organizationDomainCreate($input: OrganizationDomainCreateInput!) {
  organizationDomainCreate(input: $input) {
    ...OrganizationDomainPayload
  }
}

# Deletes a domain.
mutation organizationDomainDelete($id: String!) {
  organizationDomainDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new organization invite.
mutation organizationInviteCreate($input: OrganizationInviteCreateInput!) {
  organizationInviteCreate(input: $input) {
    ...OrganizationInvitePayload
  }
}

# Re-send an organization invite.
mutation resentOrganizationInvite($id: String!) {
  resentOrganizationInvite(id: $id) {
    ...ArchivePayload
  }
}

# Deletes an organization invite.
mutation organizationInviteDelete($id: String!) {
  organizationInviteDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new project link.
mutation projectLinkCreate($input: ProjectLinkCreateInput!) {
  projectLinkCreate(input: $input) {
    ...ProjectLinkPayload
  }
}

# Deletes a project link.
mutation projectLinkDelete($id: String!) {
  projectLinkDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new project.
mutation projectCreate($input: ProjectCreateInput!) {
  projectCreate(input: $input) {
    ...ProjectPayload
  }
}

# Updates a project.
mutation projectUpdate($input: ProjectUpdateInput!, $id: String!) {
  projectUpdate(input: $input, id: $id) {
    ...ProjectPayload
  }
}

# Archives a project.
mutation projectArchive($id: String!) {
  projectArchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a push subscription.
mutation pushSubscriptionCreate($input: PushSubscriptionCreateInput!) {
  pushSubscriptionCreate(input: $input) {
    ...PushSubscriptionPayload
  }
}

# Deletes a push subscription.
mutation pushSubscriptionDelete($id: String!) {
  pushSubscriptionDelete(id: $id) {
    ...PushSubscriptionPayload
  }
}

# Creates a new reaction.
mutation reactionCreate($input: ReactionCreateInput!) {
  reactionCreate(input: $input) {
    ...ReactionPayload
  }
}

# Deletes a reaction.
mutation reactionDelete($id: String!) {
  reactionDelete(id: $id) {
    ...ArchivePayload
  }
}

# Create CSV export report for the organization.
mutation createCsvExportReport {
  createCsvExportReport {
    ...CreateCsvExportReportPayload
  }
}

# Creates a subscription session. Used internally to integrate with Stripe.
mutation subscriptionSessionCreate($plan: String!) {
  subscriptionSessionCreate(plan: $plan) {
    ...SubscriptionSessionPayload
  }
}

# Creates a subscription update session. Used internally to integrate with Stripe.
mutation subscriptionUpdateSessionCreate {
  subscriptionUpdateSessionCreate {
    ...SubscriptionSessionPayload
  }
}

# Updates a subscription.
mutation subscriptionUpdate($input: SubscriptionUpdateInput!, $id: String!) {
  subscriptionUpdate(input: $input, id: $id) {
    ...SubscriptionPayload
  }
}

# Upgrades a subscription plan.
mutation subscriptionUpgrade($type: String!, $id: String!) {
  subscriptionUpgrade(type: $type, id: $id) {
    ...SubscriptionPayload
  }
}

# Archives a subscription.
mutation subscriptionArchive($id: String!) {
  subscriptionArchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new team membership.
mutation teamMembershipCreate($input: TeamMembershipCreateInput!) {
  teamMembershipCreate(input: $input) {
    ...TeamMembershipPayload
  }
}

# Deletes a team membership.
mutation teamMembershipDelete($id: String!) {
  teamMembershipDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new team. The user who creates the team will automatically be added as a member to the newly created team.
mutation teamCreate($copySettingsFromTeamId: String, $input: TeamCreateInput!) {
  teamCreate(copySettingsFromTeamId: $copySettingsFromTeamId, input: $input) {
    ...TeamPayload
  }
}

# Updates a team.
mutation teamUpdate($input: TeamUpdateInput!, $id: String!) {
  teamUpdate(input: $input, id: $id) {
    ...TeamPayload
  }
}

# Archives a team.
mutation teamArchive($id: String!) {
  teamArchive(id: $id) {
    ...ArchivePayload
  }
}

# Deletes a team.
mutation teamDelete($id: String!) {
  teamDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new template.
mutation templateCreate($input: TemplateCreateInput!) {
  templateCreate(input: $input) {
    ...TemplatePayload
  }
}

# Updates an existing template.
mutation templateUpdate($input: TemplateUpdateInput!, $id: String!) {
  templateUpdate(input: $input, id: $id) {
    ...TemplatePayload
  }
}

# Deletes a template.
mutation templateDelete($id: String!) {
  templateDelete(id: $id) {
    ...ArchivePayload
  }
}

# Updates the user's settings.
mutation userSettingsUpdate($input: UserSettingsUpdateInput!, $id: String!) {
  userSettingsUpdate(input: $input, id: $id) {
    ...UserSettingsPayload
  }
}

# [Deprecated] Updates a user's settings flag.
mutation userSettingsFlagIncrement($flag: String!) {
  userSettingsFlagIncrement(flag: $flag) {
    ...UserSettingsFlagPayload
  }
}

# Resets user's setting flags.
mutation userSettingsFlagsReset {
  userSettingsFlagsReset {
    ...UserSettingsFlagsResetPayload
  }
}

# Updates a user's settings flag.
mutation userFlagUpdate($operation: UserFlagUpdateOperation!, $flag: UserFlagType!) {
  userFlagUpdate(operation: $operation, flag: $flag) {
    ...UserSettingsFlagPayload
  }
}

# Subscribes user to changelog newsletter.
mutation userSubscribeToNewsletter {
  userSubscribeToNewsletter {
    ...UserSubscribeToNewsletterPayload
  }
}

# Creates a new ViewPreferences object.
mutation viewPreferencesCreate($input: ViewPreferencesCreateInput!) {
  viewPreferencesCreate(input: $input) {
    ...ViewPreferencesPayload
  }
}

# Updates an existing ViewPreferences object.
mutation viewPreferencesUpdate($input: ViewPreferencesUpdateInput!, $id: String!) {
  viewPreferencesUpdate(input: $input, id: $id) {
    ...ViewPreferencesPayload
  }
}

# Deletes a ViewPreferences.
mutation viewPreferencesDelete($id: String!) {
  viewPreferencesDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new webhook.
mutation webhookCreate($input: WebhookCreateInput!) {
  webhookCreate(input: $input) {
    ...WebhookPayload
  }
}

# Updates an existing Webhook.
mutation webhookUpdate($input: WebhookUpdateInput!, $id: String!) {
  webhookUpdate(input: $input, id: $id) {
    ...WebhookPayload
  }
}

# Deletes a Webhook.
mutation webhookDelete($id: String!) {
  webhookDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new state, adding it to the workflow of a team.
mutation workflowStateCreate($input: WorkflowStateCreateInput!) {
  workflowStateCreate(input: $input) {
    ...WorkflowStatePayload
  }
}

# Updates a state.
mutation workflowStateUpdate($input: WorkflowStateUpdateInput!, $id: String!) {
  workflowStateUpdate(input: $input, id: $id) {
    ...WorkflowStatePayload
  }
}

# Archives a state. Only states with issues that have all been archived can be archived.
mutation workflowStateArchive($id: String!) {
  workflowStateArchive(id: $id) {
    ...ArchivePayload
  }
}
