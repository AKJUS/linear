# A user that has access to the the resources of an organization.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A user that has access to the the resources of an organization."
#   },
#   "name": "User",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "name",
#     "displayName",
#     "email",
#     "avatarUrl",
#     "disableReason",
#     "inviteHash",
#     "userAccountId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The settings of the user.\"\n#   },\n#   \"name\": \"settings\",\n#   \"arguments\": [],\n#   \"type\": \"UserSettings\",\n#   \"directives\": []\n# }",
#     "admin",
#     "active",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Issues assigned to the user.\"\n#   },\n#   \"name\": \"assignedIssues\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IssueConnection\",\n#   \"directives\": []\n# }\nassignedIssues {\n            query\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Issues created by the user.\"\n#   },\n#   \"name\": \"createdIssues\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IssueConnection\",\n#   \"directives\": []\n# }\ncreatedIssues {\n            query\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Organization in which the user belongs to.\"\n#   },\n#   \"name\": \"organization\",\n#   \"arguments\": [],\n#   \"type\": \"Organization\",\n#   \"directives\": []\n# }",
#     "createdIssueCount",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Memberships associated with the user.\"\n#   },\n#   \"name\": \"teamMemberships\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"TeamMembershipConnection\",\n#   \"directives\": []\n# }"
#   ]
# }
fragment User on User {
  id
  name
  displayName
  email
  avatarUrl
  disableReason
  inviteHash
  userAccountId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The settings of the user."
  #   },
  #   "name": "settings",
  #   "arguments": [],
  #   "type": "UserSettings",
  #   "directives": []
  # }
  admin
  active
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Issues assigned to the user."
  #   },
  #   "name": "assignedIssues",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IssueConnection",
  #   "directives": []
  # }
  assignedIssues {
    query
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Issues created by the user."
  #   },
  #   "name": "createdIssues",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IssueConnection",
  #   "directives": []
  # }
  createdIssues {
    query
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Organization in which the user belongs to."
  #   },
  #   "name": "organization",
  #   "arguments": [],
  #   "type": "Organization",
  #   "directives": []
  # }
  createdIssueCount
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Memberships associated with the user."
  #   },
  #   "name": "teamMemberships",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "TeamMembershipConnection",
  #   "directives": []
  # }
}

# The settings of a user as a JSON object.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "The settings of a user as a JSON object."
#   },
#   "name": "UserSettings",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "unsubscribedFrom",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user to whom this notification was targeted for.\"\n#   },\n#   \"name\": \"user\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\nuser {\n            id\n          }"
#   ]
# }
fragment UserSettings on UserSettings {
  id
  createdAt
  updatedAt
  archivedAt
  unsubscribedFrom
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user to whom this notification was targeted for."
  #   },
  #   "name": "user",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  user {
    id
  }
}

# An issue.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An issue."
#   },
#   "name": "Issue",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "number",
#     "title",
#     "description",
#     "priority",
#     "estimate",
#     "boardOrder",
#     "startedAt",
#     "completedAt",
#     "canceledAt",
#     "autoClosedAt",
#     "autoArchivedAt",
#     "previousIdentifiers",
#     "subIssueSortOrder",
#     "identifier",
#     "priorityLabel",
#     "url",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that the issue is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\nteam {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The cycle that the issue is associated with.\"\n#   },\n#   \"name\": \"cycle\",\n#   \"arguments\": [],\n#   \"type\": \"Cycle\",\n#   \"directives\": []\n# }\ncycle {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The workflow state that the issue is associated with.\"\n#   },\n#   \"name\": \"state\",\n#   \"arguments\": [],\n#   \"type\": \"WorkflowState\",\n#   \"directives\": []\n# }\nstate {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user to whom the issue is assigned to.\"\n#   },\n#   \"name\": \"assignee\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\nassignee {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The parent of the issue.\"\n#   },\n#   \"name\": \"parent\",\n#   \"arguments\": [],\n#   \"type\": \"Issue\",\n#   \"directives\": []\n# }\nparent {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project that the issue is associated with.\"\n#   },\n#   \"name\": \"project\",\n#   \"arguments\": [],\n#   \"type\": \"Project\",\n#   \"directives\": []\n# }\nproject {\n            id\n          }",
#     "branchName",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Users who are subscribed to the issue.\"\n#   },\n#   \"name\": \"subscribers\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"UserConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the issue.\"\n#   },\n#   \"name\": \"creator\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ncreator {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Children of the issue.\"\n#   },\n#   \"name\": \"children\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IssueConnection\",\n#   \"directives\": []\n# }\nchildren {\n            query\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Comments associated with the issue.\"\n#   },\n#   \"name\": \"comments\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"CommentConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Labels associated with this issue.\"\n#   },\n#   \"name\": \"labels\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IssueLabelConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Integration resources for this issue.\"\n#   },\n#   \"name\": \"integrationResources\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IntegrationResourceConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Relations associated with this issue.\"\n#   },\n#   \"name\": \"relations\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IssueRelationConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Inverse relations associated with this issue.\"\n#   },\n#   \"name\": \"inverseRelations\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IssueRelationConnection\",\n#   \"directives\": []\n# }"
#   ]
# }
fragment Issue on Issue {
  id
  createdAt
  updatedAt
  archivedAt
  number
  title
  description
  priority
  estimate
  boardOrder
  startedAt
  completedAt
  canceledAt
  autoClosedAt
  autoArchivedAt
  previousIdentifiers
  subIssueSortOrder
  identifier
  priorityLabel
  url
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that the issue is associated with."
  #   },
  #   "name": "team",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The cycle that the issue is associated with."
  #   },
  #   "name": "cycle",
  #   "arguments": [],
  #   "type": "Cycle",
  #   "directives": []
  # }
  cycle {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The workflow state that the issue is associated with."
  #   },
  #   "name": "state",
  #   "arguments": [],
  #   "type": "WorkflowState",
  #   "directives": []
  # }
  state {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user to whom the issue is assigned to."
  #   },
  #   "name": "assignee",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  assignee {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The parent of the issue."
  #   },
  #   "name": "parent",
  #   "arguments": [],
  #   "type": "Issue",
  #   "directives": []
  # }
  parent {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project that the issue is associated with."
  #   },
  #   "name": "project",
  #   "arguments": [],
  #   "type": "Project",
  #   "directives": []
  # }
  project {
    id
  }
  branchName
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Users who are subscribed to the issue."
  #   },
  #   "name": "subscribers",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "UserConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the issue."
  #   },
  #   "name": "creator",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Children of the issue."
  #   },
  #   "name": "children",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IssueConnection",
  #   "directives": []
  # }
  children {
    query
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Comments associated with the issue."
  #   },
  #   "name": "comments",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "CommentConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Labels associated with this issue."
  #   },
  #   "name": "labels",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IssueLabelConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Integration resources for this issue."
  #   },
  #   "name": "integrationResources",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IntegrationResourceConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Relations associated with this issue."
  #   },
  #   "name": "relations",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IssueRelationConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Inverse relations associated with this issue."
  #   },
  #   "name": "inverseRelations",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IssueRelationConnection",
  #   "directives": []
  # }
}

# An organizational unit that contains issues.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An organizational unit that contains issues."
#   },
#   "name": "Team",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "name",
#     "key",
#     "description",
#     "cyclesEnabled",
#     "cycleStartDay",
#     "cycleDuration",
#     "cycleCooldownTime",
#     "cycleIssueAutoAssignStarted",
#     "cycleIssueAutoAssignCompleted",
#     "cycleLockToActive",
#     "upcomingCycleCount",
#     "timezone",
#     "inviteHash",
#     "issueEstimationType",
#     "issueEstimationAllowZero",
#     "issueEstimationExtended",
#     "defaultIssueEstimate",
#     "defaultTemplateForMembersId",
#     "defaultTemplateForNonMembersId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The workflow state into which issues are moved when a PR has been opened as draft.\"\n#   },\n#   \"name\": \"draftWorkflowState\",\n#   \"arguments\": [],\n#   \"type\": \"WorkflowState\",\n#   \"directives\": []\n# }\ndraftWorkflowState {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The workflow state into which issues are moved when a PR has been opened.\"\n#   },\n#   \"name\": \"startWorkflowState\",\n#   \"arguments\": [],\n#   \"type\": \"WorkflowState\",\n#   \"directives\": []\n# }\nstartWorkflowState {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The workflow state into which issues are moved when a review has been requested for the PR.\"\n#   },\n#   \"name\": \"reviewWorkflowState\",\n#   \"arguments\": [],\n#   \"type\": \"WorkflowState\",\n#   \"directives\": []\n# }\nreviewWorkflowState {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The workflow state into which issues are moved when a PR has been merged.\"\n#   },\n#   \"name\": \"mergeWorkflowState\",\n#   \"arguments\": [],\n#   \"type\": \"WorkflowState\",\n#   \"directives\": []\n# }\nmergeWorkflowState {\n            id\n          }",
#     "groupIssueHistory",
#     "slackNewIssue",
#     "slackIssueComments",
#     "slackIssueStatuses",
#     "autoClosePeriod",
#     "autoCloseStateId",
#     "autoArchivePeriod",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state.\"\n#   },\n#   \"name\": \"markedAsDuplicateWorkflowState\",\n#   \"arguments\": [],\n#   \"type\": \"WorkflowState\",\n#   \"directives\": []\n# }\nmarkedAsDuplicateWorkflowState {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Issues associated with the team.\"\n#   },\n#   \"name\": \"issues\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IssueConnection\",\n#   \"directives\": []\n# }\nissues {\n            query\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Cycles associated with the team.\"\n#   },\n#   \"name\": \"cycles\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"CycleConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Team's currently active cycle.\"\n#   },\n#   \"name\": \"activeCycle\",\n#   \"arguments\": [],\n#   \"type\": \"Cycle\",\n#   \"directives\": []\n# }\nactiveCycle {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Memberships associated with the team.\"\n#   },\n#   \"name\": \"memberships\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"TeamMembershipConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Projects associated with the team.\"\n#   },\n#   \"name\": \"projects\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"ProjectConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The states that define the workflow associated with the team.\"\n#   },\n#   \"name\": \"states\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"WorkflowStateConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Labels associated with the team.\"\n#   },\n#   \"name\": \"labels\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IssueLabelConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization that the team is associated with.\"\n#   },\n#   \"name\": \"organization\",\n#   \"arguments\": [],\n#   \"type\": \"Organization\",\n#   \"directives\": []\n# }",
#     "cycleCalenderUrl",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Webhooks associated with the team.\"\n#   },\n#   \"name\": \"webhooks\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"WebhookConnection\",\n#   \"directives\": []\n# }"
#   ]
# }
fragment Team on Team {
  id
  createdAt
  updatedAt
  archivedAt
  name
  key
  description
  cyclesEnabled
  cycleStartDay
  cycleDuration
  cycleCooldownTime
  cycleIssueAutoAssignStarted
  cycleIssueAutoAssignCompleted
  cycleLockToActive
  upcomingCycleCount
  timezone
  inviteHash
  issueEstimationType
  issueEstimationAllowZero
  issueEstimationExtended
  defaultIssueEstimate
  defaultTemplateForMembersId
  defaultTemplateForNonMembersId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The workflow state into which issues are moved when a PR has been opened as draft."
  #   },
  #   "name": "draftWorkflowState",
  #   "arguments": [],
  #   "type": "WorkflowState",
  #   "directives": []
  # }
  draftWorkflowState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The workflow state into which issues are moved when a PR has been opened."
  #   },
  #   "name": "startWorkflowState",
  #   "arguments": [],
  #   "type": "WorkflowState",
  #   "directives": []
  # }
  startWorkflowState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The workflow state into which issues are moved when a review has been requested for the PR."
  #   },
  #   "name": "reviewWorkflowState",
  #   "arguments": [],
  #   "type": "WorkflowState",
  #   "directives": []
  # }
  reviewWorkflowState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The workflow state into which issues are moved when a PR has been merged."
  #   },
  #   "name": "mergeWorkflowState",
  #   "arguments": [],
  #   "type": "WorkflowState",
  #   "directives": []
  # }
  mergeWorkflowState {
    id
  }
  groupIssueHistory
  slackNewIssue
  slackIssueComments
  slackIssueStatuses
  autoClosePeriod
  autoCloseStateId
  autoArchivePeriod
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The workflow state into which issues are moved when they are marked as a duplicate of another issue. Defaults to the first canceled state."
  #   },
  #   "name": "markedAsDuplicateWorkflowState",
  #   "arguments": [],
  #   "type": "WorkflowState",
  #   "directives": []
  # }
  markedAsDuplicateWorkflowState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Issues associated with the team."
  #   },
  #   "name": "issues",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IssueConnection",
  #   "directives": []
  # }
  issues {
    query
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Cycles associated with the team."
  #   },
  #   "name": "cycles",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "CycleConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Team's currently active cycle."
  #   },
  #   "name": "activeCycle",
  #   "arguments": [],
  #   "type": "Cycle",
  #   "directives": []
  # }
  activeCycle {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Memberships associated with the team."
  #   },
  #   "name": "memberships",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "TeamMembershipConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Projects associated with the team."
  #   },
  #   "name": "projects",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "ProjectConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The states that define the workflow associated with the team."
  #   },
  #   "name": "states",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "WorkflowStateConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Labels associated with the team."
  #   },
  #   "name": "labels",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IssueLabelConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization that the team is associated with."
  #   },
  #   "name": "organization",
  #   "arguments": [],
  #   "type": "Organization",
  #   "directives": []
  # }
  cycleCalenderUrl
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Webhooks associated with the team."
  #   },
  #   "name": "webhooks",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "WebhookConnection",
  #   "directives": []
  # }
}

# A state in a team workflow.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A state in a team workflow."
#   },
#   "name": "WorkflowState",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "name",
#     "color",
#     "description",
#     "position",
#     "type",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team to which this state belongs to.\"\n#   },\n#   \"name\": \"team\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\nteam {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Issues belonging in this state.\"\n#   },\n#   \"name\": \"issues\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IssueConnection\",\n#   \"directives\": []\n# }\nissues {\n            query\n          }"
#   ]
# }
fragment WorkflowState on WorkflowState {
  id
  createdAt
  updatedAt
  archivedAt
  name
  color
  description
  position
  type
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team to which this state belongs to."
  #   },
  #   "name": "team",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Issues belonging in this state."
  #   },
  #   "name": "issues",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IssueConnection",
  #   "directives": []
  # }
  issues {
    query
  }
}

# A set of issues to be resolved in a specified amount of time.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A set of issues to be resolved in a specified amount of time."
#   },
#   "name": "Cycle",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "number",
#     "name",
#     "startsAt",
#     "endsAt",
#     "completedAt",
#     "issueCountHistory",
#     "completedIssueCountHistory",
#     "scopeHistory",
#     "completedScopeHistory",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that the cycle is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\nteam {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Issues associated with the cycle.\"\n#   },\n#   \"name\": \"issues\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IssueConnection\",\n#   \"directives\": []\n# }\nissues {\n            query\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Issues that weren't completed when the cycle was closed.\"\n#   },\n#   \"name\": \"uncompletedIssuesUponClose\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IssueConnection\",\n#   \"directives\": []\n# }\nuncompletedIssuesUponClose {\n            query\n          }"
#   ]
# }
fragment Cycle on Cycle {
  id
  createdAt
  updatedAt
  archivedAt
  number
  name
  startsAt
  endsAt
  completedAt
  issueCountHistory
  completedIssueCountHistory
  scopeHistory
  completedScopeHistory
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that the cycle is associated with."
  #   },
  #   "name": "team",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Issues associated with the cycle."
  #   },
  #   "name": "issues",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IssueConnection",
  #   "directives": []
  # }
  issues {
    query
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Issues that weren't completed when the cycle was closed."
  #   },
  #   "name": "uncompletedIssuesUponClose",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IssueConnection",
  #   "directives": []
  # }
  uncompletedIssuesUponClose {
    query
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "PageInfo",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "hasPreviousPage",
#     "hasNextPage",
#     "startCursor",
#     "endCursor"
#   ]
# }
fragment PageInfo on PageInfo {
  hasPreviousPage
  hasNextPage
  startCursor
  endCursor
}

# Defines the membership of a user to a team.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Defines the membership of a user to a team."
#   },
#   "name": "TeamMembership",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user that the membership is associated with.\"\n#   },\n#   \"name\": \"user\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\nuser {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that the membership is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\nteam {\n            id\n          }"
#   ]
# }
fragment TeamMembership on TeamMembership {
  id
  createdAt
  updatedAt
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user that the membership is associated with."
  #   },
  #   "name": "user",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  user {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that the membership is associated with."
  #   },
  #   "name": "team",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  team {
    id
  }
}

# A project.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A project."
#   },
#   "name": "Project",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "name",
#     "description",
#     "slugId",
#     "icon",
#     "color",
#     "state",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the project.\"\n#   },\n#   \"name\": \"creator\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ncreator {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project lead.\"\n#   },\n#   \"name\": \"lead\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\nlead {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The milestone that this project is associated with.\"\n#   },\n#   \"name\": \"milestone\",\n#   \"arguments\": [],\n#   \"type\": \"Milestone\",\n#   \"directives\": []\n# }\nmilestone {\n            id\n          }",
#     "targetDate",
#     "startedAt",
#     "completedAt",
#     "canceledAt",
#     "sortOrder",
#     "issueCountHistory",
#     "completedIssueCountHistory",
#     "scopeHistory",
#     "completedScopeHistory",
#     "slackNewIssue",
#     "slackIssueComments",
#     "slackIssueStatuses",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Teams associated with this project.\"\n#   },\n#   \"name\": \"teams\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"TeamConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Users that are members of the project.\"\n#   },\n#   \"name\": \"members\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"UserConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Issues associated with the project.\"\n#   },\n#   \"name\": \"issues\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IssueConnection\",\n#   \"directives\": []\n# }\nissues {\n            query\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Links associated with the project.\"\n#   },\n#   \"name\": \"links\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"ProjectLinkConnection\",\n#   \"directives\": []\n# }"
#   ]
# }
fragment Project on Project {
  id
  createdAt
  updatedAt
  archivedAt
  name
  description
  slugId
  icon
  color
  state
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the project."
  #   },
  #   "name": "creator",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project lead."
  #   },
  #   "name": "lead",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  lead {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The milestone that this project is associated with."
  #   },
  #   "name": "milestone",
  #   "arguments": [],
  #   "type": "Milestone",
  #   "directives": []
  # }
  milestone {
    id
  }
  targetDate
  startedAt
  completedAt
  canceledAt
  sortOrder
  issueCountHistory
  completedIssueCountHistory
  scopeHistory
  completedScopeHistory
  slackNewIssue
  slackIssueComments
  slackIssueStatuses
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Teams associated with this project."
  #   },
  #   "name": "teams",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "TeamConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Users that are members of the project."
  #   },
  #   "name": "members",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "UserConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Issues associated with the project."
  #   },
  #   "name": "issues",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IssueConnection",
  #   "directives": []
  # }
  issues {
    query
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Links associated with the project."
  #   },
  #   "name": "links",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "ProjectLinkConnection",
  #   "directives": []
  # }
}

# A milestone that contains projects.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A milestone that contains projects."
#   },
#   "name": "Milestone",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "name",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization that the milestone belongs to.\"\n#   },\n#   \"name\": \"organization\",\n#   \"arguments\": [],\n#   \"type\": \"Organization\",\n#   \"directives\": []\n# }",
#     "sortOrder",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Projects associated with the milestone.\"\n#   },\n#   \"name\": \"projects\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"ProjectConnection\",\n#   \"directives\": []\n# }"
#   ]
# }
fragment Milestone on Milestone {
  id
  createdAt
  updatedAt
  archivedAt
  name
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization that the milestone belongs to."
  #   },
  #   "name": "organization",
  #   "arguments": [],
  #   "type": "Organization",
  #   "directives": []
  # }
  sortOrder
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Projects associated with the milestone."
  #   },
  #   "name": "projects",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "ProjectConnection",
  #   "directives": []
  # }
}

# An organization. Organizations are root-level objects that contain user accounts and teams.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An organization. Organizations are root-level objects that contain user accounts and teams."
#   },
#   "name": "Organization",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "name",
#     "urlKey",
#     "logoUrl",
#     "upgradeThresholdExceeded",
#     "periodUploadVolume",
#     "gitBranchFormat",
#     "gitLinkbackMessagesEnabled",
#     "gitPublicLinkbackMessagesEnabled",
#     "roadmapEnabled",
#     "samlEnabled",
#     "allowedAuthServices",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Users associated with the organization.\"\n#   },\n#   \"name\": \"users\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"UserConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Teams associated with the organization.\"\n#   },\n#   \"name\": \"teams\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"TeamConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Milestones associated with the organization.\"\n#   },\n#   \"name\": \"milestones\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"MilestoneConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Integrations associated with the organization.\"\n#   },\n#   \"name\": \"integrations\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IntegrationConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization's subscription to a paid plan.\"\n#   },\n#   \"name\": \"subscription\",\n#   \"arguments\": [],\n#   \"type\": \"Subscription\",\n#   \"directives\": []\n# }",
#     "userCount",
#     "createdIssueCount"
#   ]
# }
fragment Organization on Organization {
  id
  createdAt
  updatedAt
  archivedAt
  name
  urlKey
  logoUrl
  upgradeThresholdExceeded
  periodUploadVolume
  gitBranchFormat
  gitLinkbackMessagesEnabled
  gitPublicLinkbackMessagesEnabled
  roadmapEnabled
  samlEnabled
  allowedAuthServices
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Users associated with the organization."
  #   },
  #   "name": "users",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "UserConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Teams associated with the organization."
  #   },
  #   "name": "teams",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "TeamConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Milestones associated with the organization."
  #   },
  #   "name": "milestones",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "MilestoneConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Integrations associated with the organization."
  #   },
  #   "name": "integrations",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IntegrationConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization's subscription to a paid plan."
  #   },
  #   "name": "subscription",
  #   "arguments": [],
  #   "type": "Subscription",
  #   "directives": []
  # }
  userCount
  createdIssueCount
}

# An integration with an external service.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An integration with an external service."
#   },
#   "name": "Integration",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "service",
#     "serviceId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization that the integration is associated with.\"\n#   },\n#   \"name\": \"organization\",\n#   \"arguments\": [],\n#   \"type\": \"Organization\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that the integration is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\nteam {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user that added the integration.\"\n#   },\n#   \"name\": \"creator\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ncreator {\n            id\n          }"
#   ]
# }
fragment Integration on Integration {
  id
  createdAt
  updatedAt
  archivedAt
  service
  serviceId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization that the integration is associated with."
  #   },
  #   "name": "organization",
  #   "arguments": [],
  #   "type": "Organization",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that the integration is associated with."
  #   },
  #   "name": "team",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user that added the integration."
  #   },
  #   "name": "creator",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  creator {
    id
  }
}

# Slack notification specific settings.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Slack notification specific settings."
#   },
#   "name": "SlackPostSettings",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "channel",
#     "channelId",
#     "configurationUrl"
#   ]
# }
fragment SlackPostSettings on SlackPostSettings {
  channel
  channelId
  configurationUrl
}

# Google Sheets specific settings.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Google Sheets specific settings."
#   },
#   "name": "GoogleSheetsSettings",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "spreadsheetId",
#     "spreadsheetUrl",
#     "sheetId",
#     "updatedIssuesAt"
#   ]
# }
fragment GoogleSheetsSettings on GoogleSheetsSettings {
  spreadsheetId
  spreadsheetUrl
  sheetId
  updatedIssuesAt
}

# Sentry specific settings.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Sentry specific settings."
#   },
#   "name": "SentrySettings",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "organizationSlug"
#   ]
# }
fragment SentrySettings on SentrySettings {
  organizationSlug
}

# The subscription of an organization.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "The subscription of an organization."
#   },
#   "name": "Subscription",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "type",
#     "seats",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The creator of the subscription.\"\n#   },\n#   \"name\": \"creator\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ncreator {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization that the subscription is associated with.\"\n#   },\n#   \"name\": \"organization\",\n#   \"arguments\": [],\n#   \"type\": \"Organization\",\n#   \"directives\": []\n# }",
#     "canceledAt",
#     "pendingChangeType"
#   ]
# }
fragment Subscription on Subscription {
  id
  createdAt
  updatedAt
  archivedAt
  type
  seats
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The creator of the subscription."
  #   },
  #   "name": "creator",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization that the subscription is associated with."
  #   },
  #   "name": "organization",
  #   "arguments": [],
  #   "type": "Organization",
  #   "directives": []
  # }
  canceledAt
  pendingChangeType
}

# An external link for a project.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An external link for a project."
#   },
#   "name": "ProjectLink",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "url",
#     "label",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the link.\"\n#   },\n#   \"name\": \"creator\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ncreator {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project that the link is associated with.\"\n#   },\n#   \"name\": \"project\",\n#   \"arguments\": [],\n#   \"type\": \"Project\",\n#   \"directives\": []\n# }\nproject {\n            id\n          }"
#   ]
# }
fragment ProjectLink on ProjectLink {
  id
  createdAt
  updatedAt
  archivedAt
  url
  label
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the link."
  #   },
  #   "name": "creator",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project that the link is associated with."
  #   },
  #   "name": "project",
  #   "arguments": [],
  #   "type": "Project",
  #   "directives": []
  # }
  project {
    id
  }
}

# A template object used for creating new issues faster.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A template object used for creating new issues faster."
#   },
#   "name": "Template",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "type",
#     "name",
#     "description",
#     "templateData",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that the template is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\nteam {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the template.\"\n#   },\n#   \"name\": \"creator\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ncreator {\n            id\n          }"
#   ]
# }
fragment Template on Template {
  id
  createdAt
  updatedAt
  archivedAt
  type
  name
  description
  templateData
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that the template is associated with."
  #   },
  #   "name": "team",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the template."
  #   },
  #   "name": "creator",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  creator {
    id
  }
}

# Labels that can be associated with issues.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Labels that can be associated with issues."
#   },
#   "name": "IssueLabel",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "name",
#     "description",
#     "color",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team to which the label belongs to.\"\n#   },\n#   \"name\": \"team\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\nteam {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the label.\"\n#   },\n#   \"name\": \"creator\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ncreator {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Issues associated with the label.\"\n#   },\n#   \"name\": \"issues\",\n#   \"arguments\": [\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with last for backward pagination.\"\n#       },\n#       \"name\": \"before\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"A cursor to be used with first for forward pagination\"\n#       },\n#       \"name\": \"after\",\n#       \"type\": \"string\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to forward paginate (used with after). Defaults to 50.\"\n#       },\n#       \"name\": \"first\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"The number of items to backward paginate (used with before). Defaults to 50.\"\n#       },\n#       \"name\": \"last\",\n#       \"type\": \"number\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"Should archived resources be included (default: false)\"\n#       },\n#       \"name\": \"includeArchived\",\n#       \"type\": \"boolean\",\n#       \"directives\": []\n#     },\n#     {\n#       \"kind\": \"InputValueDefinition\",\n#       \"description\": {\n#         \"kind\": \"StringValue\",\n#         \"value\": \"By which field should the pagination order by. Available options are createdAt (default) and updatedAt.\"\n#       },\n#       \"name\": \"orderBy\",\n#       \"type\": \"PaginationOrderBy\",\n#       \"directives\": []\n#     }\n#   ],\n#   \"type\": \"IssueConnection\",\n#   \"directives\": []\n# }\nissues {\n            query\n          }"
#   ]
# }
fragment IssueLabel on IssueLabel {
  id
  createdAt
  updatedAt
  archivedAt
  name
  description
  color
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team to which the label belongs to."
  #   },
  #   "name": "team",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the label."
  #   },
  #   "name": "creator",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Issues associated with the label."
  #   },
  #   "name": "issues",
  #   "arguments": [
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with last for backward pagination."
  #       },
  #       "name": "before",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "A cursor to be used with first for forward pagination"
  #       },
  #       "name": "after",
  #       "type": "string",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to forward paginate (used with after). Defaults to 50."
  #       },
  #       "name": "first",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "The number of items to backward paginate (used with before). Defaults to 50."
  #       },
  #       "name": "last",
  #       "type": "number",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "Should archived resources be included (default: false)"
  #       },
  #       "name": "includeArchived",
  #       "type": "boolean",
  #       "directives": []
  #     },
  #     {
  #       "kind": "InputValueDefinition",
  #       "description": {
  #         "kind": "StringValue",
  #         "value": "By which field should the pagination order by. Available options are createdAt (default) and updatedAt."
  #       },
  #       "name": "orderBy",
  #       "type": "PaginationOrderBy",
  #       "directives": []
  #     }
  #   ],
  #   "type": "IssueConnection",
  #   "directives": []
  # }
  issues {
    query
  }
}

# A webhook used to send HTTP notifications over data updates
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A webhook used to send HTTP notifications over data updates"
#   },
#   "name": "Webhook",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "url",
#     "enabled",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that the webhook is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\nteam {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the webhook.\"\n#   },\n#   \"name\": \"creator\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ncreator {\n            id\n          }",
#     "secret"
#   ]
# }
fragment Webhook on Webhook {
  id
  createdAt
  updatedAt
  archivedAt
  url
  enabled
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that the webhook is associated with."
  #   },
  #   "name": "team",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the webhook."
  #   },
  #   "name": "creator",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  creator {
    id
  }
  secret
}

# A comment associated with an issue.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A comment associated with an issue."
#   },
#   "name": "Comment",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "body",
#     "bodyData",
#     "reactionData",
#     "editedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who wrote the comment.\"\n#   },\n#   \"name\": \"user\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\nuser {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue that the comment is associated with.\"\n#   },\n#   \"name\": \"issue\",\n#   \"arguments\": [],\n#   \"type\": \"Issue\",\n#   \"directives\": []\n# }\nissue {\n            id\n          }"
#   ]
# }
fragment Comment on Comment {
  id
  createdAt
  updatedAt
  archivedAt
  body
  bodyData
  reactionData
  editedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who wrote the comment."
  #   },
  #   "name": "user",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  user {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue that the comment is associated with."
  #   },
  #   "name": "issue",
  #   "arguments": [],
  #   "type": "Issue",
  #   "directives": []
  # }
  issue {
    id
  }
}

# A record of changes to an issue.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A record of changes to an issue."
#   },
#   "name": "IssueHistory",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue that was changed.\"\n#   },\n#   \"name\": \"issue\",\n#   \"arguments\": [],\n#   \"type\": \"Issue\",\n#   \"directives\": []\n# }\nissue {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who made these changes. If null, possibly means that the change made by an integration.\"\n#   },\n#   \"name\": \"actor\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\nactor {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The integration that made these changes. If null, possibly means that the change was made by a user.\"\n#   },\n#   \"name\": \"integration\",\n#   \"arguments\": [],\n#   \"type\": \"Integration\",\n#   \"directives\": []\n# }\nintegration {\n            id\n          }",
#     "updatedDescription",
#     "fromTitle",
#     "toTitle",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user from whom the issue was re-assigned from.\"\n#   },\n#   \"name\": \"fromAssignee\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\nfromAssignee {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user to whom the issue was assigned to.\"\n#   },\n#   \"name\": \"toAssignee\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ntoAssignee {\n            id\n          }",
#     "fromPriority",
#     "toPriority",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team from which the issue was moved from.\"\n#   },\n#   \"name\": \"fromTeam\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\nfromTeam {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team to which the issue was moved to.\"\n#   },\n#   \"name\": \"toTeam\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\ntoTeam {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The previous parent of the issue.\"\n#   },\n#   \"name\": \"fromParent\",\n#   \"arguments\": [],\n#   \"type\": \"Issue\",\n#   \"directives\": []\n# }\nfromParent {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The new parent of the issue.\"\n#   },\n#   \"name\": \"toParent\",\n#   \"arguments\": [],\n#   \"type\": \"Issue\",\n#   \"directives\": []\n# }\ntoParent {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The previous workflow state of the issue.\"\n#   },\n#   \"name\": \"fromState\",\n#   \"arguments\": [],\n#   \"type\": \"WorkflowState\",\n#   \"directives\": []\n# }\nfromState {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The new workflow state of the issue.\"\n#   },\n#   \"name\": \"toState\",\n#   \"arguments\": [],\n#   \"type\": \"WorkflowState\",\n#   \"directives\": []\n# }\ntoState {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The previous cycle of the issue.\"\n#   },\n#   \"name\": \"fromCycle\",\n#   \"arguments\": [],\n#   \"type\": \"Cycle\",\n#   \"directives\": []\n# }\nfromCycle {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The new cycle of the issue.\"\n#   },\n#   \"name\": \"toCycle\",\n#   \"arguments\": [],\n#   \"type\": \"Cycle\",\n#   \"directives\": []\n# }\ntoCycle {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The previous project of the issue.\"\n#   },\n#   \"name\": \"fromProject\",\n#   \"arguments\": [],\n#   \"type\": \"Project\",\n#   \"directives\": []\n# }\nfromProject {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The new project of the issue.\"\n#   },\n#   \"name\": \"toProject\",\n#   \"arguments\": [],\n#   \"type\": \"Project\",\n#   \"directives\": []\n# }\ntoProject {\n            id\n          }",
#     "fromEstimate",
#     "toEstimate",
#     "archived",
#     "addedLabelIds",
#     "removedLabelIds",
#     "relationChanges",
#     "autoClosed",
#     "autoArchived",
#     "fromDueDate",
#     "toDueDate"
#   ]
# }
fragment IssueHistory on IssueHistory {
  id
  createdAt
  updatedAt
  archivedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue that was changed."
  #   },
  #   "name": "issue",
  #   "arguments": [],
  #   "type": "Issue",
  #   "directives": []
  # }
  issue {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who made these changes. If null, possibly means that the change made by an integration."
  #   },
  #   "name": "actor",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  actor {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The integration that made these changes. If null, possibly means that the change was made by a user."
  #   },
  #   "name": "integration",
  #   "arguments": [],
  #   "type": "Integration",
  #   "directives": []
  # }
  integration {
    id
  }
  updatedDescription
  fromTitle
  toTitle
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user from whom the issue was re-assigned from."
  #   },
  #   "name": "fromAssignee",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  fromAssignee {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user to whom the issue was assigned to."
  #   },
  #   "name": "toAssignee",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  toAssignee {
    id
  }
  fromPriority
  toPriority
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team from which the issue was moved from."
  #   },
  #   "name": "fromTeam",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  fromTeam {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team to which the issue was moved to."
  #   },
  #   "name": "toTeam",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  toTeam {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The previous parent of the issue."
  #   },
  #   "name": "fromParent",
  #   "arguments": [],
  #   "type": "Issue",
  #   "directives": []
  # }
  fromParent {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The new parent of the issue."
  #   },
  #   "name": "toParent",
  #   "arguments": [],
  #   "type": "Issue",
  #   "directives": []
  # }
  toParent {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The previous workflow state of the issue."
  #   },
  #   "name": "fromState",
  #   "arguments": [],
  #   "type": "WorkflowState",
  #   "directives": []
  # }
  fromState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The new workflow state of the issue."
  #   },
  #   "name": "toState",
  #   "arguments": [],
  #   "type": "WorkflowState",
  #   "directives": []
  # }
  toState {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The previous cycle of the issue."
  #   },
  #   "name": "fromCycle",
  #   "arguments": [],
  #   "type": "Cycle",
  #   "directives": []
  # }
  fromCycle {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The new cycle of the issue."
  #   },
  #   "name": "toCycle",
  #   "arguments": [],
  #   "type": "Cycle",
  #   "directives": []
  # }
  toCycle {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The previous project of the issue."
  #   },
  #   "name": "fromProject",
  #   "arguments": [],
  #   "type": "Project",
  #   "directives": []
  # }
  fromProject {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The new project of the issue."
  #   },
  #   "name": "toProject",
  #   "arguments": [],
  #   "type": "Project",
  #   "directives": []
  # }
  toProject {
    id
  }
  fromEstimate
  toEstimate
  archived
  addedLabelIds
  removedLabelIds
  relationChanges
  autoClosed
  autoArchived
  fromDueDate
  toDueDate
}

# An integration resource created by an external service.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An integration resource created by an external service."
#   },
#   "name": "IntegrationResource",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "resourceType",
#     "resourceId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The integration that the resource is associated with.\"\n#   },\n#   \"name\": \"integration\",\n#   \"arguments\": [],\n#   \"type\": \"Integration\",\n#   \"directives\": []\n# }\nintegration {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue that the resource is associated with.\"\n#   },\n#   \"name\": \"issue\",\n#   \"arguments\": [],\n#   \"type\": \"Issue\",\n#   \"directives\": []\n# }\nissue {\n            id\n          }"
#   ]
# }
fragment IntegrationResource on IntegrationResource {
  id
  createdAt
  updatedAt
  archivedAt
  resourceType
  resourceId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The integration that the resource is associated with."
  #   },
  #   "name": "integration",
  #   "arguments": [],
  #   "type": "Integration",
  #   "directives": []
  # }
  integration {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue that the resource is associated with."
  #   },
  #   "name": "issue",
  #   "arguments": [],
  #   "type": "Issue",
  #   "directives": []
  # }
  issue {
    id
  }
}

# Pull request data
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Pull request data"
#   },
#   "name": "PullRequestPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "status",
#     "number",
#     "url",
#     "draft",
#     "id",
#     "title",
#     "branch",
#     "userId",
#     "userLogin",
#     "repoLogin",
#     "repoName",
#     "createdAt",
#     "updatedAt",
#     "closedAt",
#     "mergedAt"
#   ]
# }
fragment PullRequestPayload on PullRequestPayload {
  status
  number
  url
  draft
  id
  title
  branch
  userId
  userLogin
  repoLogin
  repoName
  createdAt
  updatedAt
  closedAt
  mergedAt
}

# GitHub's commit data
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "GitHub's commit data"
#   },
#   "name": "CommitPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "id",
#     "message",
#     "timestamp",
#     "url",
#     "added",
#     "removed",
#     "modified"
#   ]
# }
fragment CommitPayload on CommitPayload {
  id
  message
  timestamp
  url
  added
  removed
  modified
}

# Sentry issue data
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Sentry issue data"
#   },
#   "name": "SentryIssuePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "issueId",
#     "webUrl",
#     "actorType",
#     "actorId",
#     "actorName",
#     "projectId",
#     "projectSlug",
#     "issueTitle",
#     "shortId",
#     "firstSeen",
#     "firstVersion"
#   ]
# }
fragment SentryIssuePayload on SentryIssuePayload {
  issueId
  webUrl
  actorType
  actorId
  actorName
  projectId
  projectSlug
  issueTitle
  shortId
  firstSeen
  firstVersion
}

# A relation between two issues.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A relation between two issues."
#   },
#   "name": "IssueRelation",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "type",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue whose relationship is being described.\"\n#   },\n#   \"name\": \"issue\",\n#   \"arguments\": [],\n#   \"type\": \"Issue\",\n#   \"directives\": []\n# }\nissue {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The related issue.\"\n#   },\n#   \"name\": \"relatedIssue\",\n#   \"arguments\": [],\n#   \"type\": \"Issue\",\n#   \"directives\": []\n# }\nrelatedIssue {\n            id\n          }"
#   ]
# }
fragment IssueRelation on IssueRelation {
  id
  createdAt
  updatedAt
  archivedAt
  type
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue whose relationship is being described."
  #   },
  #   "name": "issue",
  #   "arguments": [],
  #   "type": "Issue",
  #   "directives": []
  # }
  issue {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The related issue."
  #   },
  #   "name": "relatedIssue",
  #   "arguments": [],
  #   "type": "Issue",
  #   "directives": []
  # }
  relatedIssue {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationExistsPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success",
#     "exists"
#   ]
# }
fragment OrganizationExistsPayload on OrganizationExistsPayload {
  success
  exists
}

# Contains either the full serialized state of the application or delta packets that the requester can
# apply to the local data set in order to be up-to-date.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Contains either the full serialized state of the application or delta packets that the requester can\n  apply to the local data set in order to be up-to-date."
#   },
#   "name": "SyncResponse",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "state",
#     "delta",
#     "archive",
#     "lastSyncId",
#     "databaseVersion"
#   ]
# }
fragment SyncResponse on SyncResponse {
  state
  delta
  archive
  lastSyncId
  databaseVersion
}

# Contains requested archived model objects.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Contains requested archived model objects."
#   },
#   "name": "ArchiveResponse",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "archive",
#     "totalCount",
#     "databaseVersion"
#   ]
# }
fragment ArchiveResponse on ArchiveResponse {
  archive
  totalCount
  databaseVersion
}

# A user account. Super user required.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A user account. Super user required."
#   },
#   "name": "UserAccountAdminPrivileged",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "name",
#     "email",
#     "service"
#   ]
# }
fragment UserAccountAdminPrivileged on UserAccountAdminPrivileged {
  id
  createdAt
  updatedAt
  archivedAt
  name
  email
  service
}

# A user that has access to the the resources of an organization. Super user required.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A user that has access to the the resources of an organization. Super user required."
#   },
#   "name": "UserAdminPrivileged",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "name",
#     "displayName",
#     "email",
#     "avatarUrl",
#     "disableReason",
#     "inviteHash",
#     "userAccountId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The settings of the user.\"\n#   },\n#   \"name\": \"settings\",\n#   \"arguments\": [],\n#   \"type\": \"UserSettings\",\n#   \"directives\": []\n# }",
#     "lastSeen",
#     "admin",
#     "active",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Issues assigned to the user.\"\n#   },\n#   \"name\": \"assignedIssues\",\n#   \"arguments\": [],\n#   \"type\": \"IssueConnection\",\n#   \"directives\": []\n# }\nassignedIssues {\n            query\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Issues created by the user.\"\n#   },\n#   \"name\": \"createdIssues\",\n#   \"arguments\": [],\n#   \"type\": \"IssueConnection\",\n#   \"directives\": []\n# }\ncreatedIssues {\n            query\n          }",
#     "createdIssueCount",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Memberships associated with the user.\"\n#   },\n#   \"name\": \"teamMemberships\",\n#   \"arguments\": [],\n#   \"type\": \"TeamMembershipConnection\",\n#   \"directives\": []\n# }"
#   ]
# }
fragment UserAdminPrivileged on UserAdminPrivileged {
  id
  createdAt
  updatedAt
  archivedAt
  name
  displayName
  email
  avatarUrl
  disableReason
  inviteHash
  userAccountId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The settings of the user."
  #   },
  #   "name": "settings",
  #   "arguments": [],
  #   "type": "UserSettings",
  #   "directives": []
  # }
  lastSeen
  admin
  active
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Issues assigned to the user."
  #   },
  #   "name": "assignedIssues",
  #   "arguments": [],
  #   "type": "IssueConnection",
  #   "directives": []
  # }
  assignedIssues {
    query
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Issues created by the user."
  #   },
  #   "name": "createdIssues",
  #   "arguments": [],
  #   "type": "IssueConnection",
  #   "directives": []
  # }
  createdIssues {
    query
  }
  createdIssueCount
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Memberships associated with the user."
  #   },
  #   "name": "teamMemberships",
  #   "arguments": [],
  #   "type": "TeamMembershipConnection",
  #   "directives": []
  # }
}

# An organization. Super user required.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An organization. Super user required."
#   },
#   "name": "OrganizationAdminPrivileged",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "name",
#     "urlKey",
#     "logoUrl",
#     "upgradeThresholdExceeded",
#     "periodUploadVolume",
#     "gitBranchFormat",
#     "gitLinkbackMessagesEnabled",
#     "gitPublicLinkbackMessagesEnabled",
#     "roadmapEnabled",
#     "samlEnabled",
#     "allowedAuthServices",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Users associated with the organization.\"\n#   },\n#   \"name\": \"users\",\n#   \"arguments\": [],\n#   \"type\": \"UserConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Teams associated with the organization.\"\n#   },\n#   \"name\": \"teams\",\n#   \"arguments\": [],\n#   \"type\": \"TeamConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Milestones associated with the organization.\"\n#   },\n#   \"name\": \"milestones\",\n#   \"arguments\": [],\n#   \"type\": \"MilestoneConnection\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Integrations associated with the organization.\"\n#   },\n#   \"name\": \"integrations\",\n#   \"arguments\": [],\n#   \"type\": \"IntegrationConnection\",\n#   \"directives\": []\n# }",
#     "userCount",
#     "createdIssueCount",
#     "stripeCustomerId"
#   ]
# }
fragment OrganizationAdminPrivileged on OrganizationAdminPrivileged {
  id
  createdAt
  updatedAt
  archivedAt
  name
  urlKey
  logoUrl
  upgradeThresholdExceeded
  periodUploadVolume
  gitBranchFormat
  gitLinkbackMessagesEnabled
  gitPublicLinkbackMessagesEnabled
  roadmapEnabled
  samlEnabled
  allowedAuthServices
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Users associated with the organization."
  #   },
  #   "name": "users",
  #   "arguments": [],
  #   "type": "UserConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Teams associated with the organization."
  #   },
  #   "name": "teams",
  #   "arguments": [],
  #   "type": "TeamConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Milestones associated with the organization."
  #   },
  #   "name": "milestones",
  #   "arguments": [],
  #   "type": "MilestoneConnection",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Integrations associated with the organization."
  #   },
  #   "name": "integrations",
  #   "arguments": [],
  #   "type": "IntegrationConnection",
  #   "directives": []
  # }
  userCount
  createdIssueCount
  stripeCustomerId
}

# The subscription of an organization. Super user required.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "The subscription of an organization. Super user required."
#   },
#   "name": "SubscriptionAdminPrivileged",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "type",
#     "seats",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The creator of the subscription.\"\n#   },\n#   \"name\": \"creator\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ncreator {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization that the subscription is associated with.\"\n#   },\n#   \"name\": \"organization\",\n#   \"arguments\": [],\n#   \"type\": \"Organization\",\n#   \"directives\": []\n# }",
#     "canceledAt",
#     "pendingChangeType",
#     "stripeSubscriptionId",
#     "stripeStatus"
#   ]
# }
fragment SubscriptionAdminPrivileged on SubscriptionAdminPrivileged {
  id
  createdAt
  updatedAt
  archivedAt
  type
  seats
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The creator of the subscription."
  #   },
  #   "name": "creator",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization that the subscription is associated with."
  #   },
  #   "name": "organization",
  #   "arguments": [],
  #   "type": "Organization",
  #   "directives": []
  # }
  canceledAt
  pendingChangeType
  stripeSubscriptionId
  stripeStatus
}

# An API key. Grants access to the user's resources.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An API key. Grants access to the user's resources."
#   },
#   "name": "ApiKey",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "label"
#   ]
# }
fragment ApiKey on ApiKey {
  id
  createdAt
  updatedAt
  archivedAt
  label
}

# Public information of the OAuth application.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Public information of the OAuth application."
#   },
#   "name": "Application",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "clientId",
#     "name",
#     "description",
#     "developer",
#     "developerUrl",
#     "imageUrl"
#   ]
# }
fragment Application on Application {
  clientId
  name
  description
  developer
  developerUrl
  imageUrl
}

# Public information of the OAuth application, plus the authorized scopes for a given user.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Public information of the OAuth application, plus the authorized scopes for a given user."
#   },
#   "name": "AuthorizedApplication",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "clientId",
#     "name",
#     "description",
#     "developer",
#     "developerUrl",
#     "imageUrl",
#     "scope",
#     "appId"
#   ]
# }
fragment AuthorizedApplication on AuthorizedApplication {
  clientId
  name
  description
  developer
  developerUrl
  imageUrl
  scope
  appId
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "AuthResolverResponse",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "id",
#     "token",
#     "email",
#     "allowDomainAccess",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Users belonging to this account.\"\n#   },\n#   \"name\": \"users\",\n#   \"arguments\": [],\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"User\"\n#   },\n#   \"directives\": []\n# }\nusers {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Organizations this account has access to, but is not yet a member.\"\n#   },\n#   \"name\": \"availableOrganizations\",\n#   \"arguments\": [],\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"Organization\"\n#   },\n#   \"directives\": []\n# }"
#   ]
# }
fragment AuthResolverResponse on AuthResolverResponse {
  id
  token
  email
  allowDomainAccess
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Users belonging to this account."
  #   },
  #   "name": "users",
  #   "arguments": [],
  #   "type": {
  #     "kind": "ListType",
  #     "type": "User"
  #   },
  #   "directives": []
  # }
  users {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Organizations this account has access to, but is not yet a member."
  #   },
  #   "name": "availableOrganizations",
  #   "arguments": [],
  #   "type": {
  #     "kind": "ListType",
  #     "type": "Organization"
  #   },
  #   "directives": []
  # }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "SsoUrlFromEmailResponse",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success",
#     "samlSsoUrl"
#   ]
# }
fragment SsoUrlFromEmailResponse on SsoUrlFromEmailResponse {
  success
  samlSsoUrl
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "BillingDetailsPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success",
#     "email"
#   ]
# }
fragment BillingDetailsPayload on BillingDetailsPayload {
  success
  email
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "Invoice",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "url",
#     "created",
#     "dueDate",
#     "status",
#     "total"
#   ]
# }
fragment Invoice on Invoice {
  url
  created
  dueDate
  status
  total
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "Card",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "brand",
#     "last4"
#   ]
# }
fragment Card on Card {
  brand
  last4
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CollaborationDocumentUpdatePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment CollaborationDocumentUpdatePayload on CollaborationDocumentUpdatePayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "StepsResponse",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "version",
#     "steps",
#     "clientIds"
#   ]
# }
fragment StepsResponse on StepsResponse {
  version
  steps
  clientIds
}

# A custom view that has been saved by a user.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A custom view that has been saved by a user."
#   },
#   "name": "CustomView",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "name",
#     "description",
#     "icon",
#     "color",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization of the custom view.\"\n#   },\n#   \"name\": \"organization\",\n#   \"arguments\": [],\n#   \"type\": \"Organization\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team associated with the custom view.\"\n#   },\n#   \"name\": \"team\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\nteam {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the custom view.\"\n#   },\n#   \"name\": \"creator\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ncreator {\n            id\n          }",
#     "filters",
#     "shared"
#   ]
# }
fragment CustomView on CustomView {
  id
  createdAt
  updatedAt
  archivedAt
  name
  description
  icon
  color
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization of the custom view."
  #   },
  #   "name": "organization",
  #   "arguments": [],
  #   "type": "Organization",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team associated with the custom view."
  #   },
  #   "name": "team",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the custom view."
  #   },
  #   "name": "creator",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  creator {
    id
  }
  filters
  shared
}

# A custom emoji.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A custom emoji."
#   },
#   "name": "Emoji",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "name",
#     "url",
#     "source",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the emoji.\"\n#   },\n#   \"name\": \"creator\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ncreator {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization that the emoji belongs to.\"\n#   },\n#   \"name\": \"organization\",\n#   \"arguments\": [],\n#   \"type\": \"Organization\",\n#   \"directives\": []\n# }"
#   ]
# }
fragment Emoji on Emoji {
  id
  createdAt
  updatedAt
  archivedAt
  name
  url
  source
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the emoji."
  #   },
  #   "name": "creator",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization that the emoji belongs to."
  #   },
  #   "name": "organization",
  #   "arguments": [],
  #   "type": "Organization",
  #   "directives": []
  # }
}

# User favorites presented in the sidebar.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "User favorites presented in the sidebar."
#   },
#   "name": "Favorite",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "type",
#     "sortOrder",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The owner of the favorite.\"\n#   },\n#   \"name\": \"user\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\nuser {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Favorited issue.\"\n#   },\n#   \"name\": \"issue\",\n#   \"arguments\": [],\n#   \"type\": \"Issue\",\n#   \"directives\": []\n# }\nissue {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Favorited project.\"\n#   },\n#   \"name\": \"project\",\n#   \"arguments\": [],\n#   \"type\": \"Project\",\n#   \"directives\": []\n# }\nproject {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Favorited project team.\"\n#   },\n#   \"name\": \"projectTeam\",\n#   \"arguments\": [],\n#   \"type\": \"Project\",\n#   \"directives\": []\n# }\nprojectTeam {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Favorited cycle.\"\n#   },\n#   \"name\": \"cycle\",\n#   \"arguments\": [],\n#   \"type\": \"Cycle\",\n#   \"directives\": []\n# }\ncycle {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Favorited issue label.\"\n#   },\n#   \"name\": \"label\",\n#   \"arguments\": [],\n#   \"type\": \"IssueLabel\",\n#   \"directives\": []\n# }\nlabel {\n            id\n          }"
#   ]
# }
fragment Favorite on Favorite {
  id
  createdAt
  updatedAt
  archivedAt
  type
  sortOrder
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The owner of the favorite."
  #   },
  #   "name": "user",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  user {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Favorited issue."
  #   },
  #   "name": "issue",
  #   "arguments": [],
  #   "type": "Issue",
  #   "directives": []
  # }
  issue {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Favorited project."
  #   },
  #   "name": "project",
  #   "arguments": [],
  #   "type": "Project",
  #   "directives": []
  # }
  project {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Favorited project team."
  #   },
  #   "name": "projectTeam",
  #   "arguments": [],
  #   "type": "Project",
  #   "directives": []
  # }
  projectTeam {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Favorited cycle."
  #   },
  #   "name": "cycle",
  #   "arguments": [],
  #   "type": "Cycle",
  #   "directives": []
  # }
  cycle {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Favorited issue label."
  #   },
  #   "name": "label",
  #   "arguments": [],
  #   "type": "IssueLabel",
  #   "directives": []
  # }
  label {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "FigmaEmbedPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "success"
#   ]
# }
fragment FigmaEmbedPayload on FigmaEmbedPayload {
  lastSyncId
  success
}

# Object representing Figma preview information.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Object representing Figma preview information."
#   },
#   "name": "FigmaEmbed",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "name",
#     "lastModified",
#     "nodeName",
#     "url"
#   ]
# }
fragment FigmaEmbed on FigmaEmbed {
  name
  lastModified
  nodeName
  url
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "InvitePagePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment InvitePagePayload on InvitePagePayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "InviteData",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "inviterName",
#     "avatarURLs",
#     "teamNames",
#     "teamIds",
#     "organizationName",
#     "organizationDomain",
#     "organizationLogoUrl",
#     "userCount"
#   ]
# }
fragment InviteData on InviteData {
  inviterName
  avatarURLs
  teamNames
  teamIds
  organizationName
  organizationDomain
  organizationLogoUrl
  userCount
}

# A notification sent to a user.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A notification sent to a user."
#   },
#   "name": "Notification",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "type",
#     "reactionEmoji",
#     "readAt",
#     "emailedAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The recipient of the notification.\"\n#   },\n#   \"name\": \"user\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\nuser {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue that the notification is associated with.\"\n#   },\n#   \"name\": \"issue\",\n#   \"arguments\": [],\n#   \"type\": \"Issue\",\n#   \"directives\": []\n# }\nissue {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team which the notification is associated with.\"\n#   },\n#   \"name\": \"team\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\nteam {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The comment which the notification is associated with.\"\n#   },\n#   \"name\": \"comment\",\n#   \"arguments\": [],\n#   \"type\": \"Comment\",\n#   \"directives\": []\n# }\ncomment {\n            id\n          }"
#   ]
# }
fragment Notification on Notification {
  id
  createdAt
  updatedAt
  archivedAt
  type
  reactionEmoji
  readAt
  emailedAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The recipient of the notification."
  #   },
  #   "name": "user",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  user {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue that the notification is associated with."
  #   },
  #   "name": "issue",
  #   "arguments": [],
  #   "type": "Issue",
  #   "directives": []
  # }
  issue {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team which the notification is associated with."
  #   },
  #   "name": "team",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The comment which the notification is associated with."
  #   },
  #   "name": "comment",
  #   "arguments": [],
  #   "type": "Comment",
  #   "directives": []
  # }
  comment {
    id
  }
}

# Notification subscriptions for models.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Notification subscriptions for models."
#   },
#   "name": "NotificationSubscription",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "type",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user associated with notification subscriptions.\"\n#   },\n#   \"name\": \"user\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\nuser {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Subscribed team.\"\n#   },\n#   \"name\": \"team\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\nteam {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Subscribed project.\"\n#   },\n#   \"name\": \"project\",\n#   \"arguments\": [],\n#   \"type\": \"Project\",\n#   \"directives\": []\n# }\nproject {\n            id\n          }"
#   ]
# }
fragment NotificationSubscription on NotificationSubscription {
  id
  createdAt
  updatedAt
  archivedAt
  type
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user associated with notification subscriptions."
  #   },
  #   "name": "user",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  user {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Subscribed team."
  #   },
  #   "name": "team",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  team {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Subscribed project."
  #   },
  #   "name": "project",
  #   "arguments": [],
  #   "type": "Project",
  #   "directives": []
  # }
  project {
    id
  }
}

# An invitation to the organization that has been sent via email.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "An invitation to the organization that has been sent via email."
#   },
#   "name": "OrganizationInvite",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "email",
#     "external",
#     "acceptedAt",
#     "expiresAt",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who created the invitation.\"\n#   },\n#   \"name\": \"inviter\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ninviter {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who has accepted the invite. Null, if the invite hasn't been accepted.\"\n#   },\n#   \"name\": \"invitee\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ninvitee {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization that the invite is associated with.\"\n#   },\n#   \"name\": \"organization\",\n#   \"arguments\": [],\n#   \"type\": \"Organization\",\n#   \"directives\": []\n# }"
#   ]
# }
fragment OrganizationInvite on OrganizationInvite {
  id
  createdAt
  updatedAt
  archivedAt
  email
  external
  acceptedAt
  expiresAt
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who created the invitation."
  #   },
  #   "name": "inviter",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  inviter {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who has accepted the invite. Null, if the invite hasn't been accepted."
  #   },
  #   "name": "invitee",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  invitee {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization that the invite is associated with."
  #   },
  #   "name": "organization",
  #   "arguments": [],
  #   "type": "Organization",
  #   "directives": []
  # }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "PushSubscriptionPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "success"
#   ]
# }
fragment PushSubscriptionPayload on PushSubscriptionPayload {
  lastSyncId
  success
}

# A reaction associated with a comment.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A reaction associated with a comment."
#   },
#   "name": "Reaction",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "emoji",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who reacted.\"\n#   },\n#   \"name\": \"user\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\nuser {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The comment that the reaction is associated with.\"\n#   },\n#   \"name\": \"comment\",\n#   \"arguments\": [],\n#   \"type\": \"Comment\",\n#   \"directives\": []\n# }\ncomment {\n            id\n          }"
#   ]
# }
fragment Reaction on Reaction {
  id
  createdAt
  updatedAt
  archivedAt
  emoji
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who reacted."
  #   },
  #   "name": "user",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  user {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The comment that the reaction is associated with."
  #   },
  #   "name": "comment",
  #   "arguments": [],
  #   "type": "Comment",
  #   "directives": []
  # }
  comment {
    id
  }
}

# View preferences.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "View preferences."
#   },
#   "name": "ViewPreferences",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "type",
#     "viewType"
#   ]
# }
fragment ViewPreferences on ViewPreferences {
  id
  createdAt
  updatedAt
  archivedAt
  type
  viewType
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UserPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user that was created or updated.\"\n#   },\n#   \"name\": \"user\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\nuser {\n            id\n          }",
#     "success"
#   ]
# }
fragment UserPayload on UserPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user that was created or updated."
  #   },
  #   "name": "user",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  user {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UserAdminPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment UserAdminPayload on UserAdminPayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization that was created or updated.\"\n#   },\n#   \"name\": \"organization\",\n#   \"arguments\": [],\n#   \"type\": \"Organization\",\n#   \"directives\": []\n# }",
#     "success"
#   ]
# }
fragment OrganizationPayload on OrganizationPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization that was created or updated."
  #   },
  #   "name": "organization",
  #   "arguments": [],
  #   "type": "Organization",
  #   "directives": []
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationDeletePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment OrganizationDeletePayload on OrganizationDeletePayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "AdminIntegrationPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment AdminIntegrationPayload on AdminIntegrationPayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationAccessPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment OrganizationAccessPayload on OrganizationAccessPayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationSamlConfigurePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success",
#     "samlEnabled"
#   ]
# }
fragment OrganizationSamlConfigurePayload on OrganizationSamlConfigurePayload {
  success
  samlEnabled
}

# The integration resource's settings
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "The integration resource's settings"
#   },
#   "name": "SamlConfiguration",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "ssoSigningCert",
#     "ssoEndpoint",
#     "ssoBinding",
#     "ssoSignAlgo",
#     "allowedDomains"
#   ]
# }
fragment SamlConfiguration on SamlConfiguration {
  ssoSigningCert
  ssoEndpoint
  ssoBinding
  ssoSignAlgo
  allowedDomains
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "AdminCommandPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment AdminCommandPayload on AdminCommandPayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "EventPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment EventPayload on EventPayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ApiKeyPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "success"
#   ]
# }
fragment ApiKeyPayload on ApiKeyPayload {
  lastSyncId
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ArchivePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "success"
#   ]
# }
fragment ArchivePayload on ArchivePayload {
  lastSyncId
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "EmailUserAccountAuthChallengeResponse",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success",
#     "authType"
#   ]
# }
fragment EmailUserAccountAuthChallengeResponse on EmailUserAccountAuthChallengeResponse {
  success
  authType
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CreateOrJoinOrganizationResponse",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"organization\",\n#   \"arguments\": [],\n#   \"type\": \"Organization\",\n#   \"directives\": []\n# }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"user\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\nuser {\n            id\n          }"
#   ]
# }
fragment CreateOrJoinOrganizationResponse on CreateOrJoinOrganizationResponse {
  # {
  #   "kind": "FieldDefinition",
  #   "name": "organization",
  #   "arguments": [],
  #   "type": "Organization",
  #   "directives": []
  # }
  # {
  #   "kind": "FieldDefinition",
  #   "name": "user",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  user {
    id
  }
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "BillingEmailPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success",
#     "email"
#   ]
# }
fragment BillingEmailPayload on BillingEmailPayload {
  success
  email
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CommentPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The comment that was created or updated.\"\n#   },\n#   \"name\": \"comment\",\n#   \"arguments\": [],\n#   \"type\": \"Comment\",\n#   \"directives\": []\n# }\ncomment {\n            id\n          }",
#     "success"
#   ]
# }
fragment CommentPayload on CommentPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The comment that was created or updated."
  #   },
  #   "name": "comment",
  #   "arguments": [],
  #   "type": "Comment",
  #   "directives": []
  # }
  comment {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ContactPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment ContactPayload on ContactPayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CustomViewPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The custom view that was created or updated.\"\n#   },\n#   \"name\": \"customView\",\n#   \"arguments\": [],\n#   \"type\": \"CustomView\",\n#   \"directives\": []\n# }\ncustomView {\n            id\n          }",
#     "success"
#   ]
# }
fragment CustomViewPayload on CustomViewPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The custom view that was created or updated."
  #   },
  #   "name": "customView",
  #   "arguments": [],
  #   "type": "CustomView",
  #   "directives": []
  # }
  customView {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CyclePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The Cycle that was created or updated.\"\n#   },\n#   \"name\": \"cycle\",\n#   \"arguments\": [],\n#   \"type\": \"Cycle\",\n#   \"directives\": []\n# }\ncycle {\n            id\n          }",
#     "success"
#   ]
# }
fragment CyclePayload on CyclePayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The Cycle that was created or updated."
  #   },
  #   "name": "cycle",
  #   "arguments": [],
  #   "type": "Cycle",
  #   "directives": []
  # }
  cycle {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "DebugPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment DebugPayload on DebugPayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "EmailUnsubscribePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment EmailUnsubscribePayload on EmailUnsubscribePayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "EmojiPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The emoji that was created.\"\n#   },\n#   \"name\": \"emoji\",\n#   \"arguments\": [],\n#   \"type\": \"Emoji\",\n#   \"directives\": []\n# }\nemoji {\n            id\n          }",
#     "success"
#   ]
# }
fragment EmojiPayload on EmojiPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The emoji that was created."
  #   },
  #   "name": "emoji",
  #   "arguments": [],
  #   "type": "Emoji",
  #   "directives": []
  # }
  emoji {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "FavoritePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The object that was added as a favorite.\"\n#   },\n#   \"name\": \"favorite\",\n#   \"arguments\": [],\n#   \"type\": \"Favorite\",\n#   \"directives\": []\n# }\nfavorite {\n            id\n          }",
#     "success"
#   ]
# }
fragment FavoritePayload on FavoritePayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The object that was added as a favorite."
  #   },
  #   "name": "favorite",
  #   "arguments": [],
  #   "type": "Favorite",
  #   "directives": []
  # }
  favorite {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "FeedbackPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment FeedbackPayload on FeedbackPayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UploadPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "success"
#   ]
# }
fragment UploadPayload on UploadPayload {
  lastSyncId
  success
}

# Object representing Google Cloud upload policy, plus additional data.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Object representing Google Cloud upload policy, plus additional data."
#   },
#   "name": "UploadFile",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "filename",
#     "contentType",
#     "size",
#     "uploadUrl",
#     "assetUrl",
#     "metaData"
#   ]
# }
fragment UploadFile on UploadFile {
  filename
  contentType
  size
  uploadUrl
  assetUrl
  metaData
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UploadFileHeader",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "key",
#     "value"
#   ]
# }
fragment UploadFileHeader on UploadFileHeader {
  key
  value
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ImageUploadFromUrlPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "url",
#     "success"
#   ]
# }
fragment ImageUploadFromUrlPayload on ImageUploadFromUrlPayload {
  lastSyncId
  url
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IntegrationPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The integration that was created or updated.\"\n#   },\n#   \"name\": \"integration\",\n#   \"arguments\": [],\n#   \"type\": \"Integration\",\n#   \"directives\": []\n# }\nintegration {\n            id\n          }",
#     "success"
#   ]
# }
fragment IntegrationPayload on IntegrationPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The integration that was created or updated."
  #   },
  #   "name": "integration",
  #   "arguments": [],
  #   "type": "Integration",
  #   "directives": []
  # }
  integration {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IssueLabelPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The label that was created or updated.\"\n#   },\n#   \"name\": \"issueLabel\",\n#   \"arguments\": [],\n#   \"type\": \"IssueLabel\",\n#   \"directives\": []\n# }\nissueLabel {\n            id\n          }",
#     "success"
#   ]
# }
fragment IssueLabelPayload on IssueLabelPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The label that was created or updated."
  #   },
  #   "name": "issueLabel",
  #   "arguments": [],
  #   "type": "IssueLabel",
  #   "directives": []
  # }
  issueLabel {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IssueRelationPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue relation that was created or updated.\"\n#   },\n#   \"name\": \"issueRelation\",\n#   \"arguments\": [],\n#   \"type\": \"IssueRelation\",\n#   \"directives\": []\n# }\nissueRelation {\n            id\n          }",
#     "success"
#   ]
# }
fragment IssueRelationPayload on IssueRelationPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue relation that was created or updated."
  #   },
  #   "name": "issueRelation",
  #   "arguments": [],
  #   "type": "IssueRelation",
  #   "directives": []
  # }
  issueRelation {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "IssuePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The issue that was created or updated.\"\n#   },\n#   \"name\": \"issue\",\n#   \"arguments\": [],\n#   \"type\": \"Issue\",\n#   \"directives\": []\n# }\nissue {\n            id\n          }",
#     "success"
#   ]
# }
fragment IssuePayload on IssuePayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The issue that was created or updated."
  #   },
  #   "name": "issue",
  #   "arguments": [],
  #   "type": "Issue",
  #   "directives": []
  # }
  issue {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "MilestonePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The milesteone that was created or updated.\"\n#   },\n#   \"name\": \"milestone\",\n#   \"arguments\": [],\n#   \"type\": \"Milestone\",\n#   \"directives\": []\n# }\nmilestone {\n            id\n          }",
#     "success"
#   ]
# }
fragment MilestonePayload on MilestonePayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The milesteone that was created or updated."
  #   },
  #   "name": "milestone",
  #   "arguments": [],
  #   "type": "Milestone",
  #   "directives": []
  # }
  milestone {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "NotificationPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "success"
#   ]
# }
fragment NotificationPayload on NotificationPayload {
  lastSyncId
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "NotificationSubscriptionPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "success"
#   ]
# }
fragment NotificationSubscriptionPayload on NotificationSubscriptionPayload {
  lastSyncId
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OauthClientPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "success"
#   ]
# }
fragment OauthClientPayload on OauthClientPayload {
  lastSyncId
  success
}

# OAuth2 client application
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "OAuth2 client application"
#   },
#   "name": "OauthClient",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "clientId",
#     "name",
#     "description",
#     "developer",
#     "developerUrl",
#     "imageUrl",
#     "clientSecret",
#     "redirectUris"
#   ]
# }
fragment OauthClient on OauthClient {
  id
  createdAt
  updatedAt
  archivedAt
  clientId
  name
  description
  developer
  developerUrl
  imageUrl
  clientSecret
  redirectUris
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "RotateSecretPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "success"
#   ]
# }
fragment RotateSecretPayload on RotateSecretPayload {
  lastSyncId
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OauthTokenRevokePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment OauthTokenRevokePayload on OauthTokenRevokePayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationDomainPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "success"
#   ]
# }
fragment OrganizationDomainPayload on OrganizationDomainPayload {
  lastSyncId
  success
}

# Defines the use of a domain by an organization.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Defines the use of a domain by an organization."
#   },
#   "name": "OrganizationDomain",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "name",
#     "verified",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who added the domain.\"\n#   },\n#   \"name\": \"creator\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ncreator {\n            id\n          }",
#     "verificationEmail"
#   ]
# }
fragment OrganizationDomain on OrganizationDomain {
  id
  createdAt
  updatedAt
  archivedAt
  name
  verified
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who added the domain."
  #   },
  #   "name": "creator",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  creator {
    id
  }
  verificationEmail
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationInvitePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "success"
#   ]
# }
fragment OrganizationInvitePayload on OrganizationInvitePayload {
  lastSyncId
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ProjectLinkPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project that was created or updated.\"\n#   },\n#   \"name\": \"projectLink\",\n#   \"arguments\": [],\n#   \"type\": \"ProjectLink\",\n#   \"directives\": []\n# }\nprojectLink {\n            id\n          }",
#     "success"
#   ]
# }
fragment ProjectLinkPayload on ProjectLinkPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project that was created or updated."
  #   },
  #   "name": "projectLink",
  #   "arguments": [],
  #   "type": "ProjectLink",
  #   "directives": []
  # }
  projectLink {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ProjectPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The project that was created or updated.\"\n#   },\n#   \"name\": \"project\",\n#   \"arguments\": [],\n#   \"type\": \"Project\",\n#   \"directives\": []\n# }\nproject {\n            id\n          }",
#     "success"
#   ]
# }
fragment ProjectPayload on ProjectPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The project that was created or updated."
  #   },
  #   "name": "project",
  #   "arguments": [],
  #   "type": "Project",
  #   "directives": []
  # }
  project {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ReactionPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"name\": \"reaction\",\n#   \"arguments\": [],\n#   \"type\": \"Reaction\",\n#   \"directives\": []\n# }\nreaction {\n            id\n          }",
#     "success"
#   ]
# }
fragment ReactionPayload on ReactionPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "name": "reaction",
  #   "arguments": [],
  #   "type": "Reaction",
  #   "directives": []
  # }
  reaction {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "CreateCsvExportReportPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment CreateCsvExportReportPayload on CreateCsvExportReportPayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "SubscriptionSessionPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "session"
#   ]
# }
fragment SubscriptionSessionPayload on SubscriptionSessionPayload {
  session
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "SubscriptionPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The subscription entity being mutated.\"\n#   },\n#   \"name\": \"subscription\",\n#   \"arguments\": [],\n#   \"type\": \"Subscription\",\n#   \"directives\": []\n# }",
#     "canceledAt",
#     "success"
#   ]
# }
fragment SubscriptionPayload on SubscriptionPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The subscription entity being mutated."
  #   },
  #   "name": "subscription",
  #   "arguments": [],
  #   "type": "Subscription",
  #   "directives": []
  # }
  canceledAt
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "TeamMembershipPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team membership that was created or updated.\"\n#   },\n#   \"name\": \"teamMembership\",\n#   \"arguments\": [],\n#   \"type\": \"TeamMembership\",\n#   \"directives\": []\n# }\nteamMembership {\n            id\n          }",
#     "success"
#   ]
# }
fragment TeamMembershipPayload on TeamMembershipPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team membership that was created or updated."
  #   },
  #   "name": "teamMembership",
  #   "arguments": [],
  #   "type": "TeamMembership",
  #   "directives": []
  # }
  teamMembership {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "TeamPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The team that was created or updated.\"\n#   },\n#   \"name\": \"team\",\n#   \"arguments\": [],\n#   \"type\": \"Team\",\n#   \"directives\": []\n# }\nteam {\n            id\n          }",
#     "success"
#   ]
# }
fragment TeamPayload on TeamPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The team that was created or updated."
  #   },
  #   "name": "team",
  #   "arguments": [],
  #   "type": "Team",
  #   "directives": []
  # }
  team {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "TemplatePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The template that was created or updated.\"\n#   },\n#   \"name\": \"template\",\n#   \"arguments\": [],\n#   \"type\": \"Template\",\n#   \"directives\": []\n# }",
#     "success"
#   ]
# }
fragment TemplatePayload on TemplatePayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The template that was created or updated."
  #   },
  #   "name": "template",
  #   "arguments": [],
  #   "type": "Template",
  #   "directives": []
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UserSettingsPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user's settings.\"\n#   },\n#   \"name\": \"userSettings\",\n#   \"arguments\": [],\n#   \"type\": \"UserSettings\",\n#   \"directives\": []\n# }",
#     "success"
#   ]
# }
fragment UserSettingsPayload on UserSettingsPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user's settings."
  #   },
  #   "name": "userSettings",
  #   "arguments": [],
  #   "type": "UserSettings",
  #   "directives": []
  # }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UserSettingsFlagPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "flag",
#     "value",
#     "success"
#   ]
# }
fragment UserSettingsFlagPayload on UserSettingsFlagPayload {
  lastSyncId
  flag
  value
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UserSettingsFlagsResetPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "success"
#   ]
# }
fragment UserSettingsFlagsResetPayload on UserSettingsFlagsResetPayload {
  lastSyncId
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "UserSubscribeToNewsletterPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment UserSubscribeToNewsletterPayload on UserSubscribeToNewsletterPayload {
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "ViewPreferencesPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "success"
#   ]
# }
fragment ViewPreferencesPayload on ViewPreferencesPayload {
  lastSyncId
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "WebhookPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The webhook entity being mutated.\"\n#   },\n#   \"name\": \"webhook\",\n#   \"arguments\": [],\n#   \"type\": \"Webhook\",\n#   \"directives\": []\n# }\nwebhook {\n            id\n          }",
#     "success"
#   ]
# }
fragment WebhookPayload on WebhookPayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The webhook entity being mutated."
  #   },
  #   "name": "webhook",
  #   "arguments": [],
  #   "type": "Webhook",
  #   "directives": []
  # }
  webhook {
    id
  }
  success
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "WorkflowStatePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The state that was created or updated.\"\n#   },\n#   \"name\": \"workflowState\",\n#   \"arguments\": [],\n#   \"type\": \"WorkflowState\",\n#   \"directives\": []\n# }\nworkflowState {\n            id\n          }",
#     "success"
#   ]
# }
fragment WorkflowStatePayload on WorkflowStatePayload {
  lastSyncId
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The state that was created or updated."
  #   },
  #   "name": "workflowState",
  #   "arguments": [],
  #   "type": "WorkflowState",
  #   "directives": []
  # }
  workflowState {
    id
  }
  success
}

# Collaborative editing steps for documents.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "Collaborative editing steps for documents."
#   },
#   "name": "DocumentStep",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "step",
#     "version",
#     "clientId"
#   ]
# }
fragment DocumentStep on DocumentStep {
  id
  createdAt
  updatedAt
  archivedAt
  step
  version
  clientId
}

# A user's web browser push notification subscription.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A user's web browser push notification subscription."
#   },
#   "name": "PushSubscription",
#   "interfaces": [
#     "Node"
#   ],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt"
#   ]
# }
fragment PushSubscription on PushSubscription {
  id
  createdAt
  updatedAt
  archivedAt
}

# A user account.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A user account."
#   },
#   "name": "UserAccount",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "id",
#     "createdAt",
#     "updatedAt",
#     "archivedAt",
#     "name",
#     "email",
#     "service",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"Users belonging to the account.\"\n#   },\n#   \"name\": \"users\",\n#   \"arguments\": [],\n#   \"type\": {\n#     \"kind\": \"ListType\",\n#     \"type\": \"User\"\n#   },\n#   \"directives\": []\n# }\nusers {\n            id\n          }"
#   ]
# }
fragment UserAccount on UserAccount {
  id
  createdAt
  updatedAt
  archivedAt
  name
  email
  service
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "Users belonging to the account."
  #   },
  #   "name": "users",
  #   "arguments": [],
  #   "type": {
  #     "kind": "ListType",
  #     "type": "User"
  #   },
  #   "directives": []
  # }
  users {
    id
  }
}

# A recorded entry of a file uploaded by a user.
# {
#   "kind": "ObjectTypeDefinition",
#   "description": {
#     "kind": "StringValue",
#     "value": "A recorded entry of a file uploaded by a user."
#   },
#   "name": "FileUpload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "id",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The user who uploaded the file.\"\n#   },\n#   \"name\": \"creator\",\n#   \"arguments\": [],\n#   \"type\": \"User\",\n#   \"directives\": []\n# }\ncreator {\n            id\n          }",
#     "# {\n#   \"kind\": \"FieldDefinition\",\n#   \"description\": {\n#     \"kind\": \"StringValue\",\n#     \"value\": \"The organization the upload belongs to.\"\n#   },\n#   \"name\": \"organization\",\n#   \"arguments\": [],\n#   \"type\": \"Organization\",\n#   \"directives\": []\n# }",
#     "assetUrl",
#     "contentType",
#     "filename",
#     "metaData",
#     "size"
#   ]
# }
fragment FileUpload on FileUpload {
  id
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The user who uploaded the file."
  #   },
  #   "name": "creator",
  #   "arguments": [],
  #   "type": "User",
  #   "directives": []
  # }
  creator {
    id
  }
  # {
  #   "kind": "FieldDefinition",
  #   "description": {
  #     "kind": "StringValue",
  #     "value": "The organization the upload belongs to."
  #   },
  #   "name": "organization",
  #   "arguments": [],
  #   "type": "Organization",
  #   "directives": []
  # }
  assetUrl
  contentType
  filename
  metaData
  size
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "SynchronizedPayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "lastSyncId"
#   ]
# }
fragment SynchronizedPayload on SynchronizedPayload {
  lastSyncId
}

# {
#   "kind": "ObjectTypeDefinition",
#   "name": "OrganizationDomainSimplePayload",
#   "interfaces": [],
#   "directives": [],
#   "fields": [
#     "success"
#   ]
# }
fragment OrganizationDomainSimplePayload on OrganizationDomainSimplePayload {
  success
}

# One specific user.
query user($id: String!) {
  user(id: $id) {
    ...User
  }
}

# The currently authenticated user.
query viewer {
  viewer {
    ...User
  }
}

# The user's organization.
query organization {
  organization {
    ...Organization
  }
}

# Does the organization exist.
query organizationExists($urlKey: String!) {
  organizationExists(urlKey: $urlKey) {
    ...OrganizationExistsPayload
  }
}

# Fetch data to catch up the client to the state of the world.
query syncBootstrap($databaseVersion: Int!, $sinceSyncId: Int!) {
  syncBootstrap(databaseVersion: $databaseVersion, sinceSyncId: $sinceSyncId) {
    ...SyncResponse
  }
}

# Fetches delta packets to catch up the user to the current state of the world.
query syncUpdates($sinceSyncId: Float!) {
  syncUpdates(sinceSyncId: $sinceSyncId) {
    ...SyncResponse
  }
}

# Fetches an archived model.
query archivedModelSync($identifier: String!, $modelClass: String!) {
  archivedModelSync(identifier: $identifier, modelClass: $modelClass) {
    ...ArchiveResponse
  }
}

# Fetches archived models.
query archivedModelsSync($modelClass: String!, $teamId: String!, $before: DateTime, $last: Int) {
  archivedModelsSync(modelClass: $modelClass, teamId: $teamId, before: $before, last: $last) {
    ...ArchiveResponse
  }
}

# All users of the organization.
query users(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  users(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "User"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...User
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# All API keys for the user.
query apiKeys(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  apiKeys(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "ApiKey"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...ApiKey
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# Get information for an application.
query application($redirectUri: String, $clientId: String!) {
  application(redirectUri: $redirectUri, clientId: $clientId) {
    ...Application
  }
}

# Get all authorized applications for a user
query authorizedApplications {
  authorizedApplications {
    ...AuthorizedApplication
  }
}

# Fetch users belonging to this user account.
query availableUsers {
  availableUsers {
    ...AuthResolverResponse
  }
}

# Fetch SSO login URL for the email provided.
query ssoUrlFromEmail($isDesktop: Boolean, $email: String!) {
  ssoUrlFromEmail(isDesktop: $isDesktop, email: $email) {
    ...SsoUrlFromEmailResponse
  }
}

# Billing details for the customer.
query billingDetails {
  billingDetails {
    ...BillingDetailsPayload
  }
}
# List of invoices, if any.
query billingDetails_invoices {
  billingDetails {
    invoices {
      ...Invoice
    }
  }
}
# The payment method.
query billingDetails_paymentMethod {
  billingDetails {
    paymentMethod {
      ...Card
    }
  }
}

# Join collaborative document and get missing steps.
query collaborativeDocumentJoin($clientId: String!, $issueId: String!, $version: Int!) {
  collaborativeDocumentJoin(clientId: $clientId, issueId: $issueId, version: $version) {
    ...CollaborationDocumentUpdatePayload
  }
}
# Document steps the client has not seen yet and need to rebase it's local steps on.
query collaborativeDocumentJoin_steps($clientId: String!, $issueId: String!, $version: Int!) {
  collaborativeDocumentJoin(clientId: $clientId, issueId: $issueId, version: $version) {
    steps {
      ...StepsResponse
    }
  }
}

# A specific comment.
query comment($id: String!) {
  comment(id: $id) {
    ...Comment
  }
}

query comments(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  comments(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "Comment"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...Comment
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific custom view.
query customView($id: String!) {
  customView(id: $id) {
    ...CustomView
  }
}

query customViews(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  customViews(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "CustomView"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...CustomView
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific cycle.
query cycle($id: String!) {
  cycle(id: $id) {
    ...Cycle
  }
}

# All cycles.
query cycles(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  cycles(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "Cycle"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...Cycle
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# A specific emoji.
query emoji($id: String!) {
  emoji(id: $id) {
    ...Emoji
  }
}

query emojis(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  emojis(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "Emoji"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...Emoji
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific favorite.
query favorite($id: String!) {
  favorite(id: $id) {
    ...Favorite
  }
}

# The user's favorites.
query favorites(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  favorites(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "Favorite"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...Favorite
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# Fetch Figma screenshot and other information with file and node identifiers.
query figmaEmbedInfo($nodeId: String, $fileId: String!) {
  figmaEmbedInfo(nodeId: $nodeId, fileId: $fileId) {
    ...FigmaEmbedPayload
  }
}
# Figma embed information.
query figmaEmbedInfo_figmaEmbed($nodeId: String, $fileId: String!) {
  figmaEmbedInfo(nodeId: $nodeId, fileId: $fileId) {
    figmaEmbed {
      ...FigmaEmbed
    }
  }
}

# One specific integration.
query integration($id: String!) {
  integration(id: $id) {
    ...Integration
  }
}
# Settings related to the integration.
query integration_settings($id: String!) {
  integration(id: $id) {
    settings {
      # {
      #   "kind": "FieldDefinition",
      #   "name": {
      #     "kind": "Name",
      #     "value": "slackPost"
      #   },
      #   "arguments": [],
      #   "type": {
      #     "kind": "NamedType",
      #     "name": {
      #       "kind": "Name",
      #       "value": "SlackPostSettings"
      #     }
      #   },
      #   "directives": []
      # }
      slackPost {
        ...SlackPostSettings
      }
      # {
      #   "kind": "FieldDefinition",
      #   "name": {
      #     "kind": "Name",
      #     "value": "slackProjectPost"
      #   },
      #   "arguments": [],
      #   "type": {
      #     "kind": "NamedType",
      #     "name": {
      #       "kind": "Name",
      #       "value": "SlackPostSettings"
      #     }
      #   },
      #   "directives": []
      # }
      slackProjectPost {
        ...SlackPostSettings
      }
      # {
      #   "kind": "FieldDefinition",
      #   "name": {
      #     "kind": "Name",
      #     "value": "googleSheets"
      #   },
      #   "arguments": [],
      #   "type": {
      #     "kind": "NamedType",
      #     "name": {
      #       "kind": "Name",
      #       "value": "GoogleSheetsSettings"
      #     }
      #   },
      #   "directives": []
      # }
      googleSheets {
        ...GoogleSheetsSettings
      }
      # {
      #   "kind": "FieldDefinition",
      #   "name": {
      #     "kind": "Name",
      #     "value": "sentry"
      #   },
      #   "arguments": [],
      #   "type": {
      #     "kind": "NamedType",
      #     "name": {
      #       "kind": "Name",
      #       "value": "SentrySettings"
      #     }
      #   },
      #   "directives": []
      # }
      sentry {
        ...SentrySettings
      }
    }
  }
}
query integration_settings_slackPost($id: String!) {
  integration(id: $id) {
    settings {
      slackPost {
        ...SlackPostSettings
      }
    }
  }
}
query integration_settings_slackProjectPost($id: String!) {
  integration(id: $id) {
    settings {
      slackProjectPost {
        ...SlackPostSettings
      }
    }
  }
}
query integration_settings_googleSheets($id: String!) {
  integration(id: $id) {
    settings {
      googleSheets {
        ...GoogleSheetsSettings
      }
    }
  }
}
query integration_settings_sentry($id: String!) {
  integration(id: $id) {
    settings {
      sentry {
        ...SentrySettings
      }
    }
  }
}

# All integrations.
query integrations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrations(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "Integration"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...Integration
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific integration resource. (e.g. linked GitHub pull requests for an issue)
query integrationResource($id: String!) {
  integrationResource(id: $id) {
    ...IntegrationResource
  }
}
# Detailed information about the external resource.
query integrationResource_data($id: String!) {
  integrationResource(id: $id) {
    data {
      # The payload for an IntegrationResource of type 'githubPullRequest'
      # {
      #   "kind": "FieldDefinition",
      #   "description": {
      #     "kind": "StringValue",
      #     "value": "The payload for an IntegrationResource of type 'githubPullRequest'"
      #   },
      #   "name": {
      #     "kind": "Name",
      #     "value": "githubPullRequest"
      #   },
      #   "arguments": [],
      #   "type": {
      #     "kind": "NamedType",
      #     "name": {
      #       "kind": "Name",
      #       "value": "PullRequestPayload"
      #     }
      #   },
      #   "directives": []
      # }
      githubPullRequest {
        ...PullRequestPayload
      }
      # The payload for an IntegrationResource of type 'gitlabMergeRequest'
      # {
      #   "kind": "FieldDefinition",
      #   "description": {
      #     "kind": "StringValue",
      #     "value": "The payload for an IntegrationResource of type 'gitlabMergeRequest'"
      #   },
      #   "name": {
      #     "kind": "Name",
      #     "value": "gitlabMergeRequest"
      #   },
      #   "arguments": [],
      #   "type": {
      #     "kind": "NamedType",
      #     "name": {
      #       "kind": "Name",
      #       "value": "PullRequestPayload"
      #     }
      #   },
      #   "directives": []
      # }
      gitlabMergeRequest {
        ...PullRequestPayload
      }
      # The payload for an IntegrationResource of type 'githubCommit'
      # {
      #   "kind": "FieldDefinition",
      #   "description": {
      #     "kind": "StringValue",
      #     "value": "The payload for an IntegrationResource of type 'githubCommit'"
      #   },
      #   "name": {
      #     "kind": "Name",
      #     "value": "githubCommit"
      #   },
      #   "arguments": [],
      #   "type": {
      #     "kind": "NamedType",
      #     "name": {
      #       "kind": "Name",
      #       "value": "CommitPayload"
      #     }
      #   },
      #   "directives": []
      # }
      githubCommit {
        ...CommitPayload
      }
      # The payload for an IntegrationResource of type 'sentryIssue'
      # {
      #   "kind": "FieldDefinition",
      #   "description": {
      #     "kind": "StringValue",
      #     "value": "The payload for an IntegrationResource of type 'sentryIssue'"
      #   },
      #   "name": {
      #     "kind": "Name",
      #     "value": "sentryIssue"
      #   },
      #   "arguments": [],
      #   "type": {
      #     "kind": "NamedType",
      #     "name": {
      #       "kind": "Name",
      #       "value": "SentryIssuePayload"
      #     }
      #   },
      #   "directives": []
      # }
      sentryIssue {
        ...SentryIssuePayload
      }
    }
  }
}
# The payload for an IntegrationResource of type 'githubPullRequest'
query integrationResource_data_githubPullRequest($id: String!) {
  integrationResource(id: $id) {
    data {
      githubPullRequest {
        ...PullRequestPayload
      }
    }
  }
}
# The payload for an IntegrationResource of type 'gitlabMergeRequest'
query integrationResource_data_gitlabMergeRequest($id: String!) {
  integrationResource(id: $id) {
    data {
      gitlabMergeRequest {
        ...PullRequestPayload
      }
    }
  }
}
# The payload for an IntegrationResource of type 'githubCommit'
query integrationResource_data_githubCommit($id: String!) {
  integrationResource(id: $id) {
    data {
      githubCommit {
        ...CommitPayload
      }
    }
  }
}
# The payload for an IntegrationResource of type 'sentryIssue'
query integrationResource_data_sentryIssue($id: String!) {
  integrationResource(id: $id) {
    data {
      sentryIssue {
        ...SentryIssuePayload
      }
    }
  }
}
# Pull request information for GitHub pull requests and GitLab merge requests.
query integrationResource_pullRequest($id: String!) {
  integrationResource(id: $id) {
    pullRequest {
      ...PullRequestPayload
    }
  }
}

# All integrations resources (e.g. linked GitHub pull requests for issues).
query integrationResources(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  integrationResources(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "IntegrationResource"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...IntegrationResource
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# Retrieves information for the public invite page.
query inviteInfo($teamHash: String, $userHash: String!) {
  inviteInfo(teamHash: $teamHash, userHash: $userHash) {
    ...InvitePagePayload
  }
}
# Invite data.
query inviteInfo_inviteData($teamHash: String, $userHash: String!) {
  inviteInfo(teamHash: $teamHash, userHash: $userHash) {
    inviteData {
      ...InviteData
    }
  }
}

# One specific label.
query issueLabel($id: String!) {
  issueLabel(id: $id) {
    ...IssueLabel
  }
}

# All labels.
query issueLabels(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueLabels(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "IssueLabel"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...IssueLabel
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific issue relation.
query issueRelation($id: String!) {
  issueRelation(id: $id) {
    ...IssueRelation
  }
}

query issueRelations(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issueRelations(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "IssueRelation"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...IssueRelation
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific issue.
query issue($id: String!) {
  issue(id: $id) {
    ...Issue
  }
}
# History entries associated with the issue.
query issue_history(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issue(id: $id) {
    history(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      # {
      #   "kind": "FieldDefinition",
      #   "name": {
      #     "kind": "Name",
      #     "value": "nodes"
      #   },
      #   "arguments": [],
      #   "type": {
      #     "kind": "NonNullType",
      #     "type": {
      #       "kind": "ListType",
      #       "type": {
      #         "kind": "NonNullType",
      #         "type": {
      #           "kind": "NamedType",
      #           "name": {
      #             "kind": "Name",
      #             "value": "IssueHistory"
      #           }
      #         }
      #       }
      #     }
      #   },
      #   "directives": []
      # }
      nodes {
        ...IssueHistory
      }
      # {
      #   "kind": "FieldDefinition",
      #   "name": {
      #     "kind": "Name",
      #     "value": "pageInfo"
      #   },
      #   "arguments": [],
      #   "type": {
      #     "kind": "NonNullType",
      #     "type": {
      #       "kind": "NamedType",
      #       "name": {
      #         "kind": "Name",
      #         "value": "PageInfo"
      #       }
      #     }
      #   },
      #   "directives": []
      # }
      pageInfo {
        ...PageInfo
      }
    }
  }
}

# [ALPHA] Search issues. This query is experimental and is subject to change without notice.
query issueSearch(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
  $query: String!
) {
  issueSearch(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
    query: $query
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "Issue"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...Issue
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

query issues(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  issues(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "Issue"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...Issue
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific milestone.
query milestone($id: String!) {
  milestone(id: $id) {
    ...Milestone
  }
}

# All milestones.
query milestones(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  milestones(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "Milestone"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...Milestone
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# The user's settings.
query notification {
  notification {
    ...UserSettings
  }
}

# All notifications.
query notifications(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  notifications(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "Notification"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...Notification
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# The user's notification subscriptions.
query notificationSubscription(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  notificationSubscription(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "NotificationSubscription"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...NotificationSubscription
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific organization invite.
query organizationInvite($id: String!) {
  organizationInvite(id: $id) {
    ...IssueLabel
  }
}

# All invites for the organization.
query organizationInvites(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  organizationInvites(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "OrganizationInvite"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...OrganizationInvite
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific project link.
query projectLink($id: String!) {
  projectLink(id: $id) {
    ...ProjectLink
  }
}

# All links for the project.
query ProjectLinks(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  ProjectLinks(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "ProjectLink"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...ProjectLink
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific project.
query project($id: String!) {
  project(id: $id) {
    ...Project
  }
}

# All projects.
query projects(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  projects(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "Project"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...Project
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# Sends a test push message.
query pushSubscriptionTest {
  pushSubscriptionTest {
    ...PushSubscriptionPayload
  }
}

# A specific reaction.
query reaction($id: String!) {
  reaction(id: $id) {
    ...Reaction
  }
}

query reactions(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  reactions(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "Reaction"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...Reaction
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# The organization's subscription.
query subscription {
  subscription {
    ...Subscription
  }
}

# One specific team membership.
query teamMembership($id: String!) {
  teamMembership(id: $id) {
    ...TeamMembership
  }
}

# All team memberships.
query teamMemberships(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teamMemberships(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "TeamMembership"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...TeamMembership
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific team.
query team($id: String!) {
  team(id: $id) {
    ...Team
  }
}
# Templates associated with the team.
query team_templates(
  $id: String!
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  team(id: $id) {
    templates(
      before: $before
      after: $after
      first: $first
      last: $last
      includeArchived: $includeArchived
      orderBy: $orderBy
    ) {
      # {
      #   "kind": "FieldDefinition",
      #   "name": {
      #     "kind": "Name",
      #     "value": "nodes"
      #   },
      #   "arguments": [],
      #   "type": {
      #     "kind": "NonNullType",
      #     "type": {
      #       "kind": "ListType",
      #       "type": {
      #         "kind": "NonNullType",
      #         "type": {
      #           "kind": "NamedType",
      #           "name": {
      #             "kind": "Name",
      #             "value": "Template"
      #           }
      #         }
      #       }
      #     }
      #   },
      #   "directives": []
      # }
      nodes {
        ...Template
      }
      # {
      #   "kind": "FieldDefinition",
      #   "name": {
      #     "kind": "Name",
      #     "value": "pageInfo"
      #   },
      #   "arguments": [],
      #   "type": {
      #     "kind": "NonNullType",
      #     "type": {
      #       "kind": "NamedType",
      #       "name": {
      #         "kind": "Name",
      #         "value": "PageInfo"
      #       }
      #     }
      #   },
      #   "directives": []
      # }
      pageInfo {
        ...PageInfo
      }
    }
  }
}

# All teams.
query teams(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  teams(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "Team"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...Team
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# All templates from all users.
query templates {
  templates {
    ...Template
  }
}

# A specific template.
query template($id: String!) {
  template(id: $id) {
    ...Template
  }
}

# All view preferences.
query viewPreferences(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  viewPreferences(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "ViewPreferences"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...ViewPreferences
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# A specific webhook.
query webhook($id: String!) {
  webhook(id: $id) {
    ...Webhook
  }
}

# All webhooks.
query webhooks(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  webhooks(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "Webhook"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...Webhook
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}

# One specific state.
query workflowState($id: String!) {
  workflowState(id: $id) {
    ...WorkflowState
  }
}

# All states.
query workflowStates(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $includeArchived: Boolean
  $orderBy: PaginationOrderBy
) {
  workflowStates(
    before: $before
    after: $after
    first: $first
    last: $last
    includeArchived: $includeArchived
    orderBy: $orderBy
  ) {
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "nodes"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "ListType",
    #       "type": {
    #         "kind": "NonNullType",
    #         "type": {
    #           "kind": "NamedType",
    #           "name": {
    #             "kind": "Name",
    #             "value": "WorkflowState"
    #           }
    #         }
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    nodes {
      ...WorkflowState
    }
    # {
    #   "kind": "FieldDefinition",
    #   "name": {
    #     "kind": "Name",
    #     "value": "pageInfo"
    #   },
    #   "arguments": [],
    #   "type": {
    #     "kind": "NonNullType",
    #     "type": {
    #       "kind": "NamedType",
    #       "name": {
    #         "kind": "Name",
    #         "value": "PageInfo"
    #       }
    #     }
    #   },
    #   "directives": []
    # }
    pageInfo {
      ...PageInfo
    }
  }
}
# Updates a user. Only available to organization admins and the user themselves.
mutation userUpdate($input: UpdateUserInput!, $id: String!) {
  userUpdate(input: $input, id: $id) {
    ...UserPayload
  }
}

# Suspends a user. Can only be called by an admin.
mutation userSuspend($id: String!) {
  userSuspend(id: $id) {
    ...UserAdminPayload
  }
}

# Un-suspends a user. Can only be called by an admin.
mutation userUnsuspend($id: String!) {
  userUnsuspend(id: $id) {
    ...UserAdminPayload
  }
}

# Updates the user's organization.
mutation organizationUpdate($input: UpdateOrganizationInput!) {
  organizationUpdate(input: $input) {
    ...OrganizationPayload
  }
}

# Get an organization's delete confirmation token. Administrator privileges required.
mutation organizationDeleteChallenge {
  organizationDeleteChallenge {
    ...OrganizationDeletePayload
  }
}

# Delete's an organization. Administrator privileges required.
mutation organizationDelete($input: DeleteOrganizationInput!) {
  organizationDelete(input: $input) {
    ...OrganizationDeletePayload
  }
}

# Disable organization access. Superuser privileges required.
mutation organizationToggleAccess($id: String!) {
  organizationToggleAccess(id: $id) {
    ...OrganizationAccessPayload
  }
}

# Change email domain for all users and accounts in the organization.
mutation organizationChangeEmailDomain($toDomain: String!, $fromDomain: String!, $id: String!) {
  organizationChangeEmailDomain(toDomain: $toDomain, fromDomain: $fromDomain, id: $id) {
    ...OrganizationAccessPayload
  }
}

# Toggle SAML authentication on or off for an organization. Superuser privileges required.
mutation organizationToggleSamlEnabled($id: String!) {
  organizationToggleSamlEnabled(id: $id) {
    ...OrganizationSamlConfigurePayload
  }
}

# Configure SAML authentication for an organization. Superuser privileges required.
mutation organizationConfigureSaml($samlConfiguration: SamlConfigurationInput!, $id: String!) {
  organizationConfigureSaml(samlConfiguration: $samlConfiguration, id: $id) {
    ...OrganizationSamlConfigurePayload
  }
}

# [Deprecated] Creates a new event.
mutation eventCreate($input: EventCreateInput!) {
  eventCreate(input: $input) {
    ...EventPayload
  }
}

# Creates a new API key.
mutation apiKeyCreate($input: ApiKeyCreateInput!) {
  apiKeyCreate(input: $input) {
    ...ApiKeyPayload
  }
}

# Deletes an API key.
mutation apiKeyDelete($id: String!) {
  apiKeyDelete(id: $id) {
    ...ArchivePayload
  }
}

# Finds or creates a new user account by email and sends an email with token.
mutation emailUserAccountAuthChallenge($input: EmailUserAccountAuthChallengeInput!) {
  emailUserAccountAuthChallenge(input: $input) {
    ...EmailUserAccountAuthChallengeResponse
  }
}

# Authenticates a user account via email and authentication token.
mutation emailTokenUserAccountAuth($input: TokenUserAccountAuthInput!) {
  emailTokenUserAccountAuth(input: $input) {
    ...AuthResolverResponse
  }
}

# Authenticates a user account via email and authentication token for SAML.
mutation samlTokenUserAccountAuth($input: TokenUserAccountAuthInput!) {
  samlTokenUserAccountAuth(input: $input) {
    ...AuthResolverResponse
  }
}

# Authenticate user account through Google OAuth. This is the 2nd step of OAuth flow.
mutation googleUserAccountAuth($input: GoogleUserAccountAuthInput!) {
  googleUserAccountAuth(input: $input) {
    ...AuthResolverResponse
  }
}

# Creates an organization from onboarding.
mutation createOrganizationFromOnboarding($survey: OnboardingCustomerSurvey, $input: CreateOrganizationInput!) {
  createOrganizationFromOnboarding(survey: $survey, input: $input) {
    ...CreateOrJoinOrganizationResponse
  }
}

# Join an organization from onboarding.
mutation joinOrganizationFromOnboarding($input: JoinOrganizationInput!) {
  joinOrganizationFromOnboarding(input: $input) {
    ...CreateOrJoinOrganizationResponse
  }
}

# Leave an organization.
mutation leaveOrganization($organizationId: String!) {
  leaveOrganization(organizationId: $organizationId) {
    ...CreateOrJoinOrganizationResponse
  }
}

# Updates the billing email address for the customer.
mutation billingEmailUpdate($input: BillingEmailUpdateInput!) {
  billingEmailUpdate(input: $input) {
    ...BillingEmailPayload
  }
}

# Update collaborative document with client steps.
mutation collaborativeDocumentUpdate($input: CollaborationDocumentUpdateInput!) {
  collaborativeDocumentUpdate(input: $input) {
    ...CollaborationDocumentUpdatePayload
  }
}

# Creates a new comment.
mutation commentCreate($input: CommentCreateInput!) {
  commentCreate(input: $input) {
    ...CommentPayload
  }
}

# Updates a comment.
mutation commentUpdate($input: CommentUpdateInput!, $id: String!) {
  commentUpdate(input: $input, id: $id) {
    ...CommentPayload
  }
}

# Deletes a comment.
mutation commentDelete($id: String!) {
  commentDelete(id: $id) {
    ...ArchivePayload
  }
}

# Saves user message.
mutation contactCreate($input: ContactCreateInput!) {
  contactCreate(input: $input) {
    ...ContactPayload
  }
}

# Creates a new custom view.
mutation customViewCreate($input: CustomViewCreateInput!) {
  customViewCreate(input: $input) {
    ...CustomViewPayload
  }
}

# Updates a custom view.
mutation customViewUpdate($input: CustomViewUpdateInput!, $id: String!) {
  customViewUpdate(input: $input, id: $id) {
    ...CustomViewPayload
  }
}

# Deletes a custom view.
mutation customViewDelete($id: String!) {
  customViewDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new cycle.
mutation cycleCreate($input: CycleCreateInput!) {
  cycleCreate(input: $input) {
    ...CyclePayload
  }
}

# Updates a cycle.
mutation cycleUpdate($input: CycleUpdateInput!, $id: String!) {
  cycleUpdate(input: $input, id: $id) {
    ...CyclePayload
  }
}

# Archives a cycle.
mutation cycleArchive($id: String!) {
  cycleArchive(id: $id) {
    ...ArchivePayload
  }
}

# Always fails with internal error. Used to debug logging.
mutation debugFailWithInternalError {
  debugFailWithInternalError {
    ...DebugPayload
  }
}

# Always logs an error to Sentry as warning. Used to debug logging.
mutation debugFailWithWarning {
  debugFailWithWarning {
    ...DebugPayload
  }
}

# Create the SAML test organization in development.
mutation debugCreateSAMLOrg {
  debugCreateSAMLOrg {
    ...DebugPayload
  }
}

# Unsubscribes the user from one type of emails.
mutation emailUnsubscribe($input: EmailUnsubscribeInput!) {
  emailUnsubscribe(input: $input) {
    ...EmailUnsubscribePayload
  }
}

# Creates a custom emoji.
mutation emojiCreate($input: EmojiCreateInput!) {
  emojiCreate(input: $input) {
    ...EmojiPayload
  }
}

# Deletes an emoji.
mutation emojiDelete($id: String!) {
  emojiDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new favorite (project, cycle etc).
mutation favoriteCreate($input: FavoriteCreateInput!) {
  favoriteCreate(input: $input) {
    ...FavoritePayload
  }
}

# Updates a favorite.
mutation favoriteUpdate($input: FavoriteUpdateInput!, $id: String!) {
  favoriteUpdate(input: $input, id: $id) {
    ...FavoritePayload
  }
}

# Deletes a favorite reference.
mutation favoriteDelete($id: String!) {
  favoriteDelete(id: $id) {
    ...ArchivePayload
  }
}

# Saves user feedback.
mutation feedbackCreate($input: FeedbackCreateInput!) {
  feedbackCreate(input: $input) {
    ...FeedbackPayload
  }
}

# XHR request payload to upload an images, video and other attachments directly to Linear's cloud
# storage.
mutation fileUpload($metaData: JSON, $size: Int!, $contentType: String!, $filename: String!) {
  fileUpload(metaData: $metaData, size: $size, contentType: $contentType, filename: $filename) {
    ...UploadPayload
  }
}

# Upload an image from an URL to Linear.
mutation imageUploadFromUrl($url: String!) {
  imageUploadFromUrl(url: $url) {
    ...ImageUploadFromUrlPayload
  }
}

# Connects the organization with the GitHub App.
mutation integrationGithubConnect($installationId: String!) {
  integrationGithubConnect(installationId: $installationId) {
    ...IntegrationPayload
  }
}

# Connects the organization with a GitLab Access Token.
mutation integrationGitlabConnect($gitlabUrl: String!, $accessToken: String!) {
  integrationGitlabConnect(gitlabUrl: $gitlabUrl, accessToken: $accessToken) {
    ...IntegrationPayload
  }
}

# Integrates the organization with Slack.
mutation integrationSlack($shouldUseV2Auth: Boolean, $redirectUri: String!, $code: String!) {
  integrationSlack(shouldUseV2Auth: $shouldUseV2Auth, redirectUri: $redirectUri, code: $code) {
    ...IntegrationPayload
  }
}

# Integrates your personal notifications with Slack.
mutation integrationSlackPersonal($redirectUri: String!, $code: String!) {
  integrationSlackPersonal(redirectUri: $redirectUri, code: $code) {
    ...IntegrationPayload
  }
}

# Slack webhook integration.
mutation integrationSlackPost($shouldUseV2Auth: Boolean, $redirectUri: String!, $teamId: String!, $code: String!) {
  integrationSlackPost(shouldUseV2Auth: $shouldUseV2Auth, redirectUri: $redirectUri, teamId: $teamId, code: $code) {
    ...IntegrationPayload
  }
}

# Slack integration for project notifications.
mutation integrationSlackProjectPost($redirectUri: String!, $projectId: String!, $code: String!) {
  integrationSlackProjectPost(redirectUri: $redirectUri, projectId: $projectId, code: $code) {
    ...IntegrationPayload
  }
}

# Imports custom emojis from your Slack workspace.
mutation integrationSlackImportEmojis($redirectUri: String!, $code: String!) {
  integrationSlackImportEmojis(redirectUri: $redirectUri, code: $code) {
    ...IntegrationPayload
  }
}

# Integrates the organization with Figma.
mutation integrationFigma($redirectUri: String!, $code: String!) {
  integrationFigma(redirectUri: $redirectUri, code: $code) {
    ...IntegrationPayload
  }
}

# Integrates the organization with Google Sheets.
mutation integrationGoogleSheets($code: String!) {
  integrationGoogleSheets(code: $code) {
    ...IntegrationPayload
  }
}

# Manually update Google Sheets data.
mutation refreshGoogleSheetsData($id: String!) {
  refreshGoogleSheetsData(id: $id) {
    ...IntegrationPayload
  }
}

# Integrates the organization with Sentry.
mutation integrationSentryConnect($organizationSlug: String!, $code: String!, $installationId: String!) {
  integrationSentryConnect(organizationSlug: $organizationSlug, code: $code, installationId: $installationId) {
    ...IntegrationPayload
  }
}

# Deletes an integration.
mutation integrationDelete($id: String!) {
  integrationDelete(id: $id) {
    ...ArchivePayload
  }
}

# Archives an integration resource.
mutation integrationResourceArchive($id: String!) {
  integrationResourceArchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new label.
mutation issueLabelCreate($input: IssueLabelCreateInput!) {
  issueLabelCreate(input: $input) {
    ...IssueLabelPayload
  }
}

# Updates an label.
mutation issueLabelUpdate($input: IssueLabelUpdateInput!, $id: String!) {
  issueLabelUpdate(input: $input, id: $id) {
    ...IssueLabelPayload
  }
}

# Archives an issue label.
mutation issueLabelArchive($id: String!) {
  issueLabelArchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new issue relation.
mutation issueRelationCreate($input: IssueRelationCreateInput!) {
  issueRelationCreate(input: $input) {
    ...IssueRelationPayload
  }
}

# Updates an issue relation.
mutation issueRelationUpdate($input: IssueRelationUpdateInput!, $id: String!) {
  issueRelationUpdate(input: $input, id: $id) {
    ...IssueRelationPayload
  }
}

# Deletes an issue relation.
mutation issueRelationDelete($id: String!) {
  issueRelationDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new issue.
mutation issueCreate($input: IssueCreateInput!) {
  issueCreate(input: $input) {
    ...IssuePayload
  }
}

# Updates an issue.
mutation issueUpdate($input: IssueUpdateInput!, $id: String!) {
  issueUpdate(input: $input, id: $id) {
    ...IssuePayload
  }
}

# Archives an issue.
mutation issueArchive($id: String!) {
  issueArchive(id: $id) {
    ...ArchivePayload
  }
}

# Unarchives an issue.
mutation issueUnarchive($id: String!) {
  issueUnarchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new milestone.
mutation milestoneCreate($input: MilestoneCreateInput!) {
  milestoneCreate(input: $input) {
    ...MilestonePayload
  }
}

# Updates a milestone.
mutation milestoneUpdate($input: MilestoneUpdateInput!, $id: String!) {
  milestoneUpdate(input: $input, id: $id) {
    ...MilestonePayload
  }
}

# Deletes a milestone.
mutation milestoneDelete($id: String!) {
  milestoneDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a notification.
mutation notificationCreate($input: NotificationUpdateInput!, $id: String!) {
  notificationCreate(input: $input, id: $id) {
    ...NotificationPayload
  }
}

# Updates a notification.
mutation notificationUpdate($input: NotificationUpdateInput!, $id: String!) {
  notificationUpdate(input: $input, id: $id) {
    ...NotificationPayload
  }
}

# [Deprecated] Deletes a notification.
mutation notificationDelete($id: String!) {
  notificationDelete(id: $id) {
    ...ArchivePayload
  }
}

# Archives a notification.
mutation notificationArchive($id: String!) {
  notificationArchive(id: $id) {
    ...ArchivePayload
  }
}

# Unarchives a notification.
mutation notificationUnarchive($id: String!) {
  notificationUnarchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new notification subscription for a team or a project.
mutation notificationSubscriptionCreate($input: NotificationSubscriptionCreateInput!) {
  notificationSubscriptionCreate(input: $input) {
    ...NotificationSubscriptionPayload
  }
}

# Deletes a notification subscription reference.
mutation notificationSubscriptionDelete($id: String!) {
  notificationSubscriptionDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new OAuth client.
mutation oauthClientCreate($input: OauthClientCreateInput!) {
  oauthClientCreate(input: $input) {
    ...OauthClientPayload
  }
}

# Updates an OAuth client.
mutation oauthClientUpdate($input: OauthClientUpdateInput!, $id: String!) {
  oauthClientUpdate(input: $input, id: $id) {
    ...OauthClientPayload
  }
}

# Archives an OAuth client.
mutation oauthClientArchive($id: String!) {
  oauthClientArchive(id: $id) {
    ...ArchivePayload
  }
}

# Updates an OAuth client.
mutation oauthClientRotateSecret($id: String!) {
  oauthClientRotateSecret(id: $id) {
    ...RotateSecretPayload
  }
}

# Revokes an OAuth token.
mutation oauthTokenRevoke($scope: [String!]!, $appId: String!) {
  oauthTokenRevoke(scope: $scope, appId: $appId) {
    ...OauthTokenRevokePayload
  }
}

# Verifies a domain to be added to an organization.
mutation organizationDomainVerify($input: OrganizationDomainVerificationInput!) {
  organizationDomainVerify(input: $input) {
    ...OrganizationDomainPayload
  }
}

# Adds a domain to be allowed for an organization.
mutation organizationDomainCreate($input: OrganizationDomainCreateInput!) {
  organizationDomainCreate(input: $input) {
    ...OrganizationDomainPayload
  }
}

# Deletes a domain.
mutation organizationDomainDelete($id: String!) {
  organizationDomainDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new organization invite.
mutation organizationInviteCreate($input: OrganizationInviteCreateInput!) {
  organizationInviteCreate(input: $input) {
    ...OrganizationInvitePayload
  }
}

# Re-send an organization invite.
mutation resentOrganizationInvite($id: String!) {
  resentOrganizationInvite(id: $id) {
    ...ArchivePayload
  }
}

# Deletes an organization invite.
mutation organizationInviteDelete($id: String!) {
  organizationInviteDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new project link.
mutation projectLinkCreate($input: ProjectLinkCreateInput!) {
  projectLinkCreate(input: $input) {
    ...ProjectLinkPayload
  }
}

# Deletes a project link.
mutation projectLinkDelete($id: String!) {
  projectLinkDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new project.
mutation projectCreate($input: ProjectCreateInput!) {
  projectCreate(input: $input) {
    ...ProjectPayload
  }
}

# Updates a project.
mutation projectUpdate($input: ProjectUpdateInput!, $id: String!) {
  projectUpdate(input: $input, id: $id) {
    ...ProjectPayload
  }
}

# Archives a project.
mutation projectArchive($id: String!) {
  projectArchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a push subscription.
mutation pushSubscriptionCreate($input: PushSubscriptionCreateInput!) {
  pushSubscriptionCreate(input: $input) {
    ...PushSubscriptionPayload
  }
}

# Deletes a push subscription.
mutation pushSubscriptionDelete($id: String!) {
  pushSubscriptionDelete(id: $id) {
    ...PushSubscriptionPayload
  }
}

# Creates a new reaction.
mutation reactionCreate($input: ReactionCreateInput!) {
  reactionCreate(input: $input) {
    ...ReactionPayload
  }
}

# Deletes a reaction.
mutation reactionDelete($id: String!) {
  reactionDelete(id: $id) {
    ...ArchivePayload
  }
}

# Create CSV export report for the organization.
mutation createCsvExportReport {
  createCsvExportReport {
    ...CreateCsvExportReportPayload
  }
}

# Creates a subscription session. Used internally to integrate with Stripe.
mutation subscriptionSessionCreate($plan: String!) {
  subscriptionSessionCreate(plan: $plan) {
    ...SubscriptionSessionPayload
  }
}

# Creates a subscription update session. Used internally to integrate with Stripe.
mutation subscriptionUpdateSessionCreate {
  subscriptionUpdateSessionCreate {
    ...SubscriptionSessionPayload
  }
}

# Updates a subscription.
mutation subscriptionUpdate($input: SubscriptionUpdateInput!, $id: String!) {
  subscriptionUpdate(input: $input, id: $id) {
    ...SubscriptionPayload
  }
}

# Upgrades a subscription plan.
mutation subscriptionUpgrade($type: String!, $id: String!) {
  subscriptionUpgrade(type: $type, id: $id) {
    ...SubscriptionPayload
  }
}

# Archives a subscription.
mutation subscriptionArchive($id: String!) {
  subscriptionArchive(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new team membership.
mutation teamMembershipCreate($input: TeamMembershipCreateInput!) {
  teamMembershipCreate(input: $input) {
    ...TeamMembershipPayload
  }
}

# Deletes a team membership.
mutation teamMembershipDelete($id: String!) {
  teamMembershipDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new team. The user who creates the team will automatically be added as a member to the
# newly created team.
mutation teamCreate($copySettingsFromTeamId: String, $input: TeamCreateInput!) {
  teamCreate(copySettingsFromTeamId: $copySettingsFromTeamId, input: $input) {
    ...TeamPayload
  }
}

# Updates a team.
mutation teamUpdate($input: TeamUpdateInput!, $id: String!) {
  teamUpdate(input: $input, id: $id) {
    ...TeamPayload
  }
}

# Archives a team.
mutation teamArchive($id: String!) {
  teamArchive(id: $id) {
    ...ArchivePayload
  }
}

# Deletes a team.
mutation teamDelete($id: String!) {
  teamDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new template.
mutation templateCreate($input: TemplateCreateInput!) {
  templateCreate(input: $input) {
    ...TemplatePayload
  }
}

# Updates an existing template.
mutation templateUpdate($input: TemplateUpdateInput!, $id: String!) {
  templateUpdate(input: $input, id: $id) {
    ...TemplatePayload
  }
}

# Deletes a template.
mutation templateDelete($id: String!) {
  templateDelete(id: $id) {
    ...ArchivePayload
  }
}

# Updates the user's settings.
mutation userSettingsUpdate($input: UserSettingsUpdateInput!, $id: String!) {
  userSettingsUpdate(input: $input, id: $id) {
    ...UserSettingsPayload
  }
}

# [Deprecated] Updates a user's settings flag.
mutation userSettingsFlagIncrement($flag: String!) {
  userSettingsFlagIncrement(flag: $flag) {
    ...UserSettingsFlagPayload
  }
}

# Resets user's setting flags.
mutation userSettingsFlagsReset {
  userSettingsFlagsReset {
    ...UserSettingsFlagsResetPayload
  }
}

# Updates a user's settings flag.
mutation userFlagUpdate($operation: UserFlagUpdateOperation!, $flag: UserFlagType!) {
  userFlagUpdate(operation: $operation, flag: $flag) {
    ...UserSettingsFlagPayload
  }
}

# Subscribes user to changelog newsletter.
mutation userSubscribeToNewsletter {
  userSubscribeToNewsletter {
    ...UserSubscribeToNewsletterPayload
  }
}

# Creates a new ViewPreferences object.
mutation viewPreferencesCreate($input: ViewPreferencesCreateInput!) {
  viewPreferencesCreate(input: $input) {
    ...ViewPreferencesPayload
  }
}

# Updates an existing ViewPreferences object.
mutation viewPreferencesUpdate($input: ViewPreferencesUpdateInput!, $id: String!) {
  viewPreferencesUpdate(input: $input, id: $id) {
    ...ViewPreferencesPayload
  }
}

# Deletes a ViewPreferences.
mutation viewPreferencesDelete($id: String!) {
  viewPreferencesDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new webhook.
mutation webhookCreate($input: WebhookCreateInput!) {
  webhookCreate(input: $input) {
    ...WebhookPayload
  }
}

# Updates an existing Webhook.
mutation webhookUpdate($input: WebhookUpdateInput!, $id: String!) {
  webhookUpdate(input: $input, id: $id) {
    ...WebhookPayload
  }
}

# Deletes a Webhook.
mutation webhookDelete($id: String!) {
  webhookDelete(id: $id) {
    ...ArchivePayload
  }
}

# Creates a new state, adding it to the workflow of a team.
mutation workflowStateCreate($input: WorkflowStateCreateInput!) {
  workflowStateCreate(input: $input) {
    ...WorkflowStatePayload
  }
}

# Updates a state.
mutation workflowStateUpdate($input: WorkflowStateUpdateInput!, $id: String!) {
  workflowStateUpdate(input: $input, id: $id) {
    ...WorkflowStatePayload
  }
}

# Archives a state. Only states with issues that have all been archived can be archived.
mutation workflowStateArchive($id: String!) {
  workflowStateArchive(id: $id) {
    ...ArchivePayload
  }
}
